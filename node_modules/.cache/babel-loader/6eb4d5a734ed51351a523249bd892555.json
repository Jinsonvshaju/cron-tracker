{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport {};","map":{"version":3,"mappings":"AAAA","names":[],"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/node_modules/@blueprintjs/select/src/common/itemRenderer.ts"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MouseEventHandler } from \"react\";\n\nexport interface IItemModifiers {\n    /** Whether this is the \"active\" (focused) item, meaning keyboard interactions will act upon it. */\n    active: boolean;\n\n    /** Whether this item is disabled and should ignore interactions. */\n    disabled: boolean;\n\n    /** Whether this item matches the predicate. A typical renderer could hide `false` values. */\n    matchesPredicate: boolean;\n}\n\n/**\n * An object describing how to render a particular item.\n * An `itemRenderer` receives the item as its first argument, and this object as its second argument.\n */\nexport interface IItemRendererProps {\n    /** Click event handler to select this item. */\n    handleClick: MouseEventHandler<HTMLElement>;\n\n    /** Focus event handler to set this as the \"active\" item */\n    handleFocus: () => void;\n\n    index?: number;\n\n    /** Modifiers that describe how to render this item, such as `active` or `disabled`. */\n    modifiers: IItemModifiers;\n\n    /** The current query string used to filter the items. */\n    query: string;\n}\n\n/** Type alias for a function that receives an item and props and renders a JSX element (or `null`). */\nexport type ItemRenderer<T> = (item: T, itemProps: IItemRendererProps) => JSX.Element | null;\n"]},"metadata":{},"sourceType":"module"}