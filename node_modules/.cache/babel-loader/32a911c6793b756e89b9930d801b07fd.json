{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BLUEPRINT_ICONS_16_CODEPOINTS } from \"./generated/16px/blueprint-icons-16\"; // icon sets are identical aside from SVG paths, so we just import the info for the 16px set\n\n/**\n * Icon codepoints as base 10 number strings. If you need to render these strings\n * into an SVG document or as `::before` pseudo content, consider using `getIconContentString()`\n * instead.\n */\n\nexport var IconCodepoints = BLUEPRINT_ICONS_16_CODEPOINTS;\n/**\n * Returns the hex code content string which represents the codepoint in the icon font\n * for a given icon. You can render this string to the DOM and if the icon font is loaded\n * as an active font family, this string will be replaced with the associated icon.\n */\n\nexport function getIconContentString(icon) {\n  // parse base 10 number from string, then convert to hex code\n  return String.fromCodePoint(parseInt(IconCodepoints[icon], 10));\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,SAASA,6BAAT,QAA8C,qCAA9C,C,CAEA;;AAEA;;;;;;AAKA,OAAO,IAAMC,cAAc,GAAGD,6BAAvB;AAEP;;;;;;AAKA,OAAM,SAAUE,oBAAV,CAA+BC,IAA/B,EAA6C;AAC/C;AACA,SAAOC,MAAM,CAACC,aAAP,CAAqBC,QAAQ,CAACL,cAAc,CAACE,IAAD,CAAf,EAAuB,EAAvB,CAA7B,CAAP;AACH","names":["BLUEPRINT_ICONS_16_CODEPOINTS","IconCodepoints","getIconContentString","icon","String","fromCodePoint","parseInt"],"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/node_modules/@blueprintjs/icons/src/iconCodepoints.ts"],"sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BLUEPRINT_ICONS_16_CODEPOINTS } from \"./generated/16px/blueprint-icons-16\";\nimport type { IconName } from \"./iconNames\";\n// icon sets are identical aside from SVG paths, so we just import the info for the 16px set\n\n/**\n * Icon codepoints as base 10 number strings. If you need to render these strings\n * into an SVG document or as `::before` pseudo content, consider using `getIconContentString()`\n * instead.\n */\nexport const IconCodepoints = BLUEPRINT_ICONS_16_CODEPOINTS;\n\n/**\n * Returns the hex code content string which represents the codepoint in the icon font\n * for a given icon. You can render this string to the DOM and if the icon font is loaded\n * as an active font family, this string will be replaced with the associated icon.\n */\nexport function getIconContentString(icon: IconName) {\n    // parse base 10 number from string, then convert to hex code\n    return String.fromCodePoint(parseInt(IconCodepoints[icon], 10));\n}\n"]},"metadata":{},"sourceType":"module"}