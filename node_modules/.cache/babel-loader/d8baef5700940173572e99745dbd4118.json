{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { clamp } from \"../../common/utils\";\n\nvar ProgressBar =\n/** @class */\nfunction (_super) {\n  __extends(ProgressBar, _super);\n\n  function ProgressBar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ProgressBar.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        _c = _b.animate,\n        animate = _c === void 0 ? true : _c,\n        className = _b.className,\n        intent = _b.intent,\n        _d = _b.stripes,\n        stripes = _d === void 0 ? true : _d,\n        value = _b.value;\n    var classes = classNames(Classes.PROGRESS_BAR, Classes.intentClass(intent), (_a = {}, _a[Classes.PROGRESS_NO_ANIMATION] = !animate, _a[Classes.PROGRESS_NO_STRIPES] = !stripes, _a), className);\n    var percent = value == null ? undefined : 100 * clamp(value, 0, 1); // don't set width if value is null (rely on default CSS value)\n\n    var width = percent == null ? undefined : percent + \"%\";\n    return React.createElement(\"div\", {\n      \"aria-valuemax\": 100,\n      \"aria-valuemin\": 0,\n      \"aria-valuenow\": percent == null ? undefined : Math.round(percent),\n      className: classes,\n      role: \"progressbar\"\n    }, React.createElement(\"div\", {\n      className: Classes.PROGRESS_METER,\n      style: {\n        width: width\n      }\n    }));\n  };\n\n  ProgressBar.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".ProgressBar\");\n  return ProgressBar;\n}(AbstractPureComponent2);\n\nexport { ProgressBar };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,sBAAT,EAAiCC,OAAjC,QAAgD,cAAhD;AACA,SAASC,kBAAT,QAAuD,oBAAvD;AACA,SAASC,KAAT,QAAsB,oBAAtB;;AA4BA;AAAA;AAAA;AAAiCC;;AAAjC;;AA2BC;;AAxBUC,iCAAP;;;AACU,aAA+D,KAAKC,KAApE;AAAA,QAAEC,eAAF;AAAA,QAAEC,OAAO,mBAAG,IAAH,GAAOD,EAAhB;AAAA,QAAkBE,SAAS,eAA3B;AAAA,QAA6BC,MAAM,YAAnC;AAAA,QAAqCC,eAArC;AAAA,QAAqCC,OAAO,mBAAG,IAAH,GAAOD,EAAnD;AAAA,QAAqDE,KAAK,WAA1D;AACN,QAAMC,OAAO,GAAGhB,UAAU,CACtBG,OAAO,CAACc,YADc,EAEtBd,OAAO,CAACe,WAAR,CAAoBN,MAApB,CAFsB,GAEKO,SACzBA,GAAChB,OAAO,CAACiB,qBAAT,IAAiC,CAACV,OADT,EACkBS,GAAChB,OAAO,CAACkB,mBAAT,IAA+B,CAACP,OADlD,EACyDK,EAH9D,GAItBR,SAJsB,CAA1B;AAMA,QAAMW,OAAO,GAAGP,KAAK,IAAI,IAAT,GAAgBQ,SAAhB,GAA4B,MAAMlB,KAAK,CAACU,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAvD,CARJ,CASI;;AACA,QAAMS,KAAK,GAAGF,OAAO,IAAI,IAAX,GAAkBC,SAAlB,GAA8BD,OAAO,GAAG,GAAtD;AAEA,WACIrB;AAAA,uBACmB,GADnB;AACsB,uBACH,CAFnB;AAEoB,uBACDqB,OAAO,IAAI,IAAX,GAAkBC,SAAlB,GAA8BE,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAHjD;AAIIX,eAAS,EAAEK,OAJf;AAKIW,UAAI,EAAC;AALT,OAOI1B;AAAKU,eAAS,EAAER,OAAO,CAACyB,cAAxB;AAAwCC,WAAK,EAAE;AAAEL,aAAK;AAAP;AAA/C,MAPJ,CADJ;AAWH,GAvBM;;AAFOjB,4BAAc,UAAGH,kBAAH,EAAqB,cAArB,CAAd;AA0BlB;AAAC,CA3BD,CAAiCF,sBAAjC;;SAAaK","names":["classNames","React","AbstractPureComponent2","Classes","DISPLAYNAME_PREFIX","clamp","__extends","ProgressBar","props","_c","animate","className","intent","_d","stripes","value","classes","PROGRESS_BAR","intentClass","_a","PROGRESS_NO_ANIMATION","PROGRESS_NO_STRIPES","percent","undefined","width","Math","round","role","PROGRESS_METER","style"],"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/node_modules/@blueprintjs/core/src/components/progress-bar/progressBar.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, IntentProps, Props } from \"../../common/props\";\nimport { clamp } from \"../../common/utils\";\n\n// eslint-disable-next-line deprecation/deprecation\nexport type ProgressBarProps = IProgressBarProps;\n/** @deprecated use ProgressBarProps */\nexport interface IProgressBarProps extends Props, IntentProps {\n    /**\n     * Whether the background should animate.\n     *\n     * @default true\n     */\n    animate?: boolean;\n\n    /**\n     * Whether the background should be striped.\n     *\n     * @default true\n     */\n    stripes?: boolean;\n\n    /**\n     * A value between 0 and 1 (inclusive) representing how far along the operation is.\n     * Values below 0 or above 1 will be interpreted as 0 or 1, respectively.\n     * Omitting this prop will result in an \"indeterminate\" progress meter that fills the entire bar.\n     */\n    value?: number;\n}\n\nexport class ProgressBar extends AbstractPureComponent2<ProgressBarProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.ProgressBar`;\n\n    public render() {\n        const { animate = true, className, intent, stripes = true, value } = this.props;\n        const classes = classNames(\n            Classes.PROGRESS_BAR,\n            Classes.intentClass(intent),\n            { [Classes.PROGRESS_NO_ANIMATION]: !animate, [Classes.PROGRESS_NO_STRIPES]: !stripes },\n            className,\n        );\n        const percent = value == null ? undefined : 100 * clamp(value, 0, 1);\n        // don't set width if value is null (rely on default CSS value)\n        const width = percent == null ? undefined : percent + \"%\";\n\n        return (\n            <div\n                aria-valuemax={100}\n                aria-valuemin={0}\n                aria-valuenow={percent == null ? undefined : Math.round(percent)}\n                className={classes}\n                role=\"progressbar\"\n            >\n                <div className={Classes.PROGRESS_METER} style={{ width }} />\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}