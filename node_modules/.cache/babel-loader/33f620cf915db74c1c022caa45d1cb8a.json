{"ast":null,"code":"var _jsxFileName = \"/home/jinsonshaju/collateral/collateral-email-tracker/src/components/cronInputForm/CronInputForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport Button from \"../button/Button\";\nimport config from \"../../config\";\nimport FormSelector from \"../form-selector/FormSelector\";\nimport { API } from \"../util/api/Api.js\";\nimport \"./cronInputForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet api = new API();\nconst startIndex = 0;\nconst defaultOptions = {\n  clientNames: getClientName(config.clients),\n  exchanges: getExchangeName(config.exchanges),\n  envs: getEnvs(getClientName(config.clients)[startIndex].value),\n  timeZones: getTimeZones(config.timeZones),\n  reportCycles: getReportCycles(config.reportCycles),\n  ids: []\n};\nconst defaultFormFields = {\n  cron: \"\",\n  name: \"\",\n  clientName: defaultOptions.clientNames[startIndex].value,\n  exchange: defaultOptions.exchanges[startIndex].value,\n  env: defaultOptions.envs[startIndex].value,\n  timeZone: defaultOptions.timeZones[startIndex].value,\n  reportCycle: defaultOptions.reportCycles[startIndex].value,\n  id: 1\n};\n\nfunction getTimeZones(data) {\n  var timeZones = [];\n  Object.values(data).forEach(element => {\n    timeZones.push(element.name);\n  });\n  return timeZones;\n}\n\nfunction getExchangeName(data) {\n  return Object.values(data);\n}\n\nfunction getReportCycles(data) {\n  return Object.values(data);\n}\n\nfunction getEnvs(client) {\n  return Object.values(config.clients[client].envs);\n}\n\nfunction getClientName(data) {\n  var clients = [];\n  Object.values(data).forEach(element => {\n    clients.push(element.name);\n  });\n  return clients;\n}\n\nfunction CronInputForm(props) {\n  _s();\n\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    name,\n    cron,\n    clientName,\n    exchange,\n    env,\n    timeZone,\n    reportCycle,\n    id\n  } = formFields;\n  const [cronMessage, setCronMessage] = useState(\"cron\");\n  const [records, setRecords] = useState([]);\n  const [addNewEntryStatus, setAddNewEntryStatus] = useState(false);\n  const [options, setOptions] = useState(defaultOptions);\n  const {\n    clientNames,\n    exchanges,\n    envs,\n    timeZones,\n    reportCycles,\n    ids\n  } = options;\n  useEffect(() => {\n    getEntries();\n    console.log(\"Cron Input form page reloaded\"); //eslint-disable-next-line\n  }, [addNewEntryStatus]);\n\n  const handleReset = () => {\n    setFormFields(defaultFormFields);\n    setOptions(defaultOptions);\n    setCronMessage(\"cron\");\n    setAddNewEntryStatus(!addNewEntryStatus);\n  };\n\n  const addNewEntry = event => {\n    event.preventDefault();\n    return new Promise(resolve => {\n      api.addNewEntry(formFields).then(res => {\n        alert(res.data.message);\n\n        if (res.data.message.includes(\"Success\")) {\n          handleReset();\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  };\n\n  const getEntries = () => {\n    return new Promise(resolve => {\n      api.getRecords().then(res => {\n        setRecords(res.data.message);\n        var ids = [];\n        res.data.message.forEach(element => {\n          ids.push({\n            label: element.id,\n            value: element.id\n          });\n        });\n        setOptions({ ...options,\n          ids: ids\n        });\n        const record = getRecord(formFields.id, res.data.message);\n        setFormFields({ ...formFields,\n          name: record.name,\n          cron: record.cron,\n          exchange: record.exchange,\n          env: record.env,\n          timeZone: record.timeZone,\n          reportCycle: record.reportCycle,\n          clientName: record.className\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  };\n\n  const handleUpdate = () => {\n    if (formFields.name.trim().length > 0 && formFields.cron.trim().length > 0) {\n      return new Promise(resolve => {\n        api.updateEntry(formFields).then(res => {\n          alert(res.data.message);\n\n          if (res.data.message.includes(\"Success\")) {\n            handleReset();\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      });\n    } else {\n      alert(\"Please enter name and valid cron\");\n    }\n  };\n\n  const setCronInfo = cron => {\n    return new Promise(resolve => {\n      api.getCronInfo(cron).then(res => {\n        setCronMessage(res.data.message);\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    var newFormField = formFields;\n    newFormField = { ...newFormField,\n      [name]: value\n    };\n\n    if (name === \"clientName\") {\n      const newEnvs = getEnvs(value);\n      setOptions({ ...options,\n        envs: newEnvs\n      });\n      newFormField = { ...newFormField,\n        env: newEnvs[startIndex].value\n      };\n    } else if (name === \"cron\") {\n      if (value.trim().length > 0) {\n        setCronInfo(value);\n      } else setCronMessage(\"cron\");\n    } else if (name === \"id\") {\n      const record = getRecord(value, records);\n      newFormField = { ...newFormField,\n        name: record.name,\n        cron: record.cron,\n        exchange: record.exchange,\n        env: record.env,\n        timeZone: record.timeZone,\n        reportCycle: record.reportCycle,\n        clientName: record.className\n      };\n    }\n\n    setFormFields(newFormField);\n  };\n\n  const getRecord = (id, entries) => {\n    var obj;\n    records.forEach(element => {\n      if (element.id.toString() === id.toString()) {\n        obj = element;\n      }\n    });\n    return obj;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNewEntry,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Name\",\n        type: \"text\",\n        required: true,\n        onChange: handleChange,\n        name: \"name\",\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: cronMessage,\n        type: \"text\",\n        required: true,\n        onChange: handleChange,\n        name: \"cron\",\n        value: cron\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"style\",\n        children: [/*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"ID\",\n          options: ids,\n          name: \"id\",\n          onChange: handleChange,\n          value: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"Client Names\",\n          options: clientNames,\n          onChange: handleChange,\n          name: \"clientName\",\n          value: clientName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"Exchanges\",\n          options: exchanges,\n          onChange: handleChange,\n          name: \"exchange\",\n          value: exchange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"Envs\",\n          options: envs,\n          name: \"env\",\n          onChange: handleChange,\n          value: env\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"Report Cycles\",\n          options: reportCycles,\n          name: \"reportCycle\",\n          onChange: handleChange,\n          value: reportCycle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"Time Zones\",\n          options: timeZones,\n          name: \"timeZone\",\n          onChange: handleChange,\n          value: timeZone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"style\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          buttonType: \"google\",\n          type: \"submit\",\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: handleReset,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"style\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: handleUpdate,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), records.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Client\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Env\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Exchange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cron\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time Zone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Report Cycle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"CreatedTs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), records.map((val, key) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.client\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.env\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.exchange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.cron\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.time_zone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.report_cycle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.created_time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 21\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CronInputForm, \"UAE+E0VxgHwu8RxB/JdtWFqLmBY=\");\n\n_c = CronInputForm;\nexport default CronInputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CronInputForm\");","map":{"version":3,"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/src/components/cronInputForm/CronInputForm.jsx"],"names":["React","useState","useEffect","FormInput","Button","config","FormSelector","API","api","startIndex","defaultOptions","clientNames","getClientName","clients","exchanges","getExchangeName","envs","getEnvs","value","timeZones","getTimeZones","reportCycles","getReportCycles","ids","defaultFormFields","cron","name","clientName","exchange","env","timeZone","reportCycle","id","data","Object","values","forEach","element","push","client","CronInputForm","props","formFields","setFormFields","cronMessage","setCronMessage","records","setRecords","addNewEntryStatus","setAddNewEntryStatus","options","setOptions","getEntries","console","log","handleReset","addNewEntry","event","preventDefault","Promise","resolve","then","res","alert","message","includes","catch","err","getRecords","label","record","getRecord","className","handleUpdate","trim","length","updateEntry","setCronInfo","getCronInfo","handleChange","target","newFormField","newEnvs","entries","obj","toString","map","val","key","time_zone","report_cycle","created_time"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport Button from \"../button/Button\";\nimport config from \"../../config\";\nimport FormSelector from \"../form-selector/FormSelector\";\nimport { API } from \"../util/api/Api.js\";\nimport \"./cronInputForm.css\";\nlet api = new API();\nconst startIndex = 0;\n\nconst defaultOptions = {\n  clientNames: getClientName(config.clients),\n  exchanges: getExchangeName(config.exchanges),\n  envs: getEnvs(getClientName(config.clients)[startIndex].value),\n  timeZones: getTimeZones(config.timeZones),\n  reportCycles: getReportCycles(config.reportCycles),\n  ids: [],\n};\n\nconst defaultFormFields = {\n  cron: \"\",\n  name: \"\",\n  clientName: defaultOptions.clientNames[startIndex].value,\n  exchange: defaultOptions.exchanges[startIndex].value,\n  env: defaultOptions.envs[startIndex].value,\n  timeZone: defaultOptions.timeZones[startIndex].value,\n  reportCycle: defaultOptions.reportCycles[startIndex].value,\n  id: 1,\n};\n\nfunction getTimeZones(data) {\n  var timeZones = [];\n  Object.values(data).forEach((element) => {\n    timeZones.push(element.name);\n  });\n  return timeZones;\n}\n\nfunction getExchangeName(data) {\n  return Object.values(data);\n}\n\nfunction getReportCycles(data) {\n  return Object.values(data);\n}\n\nfunction getEnvs(client) {\n  return Object.values(config.clients[client].envs);\n}\n\nfunction getClientName(data) {\n  var clients = [];\n  Object.values(data).forEach((element) => {\n    clients.push(element.name);\n  });\n  return clients;\n}\n\nfunction CronInputForm(props) {\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const { name, cron, clientName, exchange, env, timeZone, reportCycle, id } =\n    formFields;\n\n  const [cronMessage, setCronMessage] = useState(\"cron\");\n\n  const [records, setRecords] = useState([]);\n\n  const [addNewEntryStatus, setAddNewEntryStatus] = useState(false);\n\n  const [options, setOptions] = useState(defaultOptions);\n  const { clientNames, exchanges, envs, timeZones, reportCycles, ids } =\n    options;\n\n  useEffect(() => {\n    getEntries();\n    console.log(\"Cron Input form page reloaded\");\n    //eslint-disable-next-line\n  }, [addNewEntryStatus]);\n\n  const handleReset = () => {\n    setFormFields(defaultFormFields);\n    setOptions(defaultOptions);\n    setCronMessage(\"cron\");\n    setAddNewEntryStatus(!addNewEntryStatus);\n  };\n  const addNewEntry = (event) => {\n    event.preventDefault();\n    return new Promise((resolve) => {\n      api\n        .addNewEntry(formFields)\n        .then((res) => {\n          alert(res.data.message);\n          if (res.data.message.includes(\"Success\")) {\n            handleReset();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    });\n  };\n\n  const getEntries = () => {\n    return new Promise((resolve) => {\n      api\n        .getRecords()\n        .then((res) => {\n          setRecords(res.data.message);\n          var ids = [];\n          res.data.message.forEach((element) => {\n            ids.push({ label: element.id, value: element.id });\n          });\n          setOptions({ ...options, ids: ids });\n          const record = getRecord(formFields.id,res.data.message);\n          setFormFields({\n            ...formFields,\n            name: record.name,\n            cron: record.cron,\n            exchange: record.exchange,\n            env:record.env,\n            timeZone:record.timeZone,\n            reportCycle:record.reportCycle,\n            clientName:record.className,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    });\n  };\n\n  const handleUpdate = () => {\n    if (\n      formFields.name.trim().length > 0 &&\n      formFields.cron.trim().length > 0\n    ) {\n      return new Promise((resolve) => {\n        api\n          .updateEntry(formFields)\n          .then((res) => {\n            alert(res.data.message);\n            if (res.data.message.includes(\"Success\")) {\n              handleReset();\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      });\n    } else {\n      alert(\"Please enter name and valid cron\");\n    }\n  };\n\n  const setCronInfo = (cron) => {\n    return new Promise((resolve) => {\n      api\n        .getCronInfo(cron)\n        .then((res) => {\n          setCronMessage(res.data.message);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    });\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    var newFormField = formFields;\n    newFormField = { ...newFormField, [name]: value };\n    if (name === \"clientName\") {\n      const newEnvs = getEnvs(value);\n      setOptions({ ...options, envs: newEnvs });\n      newFormField = { ...newFormField, env: newEnvs[startIndex].value };\n    } else if (name === \"cron\") {\n      if (value.trim().length > 0) {\n        setCronInfo(value);\n      } else setCronMessage(\"cron\");\n    } else if (name === \"id\") {\n      const record = getRecord(value,records);\n      newFormField = {\n        ...newFormField,\n        name: record.name,\n        cron: record.cron,\n        exchange: record.exchange,\n        env:record.env,\n        timeZone:record.timeZone,\n        reportCycle:record.reportCycle,\n        clientName:record.className,\n      };\n    }\n    setFormFields(newFormField);\n  };\n\n  const getRecord = (id,entries) => {\n    var obj;\n    records.forEach((element) => {\n      if (element.id.toString() === id.toString()) {\n        obj = element;\n      }\n    });\n    return obj;\n  };\n\n  return (\n    <div>\n      <form onSubmit={addNewEntry}>\n        <FormInput\n          label=\"Name\"\n          type=\"text\"\n          required\n          onChange={handleChange}\n          name=\"name\"\n          value={name}\n        />\n\n        <FormInput\n          label={cronMessage}\n          type=\"text\"\n          required\n          onChange={handleChange}\n          name=\"cron\"\n          value={cron}\n        />\n        <div className=\"style\">\n          <FormSelector\n            label=\"ID\"\n            options={ids}\n            name=\"id\"\n            onChange={handleChange}\n            value={id}\n          />\n          <FormSelector\n            label=\"Client Names\"\n            options={clientNames}\n            onChange={handleChange}\n            name=\"clientName\"\n            value={clientName}\n          />\n          <FormSelector\n            label=\"Exchanges\"\n            options={exchanges}\n            onChange={handleChange}\n            name=\"exchange\"\n            value={exchange}\n          />\n          <FormSelector\n            label=\"Envs\"\n            options={envs}\n            name=\"env\"\n            onChange={handleChange}\n            value={env}\n          />\n          <FormSelector\n            label=\"Report Cycles\"\n            options={reportCycles}\n            name=\"reportCycle\"\n            onChange={handleChange}\n            value={reportCycle}\n          />\n          <FormSelector\n            label=\"Time Zones\"\n            options={timeZones}\n            name=\"timeZone\"\n            onChange={handleChange}\n            value={timeZone}\n          />\n        </div>\n        <div className=\"style\">\n          <Button buttonType=\"google\" type=\"submit\">\n            ADD\n          </Button>\n          <Button type=\"button\" onClick={handleReset}>\n            Clear\n          </Button>\n        </div>\n        <div className=\"style\">\n          <Button type=\"button\" onClick={handleUpdate}>\n            Update\n          </Button>\n        </div>\n      </form>\n      {records.length > 0 ? (\n        <div className=\"App\">\n          <table>\n            <tbody>\n              <tr>\n                <th>ID</th>\n                <th>Name</th>\n                <th>Client</th>\n                <th>Env</th>\n                <th>Exchange</th>\n                <th>Cron</th>\n                <th>Time Zone</th>\n                <th>Report Cycle</th>\n                <th>CreatedTs</th>\n              </tr>\n              {records.map((val, key) => {\n                return (\n                  <tr key={key}>\n                    <td>{val.id}</td>\n                    <td>{val.name}</td>\n                    <td>{val.client}</td>\n                    <td>{val.env}</td>\n                    <td>{val.exchange}</td>\n                    <td>{val.cron}</td>\n                    <td>{val.time_zone}</td>\n                    <td>{val.report_cycle}</td>\n                    <td>{val.created_time}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default CronInputForm;\n"]},"metadata":{},"sourceType":"module"}