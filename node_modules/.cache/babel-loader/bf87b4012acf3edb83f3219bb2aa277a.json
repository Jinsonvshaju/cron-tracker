{"ast":null,"code":"var _jsxFileName = \"/home/jinsonshaju/collateral/collateral-email-tracker/src/components/cronInputForm/CronInputForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport Button from \"../button/Button\";\nimport config from \"../../config\";\nimport FormSelector from \"../form-selector/FormSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultOptions = {\n  clientNames: getClientName(config.clients),\n  exchanges: getExchangeName(config.exchanges),\n  envs: getEnvs(\"jpm\")\n};\nconst defaultFormFields = {\n  cron: \"\",\n  name: \"\",\n  clientName: defaultOptions.clientNames[0].value,\n  exchange: defaultOptions.exchanges[0].value,\n  env: defaultOptions.envs[0].value\n};\n\nfunction getExchangeName(data) {\n  return Object.values(data);\n}\n\nfunction getEnvs(client) {\n  return Object.values(config.clients[client].envs);\n}\n\nfunction getClientName(data) {\n  var clients = [];\n  Object.values(data).forEach(element => {\n    clients.push(element.name);\n  });\n  return clients;\n}\n\nfunction CronInputForm(props) {\n  _s();\n\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    name,\n    cron,\n    clientName,\n    exchange,\n    env\n  } = formFields;\n  const {\n    clientNames,\n    exchanges,\n    envs\n  } = defaultOptions;\n  console.log(\"chnages\");\n  console.log(formFields);\n\n  const handleSubmit = () => {// console.log(getClientName(config.clients));\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({ ...formFields,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Name\",\n        type: \"text\",\n        required: true,\n        onChange: handleChange,\n        name: \"name\",\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Cron\",\n        type: \"text\",\n        required: true,\n        onChange: handleChange,\n        name: \"cron\",\n        value: cron\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n        label: \"Client Names\",\n        options: clientNames,\n        onChange: handleChange,\n        name: \"clientName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n        label: \"Exchanges\",\n        options: exchanges,\n        onChange: handleChange,\n        name: \"exchange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n        label: \"Envs\",\n        options: envs,\n        name: \"env\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CronInputForm, \"BSTP5B8VO6H/Fwu712VTuD9hH54=\");\n\n_c = CronInputForm;\nexport default CronInputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CronInputForm\");","map":{"version":3,"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/src/components/cronInputForm/CronInputForm.jsx"],"names":["React","useState","FormInput","Button","config","FormSelector","defaultOptions","clientNames","getClientName","clients","exchanges","getExchangeName","envs","getEnvs","defaultFormFields","cron","name","clientName","value","exchange","env","data","Object","values","client","forEach","element","push","CronInputForm","props","formFields","setFormFields","console","log","handleSubmit","handleChange","event","target"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport Button from \"../button/Button\";\nimport config from \"../../config\";\nimport FormSelector from \"../form-selector/FormSelector\";\n\nconst defaultOptions = {\n  clientNames: getClientName(config.clients),\n  exchanges: getExchangeName(config.exchanges),\n  envs: getEnvs(\"jpm\"),\n};\n\nconst defaultFormFields = {\n  cron: \"\",\n  name: \"\",\n  clientName: defaultOptions.clientNames[0].value,\n  exchange: defaultOptions.exchanges[0].value,\n  env: defaultOptions.envs[0].value,\n};\n\nfunction getExchangeName(data) {\n  return Object.values(data);\n}\n\nfunction getEnvs(client) {\n  return Object.values(config.clients[client].envs);\n}\n\nfunction getClientName(data) {\n  var clients = [];\n  Object.values(data).forEach((element) => {\n    clients.push(element.name);\n  });\n  return clients;\n}\n\nfunction CronInputForm(props) {\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const { name, cron, clientName, exchange, env } = formFields;\n  const { clientNames, exchanges, envs } = defaultOptions;\n  console.log(\"chnages\");\n  console.log(formFields);\n\n  const handleSubmit = () => {\n    // console.log(getClientName(config.clients));\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormFields({ ...formFields, [name]: value });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          label=\"Name\"\n          type=\"text\"\n          required\n          onChange={handleChange}\n          name=\"name\"\n          value={name}\n        />\n\n        <FormInput\n          label=\"Cron\"\n          type=\"text\"\n          required\n          onChange={handleChange}\n          name=\"cron\"\n          value={cron}\n        />\n        <FormSelector\n          label=\"Client Names\"\n          options={clientNames}\n          onChange={handleChange}\n          name=\"clientName\"\n        />\n        <FormSelector\n          label=\"Exchanges\"\n          options={exchanges}\n          onChange={handleChange}\n          name=\"exchange\"\n        />\n        <FormSelector\n          label=\"Envs\"\n          options={envs}\n          name=\"env\"\n          onChange={handleChange}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </div>\n  );\n}\n\nexport default CronInputForm;\n"]},"metadata":{},"sourceType":"module"}