{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport * as React from \"react\";\nimport { HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT, HOTKEYS_WARN_DECORATOR_NO_METHOD } from \"../../common/errors\";\nimport { getDisplayName, isFunction } from \"../../common/utils\";\nimport { HotkeyScope, HotkeysEvents } from \"./hotkeysEvents\";\n/* eslint-disable deprecation/deprecation */\n\n/** @deprecated use `useHotkeys` hook or `<HotkeysTarget2>` component */\n\nexport function HotkeysTarget(WrappedComponent) {\n  var _a;\n\n  if (!isFunction(WrappedComponent.prototype.renderHotkeys)) {\n    console.warn(HOTKEYS_WARN_DECORATOR_NO_METHOD);\n  }\n\n  return _a =\n  /** @class */\n  function (_super) {\n    __extends(HotkeysTargetClass, _super);\n\n    function HotkeysTargetClass() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n      /** @internal */\n\n\n      _this.globalHotkeysEvents = new HotkeysEvents(HotkeyScope.GLOBAL);\n      /** @internal */\n\n      _this.localHotkeysEvents = new HotkeysEvents(HotkeyScope.LOCAL);\n      return _this;\n    }\n\n    HotkeysTargetClass.prototype.componentDidMount = function () {\n      if (_super.prototype.componentDidMount != null) {\n        _super.prototype.componentDidMount.call(this);\n      } // attach global key event listeners\n\n\n      document.addEventListener(\"keydown\", this.globalHotkeysEvents.handleKeyDown);\n      document.addEventListener(\"keyup\", this.globalHotkeysEvents.handleKeyUp);\n    };\n\n    HotkeysTargetClass.prototype.componentWillUnmount = function () {\n      var _a;\n\n      (_a = _super.prototype.componentWillUnmount) === null || _a === void 0 ? void 0 : _a.call(this);\n      document.removeEventListener(\"keydown\", this.globalHotkeysEvents.handleKeyDown);\n      document.removeEventListener(\"keyup\", this.globalHotkeysEvents.handleKeyUp);\n      this.globalHotkeysEvents.clear();\n      this.localHotkeysEvents.clear();\n    };\n\n    HotkeysTargetClass.prototype.render = function () {\n      var _this = this;\n\n      var element = _super.prototype.render.call(this);\n\n      if (element == null) {\n        // always return `element` in case caller is distinguishing between `null` and `undefined`\n        return element;\n      }\n\n      if (!React.isValidElement(element)) {\n        console.warn(HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT);\n        return element;\n      }\n\n      if (isFunction(this.renderHotkeys)) {\n        var hotkeys = this.renderHotkeys();\n\n        if (this.localHotkeysEvents) {\n          this.localHotkeysEvents.setHotkeys(hotkeys.props);\n        }\n\n        if (this.globalHotkeysEvents) {\n          this.globalHotkeysEvents.setHotkeys(hotkeys.props);\n        }\n\n        if (this.localHotkeysEvents.count() > 0) {\n          var tabIndex = hotkeys.props.tabIndex === undefined ? 0 : hotkeys.props.tabIndex;\n          var _a = element.props,\n              existingKeyDown_1 = _a.onKeyDown,\n              existingKeyUp_1 = _a.onKeyUp;\n\n          var handleKeyDownWrapper = function (e) {\n            _this.localHotkeysEvents.handleKeyDown(e.nativeEvent);\n\n            existingKeyDown_1 === null || existingKeyDown_1 === void 0 ? void 0 : existingKeyDown_1(e);\n          };\n\n          var handleKeyUpWrapper = function (e) {\n            _this.localHotkeysEvents.handleKeyUp(e.nativeEvent);\n\n            existingKeyUp_1 === null || existingKeyUp_1 === void 0 ? void 0 : existingKeyUp_1(e);\n          };\n\n          return React.cloneElement(element, {\n            onKeyDown: handleKeyDownWrapper,\n            onKeyUp: handleKeyUpWrapper,\n            tabIndex: tabIndex\n          });\n        }\n      }\n\n      return element;\n    };\n\n    return HotkeysTargetClass;\n  }(WrappedComponent), _a.displayName = \"HotkeysTarget(\".concat(getDisplayName(WrappedComponent), \")\"), _a;\n}","map":{"version":3,"mappings":"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","names":["React","HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT","HOTKEYS_WARN_DECORATOR_NO_METHOD","getDisplayName","isFunction","HotkeyScope","HotkeysEvents","HotkeysTarget","WrappedComponent","prototype","renderHotkeys","console","warn","__extends","_this","GLOBAL","LOCAL","HotkeysTargetClass","_super","componentDidMount","call","document","addEventListener","globalHotkeysEvents","handleKeyDown","handleKeyUp","componentWillUnmount","_a","removeEventListener","clear","localHotkeysEvents","element","render","isValidElement","hotkeys","setHotkeys","props","count","tabIndex","undefined","existingKeyDown_1","existingKeyUp_1","handleKeyDownWrapper","e","nativeEvent","handleKeyUpWrapper","cloneElement","onKeyDown","onKeyUp"],"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/node_modules/@blueprintjs/core/src/components/hotkeys/hotkeysTarget.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nimport { IConstructor } from \"../../common/constructor\";\nimport { HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT, HOTKEYS_WARN_DECORATOR_NO_METHOD } from \"../../common/errors\";\nimport { getDisplayName, isFunction } from \"../../common/utils\";\nimport { HotkeyScope, HotkeysEvents } from \"./hotkeysEvents\";\nimport { IHotkeysProps } from \"./hotkeysTypes\";\n\nexport interface IHotkeysTargetComponent extends React.Component {\n    /** Components decorated with the `@HotkeysTarget` decorator must implement React's component `render` function. */\n    render(): React.ReactElement<any> | null | undefined;\n\n    /**\n     * Components decorated with the `@HotkeysTarget` decorator must implement\n     * this method, and it must return a `Hotkeys` React element.\n     */\n    renderHotkeys: () => React.ReactElement<IHotkeysProps>;\n}\n\n/* eslint-disable deprecation/deprecation */\n\n/** @deprecated use `useHotkeys` hook or `<HotkeysTarget2>` component */\nexport function HotkeysTarget<T extends IConstructor<IHotkeysTargetComponent>>(WrappedComponent: T) {\n    if (!isFunction(WrappedComponent.prototype.renderHotkeys)) {\n        console.warn(HOTKEYS_WARN_DECORATOR_NO_METHOD);\n    }\n\n    return class HotkeysTargetClass extends WrappedComponent {\n        public static displayName = `HotkeysTarget(${getDisplayName(WrappedComponent)})`;\n\n        /** @internal */\n        public globalHotkeysEvents: HotkeysEvents = new HotkeysEvents(HotkeyScope.GLOBAL);\n\n        /** @internal */\n        public localHotkeysEvents: HotkeysEvents = new HotkeysEvents(HotkeyScope.LOCAL);\n\n        public componentDidMount() {\n            if (super.componentDidMount != null) {\n                super.componentDidMount();\n            }\n\n            // attach global key event listeners\n            document.addEventListener(\"keydown\", this.globalHotkeysEvents.handleKeyDown);\n            document.addEventListener(\"keyup\", this.globalHotkeysEvents.handleKeyUp);\n        }\n\n        public componentWillUnmount() {\n            super.componentWillUnmount?.();\n            document.removeEventListener(\"keydown\", this.globalHotkeysEvents.handleKeyDown);\n            document.removeEventListener(\"keyup\", this.globalHotkeysEvents.handleKeyUp);\n\n            this.globalHotkeysEvents.clear();\n            this.localHotkeysEvents.clear();\n        }\n\n        public render() {\n            const element = super.render() as JSX.Element;\n\n            if (element == null) {\n                // always return `element` in case caller is distinguishing between `null` and `undefined`\n                return element;\n            }\n\n            if (!React.isValidElement<any>(element)) {\n                console.warn(HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT);\n                return element;\n            }\n\n            if (isFunction(this.renderHotkeys)) {\n                const hotkeys = this.renderHotkeys();\n                if (this.localHotkeysEvents) {\n                    this.localHotkeysEvents.setHotkeys(hotkeys.props);\n                }\n                if (this.globalHotkeysEvents) {\n                    this.globalHotkeysEvents.setHotkeys(hotkeys.props);\n                }\n\n                if (this.localHotkeysEvents.count() > 0) {\n                    const tabIndex = hotkeys.props.tabIndex === undefined ? 0 : hotkeys.props.tabIndex;\n\n                    const { onKeyDown: existingKeyDown, onKeyUp: existingKeyUp } = element.props;\n\n                    const handleKeyDownWrapper = (e: React.KeyboardEvent<HTMLElement>) => {\n                        this.localHotkeysEvents.handleKeyDown(e.nativeEvent as KeyboardEvent);\n                        existingKeyDown?.(e);\n                    };\n\n                    const handleKeyUpWrapper = (e: React.KeyboardEvent<HTMLElement>) => {\n                        this.localHotkeysEvents.handleKeyUp(e.nativeEvent as KeyboardEvent);\n                        existingKeyUp?.(e);\n                    };\n                    return React.cloneElement(element, {\n                        onKeyDown: handleKeyDownWrapper,\n                        onKeyUp: handleKeyUpWrapper,\n                        tabIndex,\n                    });\n                }\n            }\n            return element;\n        }\n    };\n}\n"]},"metadata":{},"sourceType":"module"}