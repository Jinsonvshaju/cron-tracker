{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as moment from \"moment-timezone\";\nimport { getTimezoneMetadata } from \"./timezoneMetadata\"; // eslint-disable-next-line @typescript-eslint/no-redeclare\n\nexport var TimezoneDisplayFormat = {\n  /** Abbreviation format: `\"HST\"` */\n  ABBREVIATION: \"abbreviation\",\n\n  /** Composite format: `\"Pacific/Honolulu (HST) -10:00\"` */\n  COMPOSITE: \"composite\",\n\n  /** Name format: `\"Pacific/Honolulu\"` */\n  NAME: \"name\",\n\n  /** Offset format: `\"-10:00\"` */\n  OFFSET: \"offset\"\n};\nexport function formatTimezone(timezone, date, displayFormat) {\n  if (!timezone || !moment.tz.zone(timezone)) {\n    return undefined;\n  }\n\n  var _a = getTimezoneMetadata(timezone, date),\n      abbreviation = _a.abbreviation,\n      offsetAsString = _a.offsetAsString;\n\n  switch (displayFormat) {\n    case TimezoneDisplayFormat.ABBREVIATION:\n      // Fall back to the offset when there is no abbreviation.\n      return abbreviation !== undefined ? abbreviation : offsetAsString;\n\n    case TimezoneDisplayFormat.NAME:\n      return timezone;\n\n    case TimezoneDisplayFormat.OFFSET:\n      return offsetAsString;\n\n    case TimezoneDisplayFormat.COMPOSITE:\n      return \"\".concat(timezone).concat(abbreviation ? \" (\".concat(abbreviation, \")\") : \"\", \" \").concat(offsetAsString);\n  }\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,MAAZ,MAAwB,iBAAxB;AAEA,SAASC,mBAAT,QAAoC,oBAApC,C,CAGA;;AACA,OAAO,IAAMC,qBAAqB,GAAG;AACjC;AACAC,cAAY,EAAE,cAFmB;;AAGjC;AACAC,WAAS,EAAE,WAJsB;;AAKjC;AACAC,MAAI,EAAE,MAN2B;;AAOjC;AACAC,QAAM,EAAE;AARyB,CAA9B;AAWP,OAAM,SAAUC,cAAV,CAAyBC,QAAzB,EAA2CC,IAA3C,EAAuDC,aAAvD,EAA2F;AAC7F,MAAI,CAACF,QAAD,IAAa,CAACR,MAAM,CAACW,EAAP,CAAUC,IAAV,CAAeJ,QAAf,CAAlB,EAA4C;AACxC,WAAOK,SAAP;AACH;;AAEK,WAAmCZ,mBAAmB,CAACO,QAAD,EAAWC,IAAX,CAAtD;AAAA,MAAEK,YAAY,kBAAd;AAAA,MAAgBC,cAAc,oBAA9B;;AACN,UAAQL,aAAR;AACI,SAAKR,qBAAqB,CAACC,YAA3B;AACI;AACA,aAAOW,YAAY,KAAKD,SAAjB,GAA6BC,YAA7B,GAA4CC,cAAnD;;AACJ,SAAKb,qBAAqB,CAACG,IAA3B;AACI,aAAOG,QAAP;;AACJ,SAAKN,qBAAqB,CAACI,MAA3B;AACI,aAAOS,cAAP;;AACJ,SAAKb,qBAAqB,CAACE,SAA3B;AACI,aAAO,UAAGI,QAAH,EAAWQ,MAAX,CAAcF,YAAY,GAAG,YAAKA,YAAL,EAAiB,GAAjB,CAAH,GAA0B,EAApD,EAAsD,GAAtD,EAAsDE,MAAtD,CAA0DD,cAA1D,CAAP;AATR;AAWH","names":["moment","getTimezoneMetadata","TimezoneDisplayFormat","ABBREVIATION","COMPOSITE","NAME","OFFSET","formatTimezone","timezone","date","displayFormat","tz","zone","undefined","abbreviation","offsetAsString","concat"],"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/node_modules/@blueprintjs/timezone/src/components/timezone-picker/timezoneDisplayFormat.ts"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as moment from \"moment-timezone\";\n\nimport { getTimezoneMetadata } from \"./timezoneMetadata\";\n\nexport type TimezoneDisplayFormat = \"offset\" | \"abbreviation\" | \"name\" | \"composite\";\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const TimezoneDisplayFormat = {\n    /** Abbreviation format: `\"HST\"` */\n    ABBREVIATION: \"abbreviation\" as \"abbreviation\",\n    /** Composite format: `\"Pacific/Honolulu (HST) -10:00\"` */\n    COMPOSITE: \"composite\" as \"composite\",\n    /** Name format: `\"Pacific/Honolulu\"` */\n    NAME: \"name\" as \"name\",\n    /** Offset format: `\"-10:00\"` */\n    OFFSET: \"offset\" as \"offset\",\n};\n\nexport function formatTimezone(timezone: string, date: Date, displayFormat: TimezoneDisplayFormat): string | undefined {\n    if (!timezone || !moment.tz.zone(timezone)) {\n        return undefined;\n    }\n\n    const { abbreviation, offsetAsString } = getTimezoneMetadata(timezone, date);\n    switch (displayFormat) {\n        case TimezoneDisplayFormat.ABBREVIATION:\n            // Fall back to the offset when there is no abbreviation.\n            return abbreviation !== undefined ? abbreviation : offsetAsString;\n        case TimezoneDisplayFormat.NAME:\n            return timezone;\n        case TimezoneDisplayFormat.OFFSET:\n            return offsetAsString;\n        case TimezoneDisplayFormat.COMPOSITE:\n            return `${timezone}${abbreviation ? ` (${abbreviation})` : \"\"} ${offsetAsString}`;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}