{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from \"react\";\nimport * as Errors from \"../../common/errors\";\nimport { isNodeEnv } from \"../../common/utils\";\nimport { useHotkeys } from \"../../hooks\";\n/**\n * Utility component which allows consumers to use the new `useHotkeys` hook inside\n * React component classes. The implementation simply passes through to the hook.\n */\n\nexport var HotkeysTarget2 = function (_a) {\n  var children = _a.children,\n      hotkeys = _a.hotkeys,\n      options = _a.options;\n\n  var _b = useHotkeys(hotkeys, options),\n      handleKeyDown = _b.handleKeyDown,\n      handleKeyUp = _b.handleKeyUp; // run props validation\n\n\n  React.useEffect(function () {\n    if (!isNodeEnv(\"production\")) {\n      if (typeof children !== \"function\" && hotkeys.some(function (h) {\n        return !h.global;\n      })) {\n        console.error(Errors.HOTKEYS_TARGET2_CHILDREN_LOCAL_HOTKEYS);\n      }\n    }\n  }, [hotkeys]);\n\n  if (typeof children === \"function\") {\n    return children({\n      handleKeyDown: handleKeyDown,\n      handleKeyUp: handleKeyUp\n    });\n  } else {\n    return children;\n  }\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAAuBC,UAAvB,QAA4D,aAA5D;AAsBA;;;;;AAIA,OAAO,IAAMC,cAAc,GAAG,UAACC,EAAD,EAAoD;MAAjDC,QAAQ;MAAEC,OAAO;MAAEC,OAAO;;AACjD,WAAiCL,UAAU,CAACI,OAAD,EAAUC,OAAV,CAA3C;AAAA,MAAEC,aAAa,mBAAf;AAAA,MAAiBC,WAAW,iBAA5B,CADwE,CAG9E;;;AACAV,OAAK,CAACW,SAAN,CAAgB;AACZ,QAAI,CAACT,SAAS,CAAC,YAAD,CAAd,EAA8B;AAC1B,UAAI,OAAOI,QAAP,KAAoB,UAApB,IAAkCC,OAAO,CAACK,IAAR,CAAa,aAAC;AAAI,gBAACC,CAAC,CAACC,MAAH;AAAS,OAA3B,CAAtC,EAAoE;AAChEC,eAAO,CAACC,KAAR,CAAcf,MAAM,CAACgB,sCAArB;AACH;AACJ;AACJ,GAND,EAMG,CAACV,OAAD,CANH;;AAQA,MAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;AAChC,WAAOA,QAAQ,CAAC;AAAEG,mBAAa,eAAf;AAAiBC,iBAAW;AAA5B,KAAD,CAAf;AACH,GAFD,MAEO;AACH,WAAOJ,QAAP;AACH;AACJ,CAjBM","names":["React","Errors","isNodeEnv","useHotkeys","HotkeysTarget2","_a","children","hotkeys","options","handleKeyDown","handleKeyUp","useEffect","some","h","global","console","error","HOTKEYS_TARGET2_CHILDREN_LOCAL_HOTKEYS"],"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/node_modules/@blueprintjs/core/src/components/hotkeys/hotkeysTarget2.tsx"],"sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nimport * as Errors from \"../../common/errors\";\nimport { isNodeEnv } from \"../../common/utils\";\nimport { HotkeyConfig, useHotkeys, UseHotkeysOptions } from \"../../hooks\";\n\n/** Identical to the return type of `useHotkeys` hook. */\nexport interface HotkeysTarget2RenderProps {\n    handleKeyDown: React.KeyboardEventHandler<HTMLElement>;\n    handleKeyUp: React.KeyboardEventHandler<HTMLElement>;\n}\n\nexport interface HotkeysTarget2Props {\n    /**\n     * Render prop which receives the same callback handlers generated by the `useHotkeys` hook.\n     * If your hotkey definitions are all global, you may supply an element instead.\n     */\n    children: JSX.Element | ((props: HotkeysTarget2RenderProps) => JSX.Element);\n\n    /** Hotkey definitions. */\n    hotkeys: readonly HotkeyConfig[];\n\n    /** Hook customization options. */\n    options?: UseHotkeysOptions;\n}\n\n/**\n * Utility component which allows consumers to use the new `useHotkeys` hook inside\n * React component classes. The implementation simply passes through to the hook.\n */\nexport const HotkeysTarget2 = ({ children, hotkeys, options }: HotkeysTarget2Props): JSX.Element => {\n    const { handleKeyDown, handleKeyUp } = useHotkeys(hotkeys, options);\n\n    // run props validation\n    React.useEffect(() => {\n        if (!isNodeEnv(\"production\")) {\n            if (typeof children !== \"function\" && hotkeys.some(h => !h.global)) {\n                console.error(Errors.HOTKEYS_TARGET2_CHILDREN_LOCAL_HOTKEYS);\n            }\n        }\n    }, [hotkeys]);\n\n    if (typeof children === \"function\") {\n        return children({ handleKeyDown, handleKeyUp });\n    } else {\n        return children;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}