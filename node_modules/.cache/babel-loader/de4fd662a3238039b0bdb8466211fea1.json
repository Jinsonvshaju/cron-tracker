{"ast":null,"code":"/*\n * Copyright 2019 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport * as React from \"react\";\nimport { isNodeEnv } from \"./utils\";\n/**\n * An abstract component that Blueprint components can extend\n * in order to add some common functionality like runtime props validation.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\nvar AbstractComponent2 =\n/** @class */\nfunction (_super) {\n  __extends(AbstractComponent2, _super);\n\n  function AbstractComponent2(props, context) {\n    var _this = _super.call(this, props, context) || this; // Not bothering to remove entries when their timeouts finish because clearing invalid ID is a no-op\n\n\n    _this.timeoutIds = [];\n    _this.requestIds = [];\n    /**\n     * Clear all known timeouts.\n     */\n\n    _this.clearTimeouts = function () {\n      if (_this.timeoutIds.length > 0) {\n        for (var _i = 0, _a = _this.timeoutIds; _i < _a.length; _i++) {\n          var timeoutId = _a[_i];\n          window.clearTimeout(timeoutId);\n        }\n\n        _this.timeoutIds = [];\n      }\n    };\n    /**\n     * Clear all known animation frame requests.\n     */\n\n\n    _this.cancelAnimationFrames = function () {\n      if (_this.requestIds.length > 0) {\n        for (var _i = 0, _a = _this.requestIds; _i < _a.length; _i++) {\n          var requestId = _a[_i];\n          window.cancelAnimationFrame(requestId);\n        }\n\n        _this.requestIds = [];\n      }\n    };\n\n    if (!isNodeEnv(\"production\")) {\n      _this.validateProps(_this.props);\n    }\n\n    return _this;\n  }\n\n  AbstractComponent2.prototype.componentDidUpdate = function (_prevProps, _prevState, _snapshot) {\n    if (!isNodeEnv(\"production\")) {\n      this.validateProps(this.props);\n    }\n  };\n\n  AbstractComponent2.prototype.componentWillUnmount = function () {\n    this.clearTimeouts();\n    this.cancelAnimationFrames();\n  };\n  /**\n   * Request an animation frame and remember its ID.\n   * All pending requests will be canceled when component unmounts.\n   *\n   * @returns a \"cancel\" function that will cancel the request when invoked.\n   */\n\n\n  AbstractComponent2.prototype.requestAnimationFrame = function (callback) {\n    var handle = window.requestAnimationFrame(callback);\n    this.requestIds.push(handle);\n    return function () {\n      return window.cancelAnimationFrame(handle);\n    };\n  };\n  /**\n   * Set a timeout and remember its ID.\n   * All stored timeouts will be cleared when component unmounts.\n   *\n   * @returns a \"cancel\" function that will clear timeout when invoked.\n   */\n\n\n  AbstractComponent2.prototype.setTimeout = function (callback, timeout) {\n    var handle = window.setTimeout(callback, timeout);\n    this.timeoutIds.push(handle);\n    return function () {\n      return window.clearTimeout(handle);\n    };\n  };\n  /**\n   * Ensures that the props specified for a component are valid.\n   * Implementations should check that props are valid and usually throw an Error if they are not.\n   * Implementations should not duplicate checks that the type system already guarantees.\n   *\n   * This method should be used instead of React's\n   * [propTypes](https://facebook.github.io/react/docs/reusable-components.html#prop-validation) feature.\n   * Like propTypes, these runtime checks run only in development mode.\n   */\n\n\n  AbstractComponent2.prototype.validateProps = function (_props) {// implement in subclass\n  };\n\n  return AbstractComponent2;\n}(React.Component);\n\nexport { AbstractComponent2 };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,SAAT,QAA0B,SAA1B;AAEA;;;;AAIA;;AACA;AAAA;AAAA;AAAqEC;;AAmBjE,8BAAYC,KAAZ,EAAsBC,OAAtB,EAAmC;AAAnC,gBACIC,kBAAMF,KAAN,EAAaC,OAAb,KAAqB,IADzB,CAAmC,CALnC;;;AACQE,uBAAuB,EAAvB;AAEAA,uBAAuB,EAAvB;AA4CR;;;;AAGOA,0BAAgB;AACnB,UAAIA,KAAI,CAACC,UAAL,CAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,aAAwB,sBAAI,CAACD,UAA7B,EAAwBE,cAAxB,EAAwBA,IAAxB,EAAyC;AAApC,cAAMC,SAAS,SAAf;AACDC,gBAAM,CAACC,YAAP,CAAoBF,SAApB;AACH;;AACDJ,aAAI,CAACC,UAAL,GAAkB,EAAlB;AACH;AACJ,KAPM;AASP;;;;;AAGOD,kCAAwB;AAC3B,UAAIA,KAAI,CAACO,UAAL,CAAgBL,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,aAAwB,sBAAI,CAACK,UAA7B,EAAwBJ,cAAxB,EAAwBA,IAAxB,EAAyC;AAApC,cAAMK,SAAS,SAAf;AACDH,gBAAM,CAACI,oBAAP,CAA4BD,SAA5B;AACH;;AACDR,aAAI,CAACO,UAAL,GAAkB,EAAlB;AACH;AACJ,KAPM;;AAvDH,QAAI,CAACZ,SAAS,CAAC,YAAD,CAAd,EAA8B;AAC1BK,WAAI,CAACU,aAAL,CAAmBV,KAAI,CAACH,KAAxB;AACH;;;AACJ;;AAEMc,oDAAP,UAA0BC,UAA1B,EAAyCC,UAAzC,EAAwDC,SAAxD,EAAsE;AAClE,QAAI,CAACnB,SAAS,CAAC,YAAD,CAAd,EAA8B;AAC1B,WAAKe,aAAL,CAAmB,KAAKb,KAAxB;AACH;AACJ,GAJM;;AAMAc,sDAAP;AACI,SAAKI,aAAL;AACA,SAAKC,qBAAL;AACH,GAHM;AAKP;;;;;;;;AAMOL,uDAAP,UAA6BM,QAA7B,EAAiD;AAC7C,QAAMC,MAAM,GAAGb,MAAM,CAACc,qBAAP,CAA6BF,QAA7B,CAAf;AACA,SAAKV,UAAL,CAAgBa,IAAhB,CAAqBF,MAArB;AACA,WAAO;AAAM,mBAAM,CAACT,oBAAP,CAA4BS,MAA5B;AAAmC,KAAhD;AACH,GAJM;AAMP;;;;;;;;AAMOP,4CAAP,UAAkBM,QAAlB,EAAwCI,OAAxC,EAAwD;AACpD,QAAMH,MAAM,GAAGb,MAAM,CAACiB,UAAP,CAAkBL,QAAlB,EAA4BI,OAA5B,CAAf;AACA,SAAKpB,UAAL,CAAgBmB,IAAhB,CAAqBF,MAArB;AACA,WAAO;AAAM,mBAAM,CAACZ,YAAP,CAAoBY,MAApB;AAA2B,KAAxC;AACH,GAJM;AA8BP;;;;;;;;;;;AASUP,+CAAV,UAAwBY,MAAxB,EAAiC,CAC7B;AACH,GAFS;;AAGd;AAAC,CAjGD,CAAqE7B,KAAK,CAAC8B,SAA3E","names":["React","isNodeEnv","__extends","props","context","_super","_this","timeoutIds","length","_i","timeoutId","window","clearTimeout","requestIds","requestId","cancelAnimationFrame","validateProps","AbstractComponent2","_prevProps","_prevState","_snapshot","clearTimeouts","cancelAnimationFrames","callback","handle","requestAnimationFrame","push","timeout","setTimeout","_props","Component"],"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/node_modules/@blueprintjs/core/src/common/abstractComponent2.ts"],"sourcesContent":["/*\n * Copyright 2019 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nimport { isNodeEnv } from \"./utils\";\n\n/**\n * An abstract component that Blueprint components can extend\n * in order to add some common functionality like runtime props validation.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport abstract class AbstractComponent2<P, S = {}, SS = {}> extends React.Component<P, S, SS> {\n    // unsafe lifecycle methods\n    public componentWillUpdate!: never;\n\n    public componentWillReceiveProps!: never;\n\n    public componentWillMount!: never;\n\n    // this should be static, not an instance method\n    public getDerivedStateFromProps!: never;\n\n    /** Component displayName should be `public static`. This property exists to prevent incorrect usage. */\n    protected displayName!: never;\n\n    // Not bothering to remove entries when their timeouts finish because clearing invalid ID is a no-op\n    private timeoutIds: number[] = [];\n\n    private requestIds: number[] = [];\n\n    constructor(props: P, context?: any) {\n        super(props, context);\n        if (!isNodeEnv(\"production\")) {\n            this.validateProps(this.props);\n        }\n    }\n\n    public componentDidUpdate(_prevProps: P, _prevState: S, _snapshot?: SS) {\n        if (!isNodeEnv(\"production\")) {\n            this.validateProps(this.props);\n        }\n    }\n\n    public componentWillUnmount() {\n        this.clearTimeouts();\n        this.cancelAnimationFrames();\n    }\n\n    /**\n     * Request an animation frame and remember its ID.\n     * All pending requests will be canceled when component unmounts.\n     *\n     * @returns a \"cancel\" function that will cancel the request when invoked.\n     */\n    public requestAnimationFrame(callback: () => void) {\n        const handle = window.requestAnimationFrame(callback);\n        this.requestIds.push(handle);\n        return () => window.cancelAnimationFrame(handle);\n    }\n\n    /**\n     * Set a timeout and remember its ID.\n     * All stored timeouts will be cleared when component unmounts.\n     *\n     * @returns a \"cancel\" function that will clear timeout when invoked.\n     */\n    public setTimeout(callback: () => void, timeout?: number) {\n        const handle = window.setTimeout(callback, timeout);\n        this.timeoutIds.push(handle);\n        return () => window.clearTimeout(handle);\n    }\n\n    /**\n     * Clear all known timeouts.\n     */\n    public clearTimeouts = () => {\n        if (this.timeoutIds.length > 0) {\n            for (const timeoutId of this.timeoutIds) {\n                window.clearTimeout(timeoutId);\n            }\n            this.timeoutIds = [];\n        }\n    };\n\n    /**\n     * Clear all known animation frame requests.\n     */\n    public cancelAnimationFrames = () => {\n        if (this.requestIds.length > 0) {\n            for (const requestId of this.requestIds) {\n                window.cancelAnimationFrame(requestId);\n            }\n            this.requestIds = [];\n        }\n    };\n\n    /**\n     * Ensures that the props specified for a component are valid.\n     * Implementations should check that props are valid and usually throw an Error if they are not.\n     * Implementations should not duplicate checks that the type system already guarantees.\n     *\n     * This method should be used instead of React's\n     * [propTypes](https://facebook.github.io/react/docs/reusable-components.html#prop-validation) feature.\n     * Like propTypes, these runtime checks run only in development mode.\n     */\n    protected validateProps(_props: P) {\n        // implement in subclass\n    }\n}\n"]},"metadata":{},"sourceType":"module"}