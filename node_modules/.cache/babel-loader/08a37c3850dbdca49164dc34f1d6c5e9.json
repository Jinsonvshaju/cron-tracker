{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Button, DISPLAYNAME_PREFIX, InputGroup, Keys, Popover, Position, refHandler, setRef } from \"@blueprintjs/core\";\nimport { Classes } from \"../../common\";\nimport { QueryList } from \"../query-list/queryList\";\n\nvar Select =\n/** @class */\nfunction (_super) {\n  __extends(Select, _super);\n\n  function Select() {\n    var _this = this;\n\n    var _a;\n\n    _this = _super.apply(this, arguments) || this;\n    _this.state = {\n      isOpen: false\n    };\n    _this.TypedQueryList = QueryList.ofType();\n    _this.inputElement = null;\n    _this.queryList = null;\n    _this.handleInputRef = refHandler(_this, \"inputElement\", (_a = _this.props.inputProps) === null || _a === void 0 ? void 0 : _a.inputRef);\n\n    _this.handleQueryListRef = function (ref) {\n      return _this.queryList = ref;\n    };\n\n    _this.renderQueryList = function (listProps) {\n      var _a; // not using defaultProps cuz they're hard to type with generics (can't use <T> on static members)\n\n\n      var _b = _this.props,\n          fill = _b.fill,\n          _c = _b.filterable,\n          filterable = _c === void 0 ? true : _c,\n          _d = _b.disabled,\n          disabled = _d === void 0 ? false : _d,\n          _e = _b.inputProps,\n          inputProps = _e === void 0 ? {} : _e,\n          _f = _b.popoverProps,\n          popoverProps = _f === void 0 ? {} : _f,\n          matchTargetWidth = _b.matchTargetWidth;\n\n      if (fill) {\n        popoverProps.fill = true;\n      }\n\n      if (matchTargetWidth) {\n        if (popoverProps.modifiers == null) {\n          popoverProps.modifiers = {};\n        }\n\n        popoverProps.modifiers.minWidth = {\n          enabled: true,\n          fn: function (data) {\n            data.styles.width = \"\".concat(data.offsets.reference.width, \"px\");\n            return data;\n          },\n          order: 800\n        };\n        popoverProps.usePortal = false;\n        popoverProps.wrapperTagName = \"div\";\n      }\n\n      var input = React.createElement(InputGroup, __assign({\n        leftIcon: \"search\",\n        placeholder: \"Filter...\",\n        rightElement: _this.maybeRenderClearButton(listProps.query)\n      }, inputProps, {\n        inputRef: _this.handleInputRef,\n        onChange: listProps.handleQueryChange,\n        value: listProps.query\n      }));\n      var handleKeyDown = listProps.handleKeyDown,\n          handleKeyUp = listProps.handleKeyUp;\n      return (\n        /* eslint-disable-next-line deprecation/deprecation */\n        React.createElement(Popover, __assign({\n          autoFocus: false,\n          enforceFocus: false,\n          isOpen: _this.state.isOpen,\n          disabled: disabled,\n          position: Position.BOTTOM_LEFT\n        }, popoverProps, {\n          className: classNames(listProps.className, popoverProps.className),\n          onInteraction: _this.handlePopoverInteraction,\n          popoverClassName: classNames(Classes.SELECT_POPOVER, popoverProps.popoverClassName, (_a = {}, _a[Classes.SELECT_MATCH_TARGET_WIDTH] = matchTargetWidth, _a)),\n          onOpening: _this.handlePopoverOpening,\n          onOpened: _this.handlePopoverOpened,\n          onClosing: _this.handlePopoverClosing\n        }), React.createElement(\"div\", {\n          onKeyDown: _this.state.isOpen ? handleKeyDown : _this.handleTargetKeyDown,\n          onKeyUp: _this.state.isOpen ? handleKeyUp : undefined\n        }, _this.props.children), React.createElement(\"div\", {\n          onKeyDown: handleKeyDown,\n          onKeyUp: handleKeyUp\n        }, filterable ? input : undefined, listProps.itemList))\n      );\n    };\n\n    _this.handleTargetKeyDown = function (event) {\n      // open popover when arrow key pressed on target while closed\n      // HACKHACK: https://github.com/palantir/blueprint/issues/4165\n      // eslint-disable-next-line deprecation/deprecation\n      if (event.which === Keys.ARROW_UP || event.which === Keys.ARROW_DOWN) {\n        event.preventDefault();\n\n        _this.setState({\n          isOpen: true\n        });\n      }\n    };\n\n    _this.handleItemSelect = function (item, event) {\n      var _a, _b;\n\n      _this.setState({\n        isOpen: false\n      });\n\n      (_b = (_a = _this.props).onItemSelect) === null || _b === void 0 ? void 0 : _b.call(_a, item, event);\n    };\n\n    _this.handlePopoverInteraction = function (isOpen, event) {\n      var _a, _b;\n\n      _this.setState({\n        isOpen: isOpen\n      });\n\n      (_b = (_a = _this.props.popoverProps) === null || _a === void 0 ? void 0 : _a.onInteraction) === null || _b === void 0 ? void 0 : _b.call(_a, isOpen, event);\n    };\n\n    _this.handlePopoverOpening = function (node) {\n      var _a, _b; // save currently focused element before popover steals focus, so we can restore it when closing.\n\n\n      _this.previousFocusedElement = document.activeElement;\n\n      if (_this.props.resetOnClose) {\n        _this.resetQuery();\n      }\n\n      (_b = (_a = _this.props.popoverProps) === null || _a === void 0 ? void 0 : _a.onOpening) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n    };\n\n    _this.handlePopoverOpened = function (node) {\n      var _a, _b; // scroll active item into view after popover transition completes and all dimensions are stable.\n\n\n      if (_this.queryList != null) {\n        _this.queryList.scrollActiveItemIntoView();\n      }\n\n      _this.requestAnimationFrame(function () {\n        var _a;\n\n        var _b = _this.props.inputProps,\n            inputProps = _b === void 0 ? {} : _b; // autofocus is enabled by default\n\n        if (inputProps.autoFocus !== false) {\n          (_a = _this.inputElement) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n      });\n\n      (_b = (_a = _this.props.popoverProps) === null || _a === void 0 ? void 0 : _a.onOpened) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n    };\n\n    _this.handlePopoverClosing = function (node) {\n      var _a, _b; // restore focus to saved element.\n      // timeout allows popover to begin closing and remove focus handlers beforehand.\n\n\n      _this.requestAnimationFrame(function () {\n        if (_this.previousFocusedElement !== undefined) {\n          _this.previousFocusedElement.focus();\n\n          _this.previousFocusedElement = undefined;\n        }\n      });\n\n      (_b = (_a = _this.props.popoverProps) === null || _a === void 0 ? void 0 : _a.onClosing) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n    };\n\n    _this.resetQuery = function () {\n      return _this.queryList && _this.queryList.setQuery(\"\", true);\n    };\n\n    return _this;\n  }\n\n  Select.ofType = function () {\n    return Select;\n  };\n\n  Select.prototype.render = function () {\n    // omit props specific to this component, spread the rest.\n    var _a = this.props,\n        filterable = _a.filterable,\n        inputProps = _a.inputProps,\n        popoverProps = _a.popoverProps,\n        restProps = __rest(_a, [\"filterable\", \"inputProps\", \"popoverProps\"]);\n\n    return React.createElement(this.TypedQueryList, __assign({}, restProps, {\n      onItemSelect: this.handleItemSelect,\n      ref: this.handleQueryListRef,\n      renderer: this.renderQueryList\n    }));\n  };\n\n  Select.prototype.componentDidUpdate = function (prevProps, prevState) {\n    var _a, _b, _c, _d, _e;\n\n    if (((_a = prevProps.inputProps) === null || _a === void 0 ? void 0 : _a.inputRef) !== ((_b = this.props.inputProps) === null || _b === void 0 ? void 0 : _b.inputRef)) {\n      setRef((_c = prevProps.inputProps) === null || _c === void 0 ? void 0 : _c.inputRef, null);\n      this.handleInputRef = refHandler(this, \"inputElement\", (_d = this.props.inputProps) === null || _d === void 0 ? void 0 : _d.inputRef);\n      setRef((_e = this.props.inputProps) === null || _e === void 0 ? void 0 : _e.inputRef, this.inputElement);\n    }\n\n    if (this.state.isOpen && !prevState.isOpen && this.queryList != null) {\n      this.queryList.scrollActiveItemIntoView();\n    }\n  };\n\n  Select.prototype.maybeRenderClearButton = function (query) {\n    return query.length > 0 ? React.createElement(Button, {\n      icon: \"cross\",\n      minimal: true,\n      onClick: this.resetQuery\n    }) : undefined;\n  };\n\n  Select.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Select\");\n  return Select;\n}(AbstractPureComponent2);\n\nexport { Select };","map":{"version":3,"mappings":"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","names":["classNames","React","AbstractPureComponent2","Button","DISPLAYNAME_PREFIX","InputGroup","Keys","Popover","Position","refHandler","setRef","Classes","QueryList","__extends","_this","isOpen","ofType","props","inputProps","_a","inputRef","ref","queryList","listProps","fill","_c","filterable","_d","disabled","_e","_f","popoverProps","matchTargetWidth","modifiers","minWidth","enabled","fn","data","styles","width","offsets","reference","order","usePortal","wrapperTagName","input","__assign","leftIcon","placeholder","rightElement","maybeRenderClearButton","query","handleInputRef","onChange","handleQueryChange","value","handleKeyUp","autoFocus","enforceFocus","state","position","BOTTOM_LEFT","className","onInteraction","handlePopoverInteraction","popoverClassName","SELECT_POPOVER","SELECT_MATCH_TARGET_WIDTH","onOpening","handlePopoverOpening","onOpened","handlePopoverOpened","onClosing","handlePopoverClosing","onKeyDown","handleKeyDown","handleTargetKeyDown","onKeyUp","undefined","children","itemList","event","which","ARROW_UP","ARROW_DOWN","preventDefault","setState","item","onItemSelect","_b","node","previousFocusedElement","document","activeElement","resetOnClose","resetQuery","scrollActiveItemIntoView","requestAnimationFrame","inputElement","focus","setQuery","Select","restProps","TypedQueryList","handleItemSelect","handleQueryListRef","renderer","renderQueryList","prevProps","prevState","length","icon","minimal","onClick"],"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/node_modules/@blueprintjs/select/src/components/select/select.tsx"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport {\n    AbstractPureComponent2,\n    Button,\n    DISPLAYNAME_PREFIX,\n    InputGroupProps2,\n    InputGroup,\n    IPopoverProps,\n    IRef,\n    Keys,\n    Popover,\n    Position,\n    refHandler,\n    setRef,\n} from \"@blueprintjs/core\";\n\nimport { Classes, IListItemsProps } from \"../../common\";\nimport { IQueryListRendererProps, QueryList } from \"../query-list/queryList\";\n\n// eslint-disable-next-line deprecation/deprecation\nexport type SelectProps<T> = ISelectProps<T>;\n/** @deprecated use SelectProps */\nexport interface ISelectProps<T> extends IListItemsProps<T> {\n    children?: React.ReactNode;\n\n    /**\n     * Whether the component should take up the full width of its container.\n     * This overrides `popoverProps.fill`. You also have to ensure that the child\n     * component has `fill` set to `true` or is styled appropriately.\n     */\n    fill?: boolean;\n\n    /**\n     * Whether the dropdown list can be filtered.\n     * Disabling this option will remove the `InputGroup` and ignore `inputProps`.\n     *\n     * @default true\n     */\n    filterable?: boolean;\n\n    /**\n     * Whether the component is non-interactive.\n     * If true, the list's item renderer will not be called.\n     * Note that you'll also need to disable the component's children, if appropriate.\n     *\n     * @default false\n     */\n    disabled?: boolean;\n\n    /**\n     * Props to spread to the query `InputGroup`. Use `query` and\n     * `onQueryChange` instead of `inputProps.value` and `inputProps.onChange`\n     * to control this input.\n     */\n    inputProps?: InputGroupProps2;\n\n    /**\n     * Whether the select popover should be styled so that it matches the width of the target.\n     * This is done using a popper.js modifier passed through `popoverProps`.\n     *\n     * Note that setting `matchTargetWidth={true}` will also set `popoverProps.usePortal={false}` and `popoverProps.wrapperTagName=\"div\"`.\n     *\n     * @default false\n     */\n    matchTargetWidth?: boolean;\n\n    /** Props to spread to `Popover`. Note that `content` cannot be changed. */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    popoverProps?: Partial<IPopoverProps> & object;\n\n    /**\n     * Whether the active item should be reset to the first matching item _when\n     * the popover closes_. The query will also be reset to the empty string.\n     *\n     * @default false\n     */\n    resetOnClose?: boolean;\n}\n\nexport interface ISelectState {\n    isOpen: boolean;\n}\n\nexport class Select<T> extends AbstractPureComponent2<SelectProps<T>, ISelectState> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Select`;\n\n    public static ofType<U>() {\n        return Select as new (props: SelectProps<U>) => Select<U>;\n    }\n\n    public state: ISelectState = { isOpen: false };\n\n    private TypedQueryList = QueryList.ofType<T>();\n\n    public inputElement: HTMLInputElement | null = null;\n\n    private queryList: QueryList<T> | null = null;\n\n    private previousFocusedElement: HTMLElement | undefined;\n\n    private handleInputRef: IRef<HTMLInputElement> = refHandler(this, \"inputElement\", this.props.inputProps?.inputRef);\n\n    private handleQueryListRef = (ref: QueryList<T> | null) => (this.queryList = ref);\n\n    public render() {\n        // omit props specific to this component, spread the rest.\n        const { filterable, inputProps, popoverProps, ...restProps } = this.props;\n\n        return (\n            <this.TypedQueryList\n                {...restProps}\n                onItemSelect={this.handleItemSelect}\n                ref={this.handleQueryListRef}\n                renderer={this.renderQueryList}\n            />\n        );\n    }\n\n    public componentDidUpdate(prevProps: SelectProps<T>, prevState: ISelectState) {\n        if (prevProps.inputProps?.inputRef !== this.props.inputProps?.inputRef) {\n            setRef(prevProps.inputProps?.inputRef, null);\n            this.handleInputRef = refHandler(this, \"inputElement\", this.props.inputProps?.inputRef);\n            setRef(this.props.inputProps?.inputRef, this.inputElement);\n        }\n\n        if (this.state.isOpen && !prevState.isOpen && this.queryList != null) {\n            this.queryList.scrollActiveItemIntoView();\n        }\n    }\n\n    private renderQueryList = (listProps: IQueryListRendererProps<T>) => {\n        // not using defaultProps cuz they're hard to type with generics (can't use <T> on static members)\n        const {\n            fill,\n            filterable = true,\n            disabled = false,\n            inputProps = {},\n            popoverProps = {},\n            matchTargetWidth,\n        } = this.props;\n\n        if (fill) {\n            popoverProps.fill = true;\n        }\n\n        if (matchTargetWidth) {\n            if (popoverProps.modifiers == null) {\n                popoverProps.modifiers = {};\n            }\n\n            popoverProps.modifiers.minWidth = {\n                enabled: true,\n                fn: data => {\n                    data.styles.width = `${data.offsets.reference.width}px`;\n                    return data;\n                },\n                order: 800,\n            };\n\n            popoverProps.usePortal = false;\n            popoverProps.wrapperTagName = \"div\";\n        }\n\n        const input = (\n            <InputGroup\n                leftIcon=\"search\"\n                placeholder=\"Filter...\"\n                rightElement={this.maybeRenderClearButton(listProps.query)}\n                {...inputProps}\n                inputRef={this.handleInputRef}\n                onChange={listProps.handleQueryChange}\n                value={listProps.query}\n            />\n        );\n\n        const { handleKeyDown, handleKeyUp } = listProps;\n        return (\n            /* eslint-disable-next-line deprecation/deprecation */\n            <Popover\n                autoFocus={false}\n                enforceFocus={false}\n                isOpen={this.state.isOpen}\n                disabled={disabled}\n                position={Position.BOTTOM_LEFT}\n                {...popoverProps}\n                className={classNames(listProps.className, popoverProps.className)}\n                onInteraction={this.handlePopoverInteraction}\n                popoverClassName={classNames(Classes.SELECT_POPOVER, popoverProps.popoverClassName, {\n                    [Classes.SELECT_MATCH_TARGET_WIDTH]: matchTargetWidth,\n                })}\n                onOpening={this.handlePopoverOpening}\n                onOpened={this.handlePopoverOpened}\n                onClosing={this.handlePopoverClosing}\n            >\n                <div\n                    onKeyDown={this.state.isOpen ? handleKeyDown : this.handleTargetKeyDown}\n                    onKeyUp={this.state.isOpen ? handleKeyUp : undefined}\n                >\n                    {this.props.children}\n                </div>\n                <div onKeyDown={handleKeyDown} onKeyUp={handleKeyUp}>\n                    {filterable ? input : undefined}\n                    {listProps.itemList}\n                </div>\n                {/* eslint-disable-next-line deprecation/deprecation */}\n            </Popover>\n        );\n    };\n\n    private maybeRenderClearButton(query: string) {\n        return query.length > 0 ? <Button icon=\"cross\" minimal={true} onClick={this.resetQuery} /> : undefined;\n    }\n\n    private handleTargetKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n        // open popover when arrow key pressed on target while closed\n        // HACKHACK: https://github.com/palantir/blueprint/issues/4165\n        // eslint-disable-next-line deprecation/deprecation\n        if (event.which === Keys.ARROW_UP || event.which === Keys.ARROW_DOWN) {\n            event.preventDefault();\n            this.setState({ isOpen: true });\n        }\n    };\n\n    private handleItemSelect = (item: T, event?: React.SyntheticEvent<HTMLElement>) => {\n        this.setState({ isOpen: false });\n        this.props.onItemSelect?.(item, event);\n    };\n\n    private handlePopoverInteraction = (isOpen: boolean, event?: React.SyntheticEvent<HTMLElement>) => {\n        this.setState({ isOpen });\n        this.props.popoverProps?.onInteraction?.(isOpen, event);\n    };\n\n    private handlePopoverOpening = (node: HTMLElement) => {\n        // save currently focused element before popover steals focus, so we can restore it when closing.\n        this.previousFocusedElement = document.activeElement as HTMLElement;\n\n        if (this.props.resetOnClose) {\n            this.resetQuery();\n        }\n\n        this.props.popoverProps?.onOpening?.(node);\n    };\n\n    private handlePopoverOpened = (node: HTMLElement) => {\n        // scroll active item into view after popover transition completes and all dimensions are stable.\n        if (this.queryList != null) {\n            this.queryList.scrollActiveItemIntoView();\n        }\n\n        this.requestAnimationFrame(() => {\n            const { inputProps = {} } = this.props;\n            // autofocus is enabled by default\n            if (inputProps.autoFocus !== false) {\n                this.inputElement?.focus();\n            }\n        });\n\n        this.props.popoverProps?.onOpened?.(node);\n    };\n\n    private handlePopoverClosing = (node: HTMLElement) => {\n        // restore focus to saved element.\n        // timeout allows popover to begin closing and remove focus handlers beforehand.\n        this.requestAnimationFrame(() => {\n            if (this.previousFocusedElement !== undefined) {\n                this.previousFocusedElement.focus();\n                this.previousFocusedElement = undefined;\n            }\n        });\n\n        this.props.popoverProps?.onClosing?.(node);\n    };\n\n    private resetQuery = () => this.queryList && this.queryList.setQuery(\"\", true);\n}\n"]},"metadata":{},"sourceType":"module"}