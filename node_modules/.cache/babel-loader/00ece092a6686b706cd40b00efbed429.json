{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\"; // eslint-disable-next-line import/no-cycle\n\nimport { Popover, PopoverInteractionKind } from \"../popover/popover\";\n/** @deprecated use { Tooltip2 } from \"@blueprintjs/popover2\" */\n\nvar Tooltip =\n/** @class */\nfunction (_super) {\n  __extends(Tooltip, _super);\n\n  function Tooltip() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // eslint-disable-next-line deprecation/deprecation\n\n\n    _this.popover = null;\n    return _this;\n  }\n\n  Tooltip.prototype.render = function () {\n    var _a;\n\n    var _this = this;\n\n    var _b = this.props,\n        children = _b.children,\n        intent = _b.intent,\n        popoverClassName = _b.popoverClassName,\n        restProps = __rest(_b, [\"children\", \"intent\", \"popoverClassName\"]);\n\n    var classes = classNames(Classes.TOOLTIP, (_a = {}, _a[Classes.MINIMAL] = this.props.minimal, _a), Classes.intentClass(intent), popoverClassName);\n    return (\n      /* eslint-disable deprecation/deprecation */\n      React.createElement(Popover, __assign({\n        interactionKind: PopoverInteractionKind.HOVER_TARGET_ONLY,\n        modifiers: {\n          arrow: {\n            enabled: !this.props.minimal\n          }\n        }\n      }, restProps, {\n        autoFocus: false,\n        canEscapeKeyClose: false,\n        enforceFocus: false,\n        lazy: true,\n        popoverClassName: classes,\n        portalContainer: this.props.portalContainer,\n        ref: function (ref) {\n          return _this.popover = ref;\n        }\n      }), children)\n    );\n  };\n\n  Tooltip.prototype.reposition = function () {\n    if (this.popover != null) {\n      this.popover.reposition();\n    }\n  };\n\n  Tooltip.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Tooltip\");\n  Tooltip.defaultProps = {\n    hoverCloseDelay: 0,\n    hoverOpenDelay: 100,\n    minimal: false,\n    transitionDuration: 100\n  };\n  return Tooltip;\n}(AbstractPureComponent2);\n\nexport { Tooltip };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,sBAAT,EAAiCC,OAAjC,QAAgD,cAAhD;AACA,SAASC,kBAAT,QAAgD,oBAAhD,C,CACA;;AACA,SAASC,OAAT,EAAkBC,sBAAlB,QAAgD,oBAAhD;AAkDA;;AACA;AAAA;AAAA;AAA6BC;;AAA7B;AAAA,0EAUI;;;AACQC,oBAA0B,IAA1B;;AAmCX;;AAjCUC,6BAAP;;;AAAA;;AACI,QAAMC,KAAuD,KAAKC,KAAlE;AAAA,QAAQC,QAAQ,cAAhB;AAAA,QAAkBC,MAAM,YAAxB;AAAA,QAA0BC,gBAAgB,sBAA1C;AAAA,QAA+CC,SAAS,cAAlD,0CAAkD,CAAxD;;AACA,QAAMC,OAAO,GAAGhB,UAAU,CACtBG,OAAO,CAACc,OADc,GACPC,SACbA,GAACf,OAAO,CAACgB,OAAT,IAAmB,KAAKR,KAAL,CAAWS,OADjB,EACwBF,EAFjB,GAGtBf,OAAO,CAACkB,WAAR,CAAoBR,MAApB,CAHsB,EAItBC,gBAJsB,CAA1B;AAOA;AACI;AACAb,0BAACI,OAAD,EAAQiB;AACJC,uBAAe,EAAEjB,sBAAsB,CAACkB,iBADpC;AAEJC,iBAAS,EAAE;AAAEC,eAAK,EAAE;AAAEC,mBAAO,EAAE,CAAC,KAAKhB,KAAL,CAAWS;AAAvB;AAAT;AAFP,SAGAL,SAHA,EAGS;AACba,iBAAS,EAAE,KADE;AAEbC,yBAAiB,EAAE,KAFN;AAGbC,oBAAY,EAAE,KAHD;AAIbC,YAAI,EAAE,IAJO;AAKbjB,wBAAgB,EAAEE,OALL;AAMbgB,uBAAe,EAAE,KAAKrB,KAAL,CAAWqB,eANf;AAObC,WAAG,EAAE,eAAG;AAAI,iBAACzB,KAAI,CAAC0B,OAAL,GAAeD,GAAhB;AAAoB;AAPnB,OAHT,CAAR,EAYKrB,QAZL;AAFJ;AAiBH,GA1BM;;AA4BAH,iCAAP;AACI,QAAI,KAAKyB,OAAL,IAAgB,IAApB,EAA0B;AACtB,WAAKA,OAAL,CAAaC,UAAb;AACH;AACJ,GAJM;;AAxCO1B,wBAAc,UAAGL,kBAAH,EAAqB,UAArB,CAAd;AAEAK,yBAAsC;AAChD2B,mBAAe,EAAE,CAD+B;AAEhDC,kBAAc,EAAE,GAFgC;AAGhDjB,WAAO,EAAE,KAHuC;AAIhDkB,sBAAkB,EAAE;AAJ4B,GAAtC;AA2ClB;AAAC,CA9CD,CAA6BpC,sBAA7B;;SAAaO","names":["classNames","React","AbstractPureComponent2","Classes","DISPLAYNAME_PREFIX","Popover","PopoverInteractionKind","__extends","_this","Tooltip","_b","props","children","intent","popoverClassName","restProps","classes","TOOLTIP","_a","MINIMAL","minimal","intentClass","__assign","interactionKind","HOVER_TARGET_ONLY","modifiers","arrow","enabled","autoFocus","canEscapeKeyClose","enforceFocus","lazy","portalContainer","ref","popover","reposition","hoverCloseDelay","hoverOpenDelay","transitionDuration"],"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/node_modules/@blueprintjs/core/src/components/tooltip/tooltip.tsx"],"sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, IntentProps } from \"../../common/props\";\n// eslint-disable-next-line import/no-cycle\nimport { Popover, PopoverInteractionKind } from \"../popover/popover\";\nimport { IPopoverSharedProps } from \"../popover/popoverSharedProps\";\n\n// eslint-disable-next-line deprecation/deprecation\nexport type TooltipProps = ITooltipProps;\n/** @deprecated use TooltipProps */\nexport interface ITooltipProps extends IPopoverSharedProps, IntentProps {\n    /**\n     * The content that will be displayed inside of the tooltip.\n     */\n    content: JSX.Element | string;\n\n    /**\n     * The amount of time in milliseconds the tooltip should remain open after\n     * the user hovers off the trigger. The timer is canceled if the user mouses\n     * over the target before it expires.\n     *\n     * @default 0\n     */\n    hoverCloseDelay?: number;\n\n    /**\n     * The amount of time in milliseconds the tooltip should wait before opening\n     * after the user hovers over the trigger. The timer is canceled if the user\n     * mouses away from the target before it expires.\n     *\n     * @default 100\n     */\n    hoverOpenDelay?: number;\n\n    /**\n     * The kind of hover interaction that triggers the display of the tooltip.\n     * Tooltips do not support click interactions.\n     *\n     * @default PopoverInteractionKind.HOVER_TARGET_ONLY\n     */\n    interactionKind?: typeof PopoverInteractionKind.HOVER | typeof PopoverInteractionKind.HOVER_TARGET_ONLY;\n\n    /**\n     * Indicates how long (in milliseconds) the tooltip's appear/disappear\n     * transition takes. This is used by React `CSSTransition` to know when a\n     * transition completes and must match the duration of the animation in CSS.\n     * Only set this prop if you override Blueprint's default transitions with\n     * new transitions of a different length.\n     *\n     * @default 100\n     */\n    transitionDuration?: number;\n}\n\n/** @deprecated use { Tooltip2 } from \"@blueprintjs/popover2\" */\nexport class Tooltip extends AbstractPureComponent2<TooltipProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Tooltip`;\n\n    public static defaultProps: Partial<TooltipProps> = {\n        hoverCloseDelay: 0,\n        hoverOpenDelay: 100,\n        minimal: false,\n        transitionDuration: 100,\n    };\n\n    // eslint-disable-next-line deprecation/deprecation\n    private popover: Popover | null = null;\n\n    public render() {\n        const { children, intent, popoverClassName, ...restProps } = this.props;\n        const classes = classNames(\n            Classes.TOOLTIP,\n            { [Classes.MINIMAL]: this.props.minimal },\n            Classes.intentClass(intent),\n            popoverClassName,\n        );\n\n        return (\n            /* eslint-disable deprecation/deprecation */\n            <Popover\n                interactionKind={PopoverInteractionKind.HOVER_TARGET_ONLY}\n                modifiers={{ arrow: { enabled: !this.props.minimal } }}\n                {...restProps}\n                autoFocus={false}\n                canEscapeKeyClose={false}\n                enforceFocus={false}\n                lazy={true}\n                popoverClassName={classes}\n                portalContainer={this.props.portalContainer}\n                ref={ref => (this.popover = ref)}\n            >\n                {children}\n            </Popover>\n        );\n    }\n\n    public reposition() {\n        if (this.popover != null) {\n            this.popover.reposition();\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}