{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport * as Classes from \"../../common/classes\";\nimport * as Errors from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { isFunction } from \"../../common/utils\";\n/** Detect if `React.createPortal()` API method does not exist. */\n\nvar cannotCreatePortal = !isFunction(ReactDOM.createPortal);\nvar REACT_CONTEXT_TYPES = {\n  blueprintPortalClassName: function (obj, key) {\n    if (obj[key] != null && typeof obj[key] !== \"string\") {\n      return new Error(Errors.PORTAL_CONTEXT_CLASS_NAME_STRING);\n    }\n\n    return undefined;\n  }\n};\n/**\n * This component detaches its contents and re-attaches them to document.body.\n * Use it when you need to circumvent DOM z-stacking (for dialogs, popovers, etc.).\n * Any class names passed to this element will be propagated to the new container element on document.body.\n */\n\nvar Portal =\n/** @class */\nfunction (_super) {\n  __extends(Portal, _super);\n\n  function Portal() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.context = {};\n    _this.state = {\n      hasMounted: false\n    };\n    _this.portalElement = null;\n    return _this;\n  }\n\n  Portal.prototype.render = function () {\n    // Only render `children` once this component has mounted in a browser environment, so they are\n    // immediately attached to the DOM tree and can do DOM things like measuring or `autoFocus`.\n    // See long comment on componentDidMount in https://reactjs.org/docs/portals.html#event-bubbling-through-portals\n    if (cannotCreatePortal || typeof document === \"undefined\" || !this.state.hasMounted || this.portalElement === null) {\n      return null;\n    } else {\n      return ReactDOM.createPortal(this.props.children, this.portalElement);\n    }\n  };\n\n  Portal.prototype.componentDidMount = function () {\n    if (!this.props.container) {\n      return;\n    }\n\n    this.portalElement = this.createContainerElement();\n    this.props.container.appendChild(this.portalElement);\n    /* eslint-disable-next-line react/no-did-mount-set-state */\n\n    this.setState({\n      hasMounted: true\n    }, this.props.onChildrenMount);\n\n    if (cannotCreatePortal) {\n      this.unstableRenderNoPortal();\n    }\n  };\n\n  Portal.prototype.componentDidUpdate = function (prevProps) {\n    // update className prop on portal DOM element\n    if (this.portalElement != null && prevProps.className !== this.props.className) {\n      maybeRemoveClass(this.portalElement.classList, prevProps.className);\n      maybeAddClass(this.portalElement.classList, this.props.className);\n    }\n\n    if (cannotCreatePortal) {\n      this.unstableRenderNoPortal();\n    }\n  };\n\n  Portal.prototype.componentWillUnmount = function () {\n    if (this.portalElement != null) {\n      if (cannotCreatePortal) {\n        ReactDOM.unmountComponentAtNode(this.portalElement);\n      }\n\n      this.portalElement.remove();\n    }\n  };\n\n  Portal.prototype.createContainerElement = function () {\n    var container = document.createElement(\"div\");\n    container.classList.add(Classes.PORTAL);\n    maybeAddClass(container.classList, this.props.className);\n\n    if (this.context != null) {\n      maybeAddClass(container.classList, this.context.blueprintPortalClassName);\n    }\n\n    return container;\n  };\n\n  Portal.prototype.unstableRenderNoPortal = function () {\n    if (this.portalElement === null) {\n      return;\n    }\n\n    ReactDOM.unstable_renderSubtreeIntoContainer(\n    /* parentComponent */\n    this, React.createElement(\"div\", null, this.props.children), this.portalElement);\n  };\n\n  Portal.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Portal\");\n  Portal.contextTypes = REACT_CONTEXT_TYPES;\n  Portal.defaultProps = {\n    container: typeof document !== \"undefined\" ? document.body : undefined\n  };\n  return Portal;\n}(React.Component);\n\nexport { Portal };\n\nfunction maybeRemoveClass(classList, className) {\n  if (className != null && className !== \"\") {\n    classList.remove.apply(classList, className.split(\" \"));\n  }\n}\n\nfunction maybeAddClass(classList, className) {\n  if (className != null && className !== \"\") {\n    classList.add.apply(classList, className.split(\" \"));\n  }\n}","map":{"version":3,"mappings":"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","names":["React","ReactDOM","Classes","Errors","DISPLAYNAME_PREFIX","isFunction","cannotCreatePortal","createPortal","REACT_CONTEXT_TYPES","blueprintPortalClassName","obj","key","Error","PORTAL_CONTEXT_CLASS_NAME_STRING","undefined","__extends","_this","hasMounted","Portal","document","state","portalElement","props","children","container","createContainerElement","appendChild","setState","onChildrenMount","unstableRenderNoPortal","prevProps","className","maybeRemoveClass","classList","maybeAddClass","unmountComponentAtNode","remove","createElement","add","PORTAL","context","unstable_renderSubtreeIntoContainer","body","Component","apply","split"],"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/node_modules/@blueprintjs/core/src/components/portal/portal.tsx"],"sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport * as Classes from \"../../common/classes\";\nimport { ValidationMap } from \"../../common/context\";\nimport * as Errors from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX, Props } from \"../../common/props\";\nimport { isFunction } from \"../../common/utils\";\n\n/** Detect if `React.createPortal()` API method does not exist. */\nconst cannotCreatePortal = !isFunction(ReactDOM.createPortal);\n\n// eslint-disable-next-line deprecation/deprecation\nexport type PortalProps = IPortalProps;\n/** @deprecated use PortalProps */\nexport interface IPortalProps extends Props {\n    /** Contents to send through the portal. */\n    children: React.ReactNode;\n\n    /**\n     * Callback invoked when the children of this `Portal` have been added to the DOM.\n     */\n    onChildrenMount?: () => void;\n\n    /**\n     * The HTML element that children will be mounted to.\n     *\n     * @default document.body\n     */\n    container?: HTMLElement;\n}\n\nexport interface IPortalState {\n    hasMounted: boolean;\n}\n\nexport interface IPortalContext {\n    /** Additional CSS classes to add to all `Portal` elements in this React context. */\n    blueprintPortalClassName?: string;\n}\n\nconst REACT_CONTEXT_TYPES: ValidationMap<IPortalContext> = {\n    blueprintPortalClassName: (obj: IPortalContext, key: keyof IPortalContext) => {\n        if (obj[key] != null && typeof obj[key] !== \"string\") {\n            return new Error(Errors.PORTAL_CONTEXT_CLASS_NAME_STRING);\n        }\n        return undefined;\n    },\n};\n\n/**\n * This component detaches its contents and re-attaches them to document.body.\n * Use it when you need to circumvent DOM z-stacking (for dialogs, popovers, etc.).\n * Any class names passed to this element will be propagated to the new container element on document.body.\n */\nexport class Portal extends React.Component<PortalProps, IPortalState> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Portal`;\n\n    public static contextTypes = REACT_CONTEXT_TYPES;\n\n    public static defaultProps: Partial<PortalProps> = {\n        container: typeof document !== \"undefined\" ? document.body : undefined,\n    };\n\n    public context: IPortalContext = {};\n\n    public state: IPortalState = { hasMounted: false };\n\n    private portalElement: HTMLElement | null = null;\n\n    public render() {\n        // Only render `children` once this component has mounted in a browser environment, so they are\n        // immediately attached to the DOM tree and can do DOM things like measuring or `autoFocus`.\n        // See long comment on componentDidMount in https://reactjs.org/docs/portals.html#event-bubbling-through-portals\n        if (\n            cannotCreatePortal ||\n            typeof document === \"undefined\" ||\n            !this.state.hasMounted ||\n            this.portalElement === null\n        ) {\n            return null;\n        } else {\n            return ReactDOM.createPortal(this.props.children, this.portalElement);\n        }\n    }\n\n    public componentDidMount() {\n        if (!this.props.container) {\n            return;\n        }\n        this.portalElement = this.createContainerElement();\n        this.props.container.appendChild(this.portalElement);\n        /* eslint-disable-next-line react/no-did-mount-set-state */\n        this.setState({ hasMounted: true }, this.props.onChildrenMount);\n        if (cannotCreatePortal) {\n            this.unstableRenderNoPortal();\n        }\n    }\n\n    public componentDidUpdate(prevProps: PortalProps) {\n        // update className prop on portal DOM element\n        if (this.portalElement != null && prevProps.className !== this.props.className) {\n            maybeRemoveClass(this.portalElement.classList, prevProps.className);\n            maybeAddClass(this.portalElement.classList, this.props.className);\n        }\n\n        if (cannotCreatePortal) {\n            this.unstableRenderNoPortal();\n        }\n    }\n\n    public componentWillUnmount() {\n        if (this.portalElement != null) {\n            if (cannotCreatePortal) {\n                ReactDOM.unmountComponentAtNode(this.portalElement);\n            }\n            this.portalElement.remove();\n        }\n    }\n\n    private createContainerElement() {\n        const container = document.createElement(\"div\");\n        container.classList.add(Classes.PORTAL);\n        maybeAddClass(container.classList, this.props.className);\n        if (this.context != null) {\n            maybeAddClass(container.classList, this.context.blueprintPortalClassName);\n        }\n        return container;\n    }\n\n    private unstableRenderNoPortal() {\n        if (this.portalElement === null) {\n            return;\n        }\n        ReactDOM.unstable_renderSubtreeIntoContainer(\n            /* parentComponent */ this,\n            <div>{this.props.children}</div>,\n            this.portalElement,\n        );\n    }\n}\n\nfunction maybeRemoveClass(classList: DOMTokenList, className?: string) {\n    if (className != null && className !== \"\") {\n        classList.remove(...className.split(\" \"));\n    }\n}\n\nfunction maybeAddClass(classList: DOMTokenList, className?: string) {\n    if (className != null && className !== \"\") {\n        classList.add(...className.split(\" \"));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}