{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n\nvar Text =\n/** @class */\nfunction (_super) {\n  __extends(Text, _super);\n\n  function Text() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      isContentOverflowing: false,\n      textContent: \"\"\n    };\n    _this.textRef = null;\n    return _this;\n  }\n\n  Text.prototype.componentDidMount = function () {\n    this.update();\n  };\n\n  Text.prototype.componentDidUpdate = function () {\n    this.update();\n  };\n\n  Text.prototype.render = function () {\n    var _a;\n\n    var _this = this;\n\n    var _b = this.props,\n        children = _b.children,\n        className = _b.className,\n        ellipsize = _b.ellipsize,\n        _c = _b.tagName,\n        tagName = _c === void 0 ? \"div\" : _c,\n        title = _b.title,\n        htmlProps = __rest(_b, [\"children\", \"className\", \"ellipsize\", \"tagName\", \"title\"]);\n\n    var classes = classNames(className, (_a = {}, _a[Classes.TEXT_OVERFLOW_ELLIPSIS] = ellipsize, _a));\n    return React.createElement(tagName, __assign(__assign({}, htmlProps), {\n      className: classes,\n      ref: function (ref) {\n        return _this.textRef = ref;\n      },\n      title: title !== null && title !== void 0 ? title : this.state.isContentOverflowing ? this.state.textContent : undefined\n    }), children);\n  };\n\n  Text.prototype.update = function () {\n    var _a;\n\n    if (((_a = this.textRef) === null || _a === void 0 ? void 0 : _a.textContent) == null) {\n      return;\n    }\n\n    var newState = {\n      isContentOverflowing: this.props.ellipsize && this.textRef.scrollWidth > this.textRef.clientWidth,\n      textContent: this.textRef.textContent\n    };\n    this.setState(newState);\n  };\n\n  Text.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Text\");\n  Text.defaultProps = {\n    ellipsize: false\n  };\n  return Text;\n}(AbstractPureComponent2);\n\nexport { Text };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,sBAAT,EAAiCC,OAAjC,QAAgD,cAAhD;AACA,SAASC,kBAAT,QAA0C,oBAA1C;;AAkCA;AAAA;AAAA;AAA0BC;;AAA1B;AAAA;;AAUWC,kBAAoB;AACvBC,0BAAoB,EAAE,KADC;AAEvBC,iBAAW,EAAE;AAFU,KAApB;AAKCF,oBAA8B,IAA9B;;AAsCX;;AApCUG,qCAAP;AACI,SAAKC,MAAL;AACH,GAFM;;AAIAD,sCAAP;AACI,SAAKC,MAAL;AACH,GAFM;;AAIAD,0BAAP;;;AAAA;;AACI,QAAME,KAA2E,KAAKC,KAAtF;AAAA,QAAQC,QAAQ,cAAhB;AAAA,QAAkBC,SAAS,eAA3B;AAAA,QAA6BC,SAAS,eAAtC;AAAA,QAAwCC,eAAxC;AAAA,QAAwCC,OAAO,mBAAG,KAAH,GAAQD,EAAvD;AAAA,QAAyDE,KAAK,WAA9D;AAAA,QAAmEC,SAAS,cAAtE,0DAAsE,CAA5E;;AACA,QAAMC,OAAO,GAAGpB,UAAU,CAACc,SAAD,GAAUO,SAChCA,GAAClB,OAAO,CAACmB,sBAAT,IAAkCP,SADF,IAAV,EAA1B;AAIA,WAAOd,KAAK,CAACsB,aAAN,CACHN,OADG,EACIO,sBAEAL,SAFA,GAES;AACZL,eAAS,EAAEM,OADC;AAEZK,SAAG,EAAE,UAACA,GAAD,EAAwB;AAAK,eAACnB,KAAI,CAACoB,OAAL,GAAeD,GAAhB;AAAoB,OAF1C;AAGZP,WAAK,EAAEA,KAAK,SAAL,SAAK,WAAL,WAAU,KAAKS,KAAL,CAAWpB,oBAAX,GAAkC,KAAKoB,KAAL,CAAWnB,WAA7C,GAA2DoB;AAHhE,KAFT,CADJ,EAQHf,QARG,CAAP;AAUH,GAhBM;;AAkBCJ,0BAAR;;;AACI,QAAI,YAAKiB,OAAL,MAAY,IAAZ,IAAYL,aAAZ,GAAY,MAAZ,GAAYA,GAAEb,WAAd,KAA6B,IAAjC,EAAuC;AACnC;AACH;;AACD,QAAMqB,QAAQ,GAAG;AACbtB,0BAAoB,EAAE,KAAKK,KAAL,CAAWG,SAAX,IAAyB,KAAKW,OAAL,CAAaI,WAAb,GAA2B,KAAKJ,OAAL,CAAaK,WAD1E;AAEbvB,iBAAW,EAAE,KAAKkB,OAAL,CAAalB;AAFb,KAAjB;AAIA,SAAKwB,QAAL,CAAcH,QAAd;AACH,GATO;;AAvCMpB,qBAAc,UAAGL,kBAAH,EAAqB,OAArB,CAAd;AAEAK,sBAAmC;AAC7CM,aAAS,EAAE;AADkC,GAAnC;AA+ClB;AAAC,CArDD,CAA0Bb,sBAA1B;;SAAaO","names":["classNames","React","AbstractPureComponent2","Classes","DISPLAYNAME_PREFIX","__extends","_this","isContentOverflowing","textContent","Text","update","_b","props","children","className","ellipsize","_c","tagName","title","htmlProps","classes","_a","TEXT_OVERFLOW_ELLIPSIS","createElement","__assign","ref","textRef","state","undefined","newState","scrollWidth","clientWidth","setState"],"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/node_modules/@blueprintjs/core/src/components/text/text.tsx"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, Props } from \"../../common/props\";\n\n// eslint-disable-next-line deprecation/deprecation\nexport type TextProps = ITextProps;\n/** @deprecated use TextProps */\nexport interface ITextProps extends Props {\n    children?: React.ReactNode;\n\n    /**\n     * Indicates that this component should be truncated with an ellipsis if it overflows its container.\n     * The `title` attribute will also be added when content overflows to show the full text of the children on hover.\n     *\n     * @default false\n     */\n    ellipsize?: boolean;\n\n    /**\n     * HTML tag name to use for rendered element.\n     *\n     * @default \"div\"\n     */\n    tagName?: keyof JSX.IntrinsicElements;\n\n    /**\n     * HTML title of the element\n     */\n    title?: string;\n}\n\nexport interface ITextState {\n    textContent: string;\n    isContentOverflowing: boolean;\n}\n\nexport class Text extends AbstractPureComponent2<\n    TextProps & Omit<React.HTMLAttributes<HTMLElement>, \"title\">,\n    ITextState\n> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Text`;\n\n    public static defaultProps: Partial<TextProps> = {\n        ellipsize: false,\n    };\n\n    public state: ITextState = {\n        isContentOverflowing: false,\n        textContent: \"\",\n    };\n\n    private textRef: HTMLElement | null = null;\n\n    public componentDidMount() {\n        this.update();\n    }\n\n    public componentDidUpdate() {\n        this.update();\n    }\n\n    public render() {\n        const { children, className, ellipsize, tagName = \"div\", title, ...htmlProps } = this.props;\n        const classes = classNames(className, {\n            [Classes.TEXT_OVERFLOW_ELLIPSIS]: ellipsize,\n        });\n\n        return React.createElement(\n            tagName,\n            {\n                ...htmlProps,\n                className: classes,\n                ref: (ref: HTMLElement | null) => (this.textRef = ref),\n                title: title ?? (this.state.isContentOverflowing ? this.state.textContent : undefined),\n            },\n            children,\n        );\n    }\n\n    private update() {\n        if (this.textRef?.textContent == null) {\n            return;\n        }\n        const newState = {\n            isContentOverflowing: this.props.ellipsize! && this.textRef.scrollWidth > this.textRef.clientWidth,\n            textContent: this.textRef.textContent,\n        };\n        this.setState(newState);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}