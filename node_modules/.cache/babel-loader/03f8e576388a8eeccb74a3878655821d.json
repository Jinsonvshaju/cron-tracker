{"ast":null,"code":"/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from \"react\";\n/**\n * Returns true if `node` is null/undefined, false, empty string, or an array\n * composed of those. If `node` is an array, only one level of the array is\n * checked, for performance reasons.\n */\n\nexport function isReactNodeEmpty(node, skipArray) {\n  if (skipArray === void 0) {\n    skipArray = false;\n  }\n\n  return node == null || node === \"\" || node === false || !skipArray && Array.isArray(node) && ( // only recurse one level through arrays, for performance\n  node.length === 0 || node.every(function (n) {\n    return isReactNodeEmpty(n, true);\n  }));\n}\n/**\n * Returns true if children are a mappable children array\n *\n * @internal\n */\n\nexport function isReactChildrenElementOrElements(children) {\n  return !isReactNodeEmpty(children, true) && children !== true;\n}\n/**\n * Converts a React node to an element: non-empty string or number or\n * `React.Fragment` (React 16.3+) is wrapped in given tag name; empty strings\n * and booleans are discarded.\n */\n\nexport function ensureElement(child, tagName) {\n  if (tagName === void 0) {\n    tagName = \"span\";\n  }\n\n  if (child == null || typeof child === \"boolean\") {\n    return undefined;\n  } else if (typeof child === \"string\") {\n    // cull whitespace strings\n    return child.trim().length > 0 ? React.createElement(tagName, {}, child) : undefined;\n  } else if (typeof child === \"number\" || typeof child.type === \"symbol\" || Array.isArray(child)) {\n    // React.Fragment has a symbol type, ReactNodeArray extends from Array\n    return React.createElement(tagName, {}, child);\n  } else if (isReactElement(child)) {\n    return child;\n  } else {\n    // child is inferred as {}\n    return undefined;\n  }\n}\n\nfunction isReactElement(child) {\n  return typeof child === \"object\" && typeof child.type !== \"undefined\" && typeof child.props !== \"undefined\";\n}\n/**\n * @deprecated will be removed in v5.0\n */\n\n\nexport function getDisplayName(ComponentClass) {\n  return ComponentClass.displayName || ComponentClass.name || \"Unknown\";\n}\n/**\n * Returns true if the given JSX element matches the given component type.\n *\n * NOTE: This function only checks equality of `displayName` for performance and\n * to tolerate multiple minor versions of a component being included in one\n * application bundle.\n *\n * @param element JSX element in question\n * @param ComponentType desired component type of element\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\nexport function isElementOfType(element, ComponentType) {\n  return element != null && element.type != null && element.type.displayName != null && element.type.displayName === ComponentType.displayName;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA;;;;;;AAKA,OAAM,SAAUC,gBAAV,CAA2BC,IAA3B,EAAmDC,SAAnD,EAAoE;AAAjB;AAAAA;AAAiB;;AACtE,SACID,IAAI,IAAI,IAAR,IACAA,IAAI,KAAK,EADT,IAEAA,IAAI,KAAK,KAFT,IAGC,CAACC,SAAD,IACGC,KAAK,CAACC,OAAN,CAAcH,IAAd,CADH,MAEG;AACCA,MAAI,CAACI,MAAL,KAAgB,CAAhB,IAAqBJ,IAAI,CAACK,KAAL,CAAW,aAAC;AAAI,2BAAgB,CAACC,CAAD,EAAI,IAAJ,CAAhB;AAAyB,GAAzC,CAHzB,CAJL;AASH;AAED;;;;;;AAKA,OAAM,SAAUC,gCAAV,CAA2CC,QAA3C,EAAoE;AACtE,SAAO,CAACT,gBAAgB,CAACS,QAAD,EAAW,IAAX,CAAjB,IAAqCA,QAAQ,KAAK,IAAzD;AACH;AAED;;;;;;AAKA,OAAM,SAAUC,aAAV,CAAwBC,KAAxB,EAA4DC,OAA5D,EAAyG;AAA7C;AAAAA;AAA6C;;AAC3G,MAAID,KAAK,IAAI,IAAT,IAAiB,OAAOA,KAAP,KAAiB,SAAtC,EAAiD;AAC7C,WAAOE,SAAP;AACH,GAFD,MAEO,IAAI,OAAOF,KAAP,KAAiB,QAArB,EAA+B;AAClC;AACA,WAAOA,KAAK,CAACG,IAAN,GAAaT,MAAb,GAAsB,CAAtB,GAA0BN,KAAK,CAACgB,aAAN,CAAoBH,OAApB,EAA6B,EAA7B,EAAiCD,KAAjC,CAA1B,GAAoEE,SAA3E;AACH,GAHM,MAGA,IAAI,OAAOF,KAAP,KAAiB,QAAjB,IAA6B,OAAQA,KAAa,CAACK,IAAtB,KAA+B,QAA5D,IAAwEb,KAAK,CAACC,OAAN,CAAcO,KAAd,CAA5E,EAAkG;AACrG;AACA,WAAOZ,KAAK,CAACgB,aAAN,CAAoBH,OAApB,EAA6B,EAA7B,EAAiCD,KAAjC,CAAP;AACH,GAHM,MAGA,IAAIM,cAAc,CAACN,KAAD,CAAlB,EAA2B;AAC9B,WAAOA,KAAP;AACH,GAFM,MAEA;AACH;AACA,WAAOE,SAAP;AACH;AACJ;;AAED,SAASI,cAAT,CAAiCN,KAAjC,EAAuD;AACnD,SACI,OAAOA,KAAP,KAAiB,QAAjB,IACA,OAAQA,KAAa,CAACK,IAAtB,KAA+B,WAD/B,IAEA,OAAQL,KAAa,CAACO,KAAtB,KAAgC,WAHpC;AAKH;AASD;;;;;AAGA,OAAM,SAAUC,cAAV,CAAyBC,cAAzB,EAAqE;AACvE,SAAQA,cAAsC,CAACC,WAAvC,IAAuDD,cAAyB,CAACE,IAAjF,IAAyF,SAAjG;AACH;AAED;;;;;;;;;;AAUA;;AACA,OAAM,SAAUC,eAAV,CACFC,OADE,EAEFC,aAFE,EAEmC;AAErC,SACID,OAAO,IAAI,IAAX,IACAA,OAAO,CAACR,IAAR,IAAgB,IADhB,IAEAQ,OAAO,CAACR,IAAR,CAAaK,WAAb,IAA4B,IAF5B,IAGAG,OAAO,CAACR,IAAR,CAAaK,WAAb,KAA6BI,aAAa,CAACJ,WAJ/C;AAMH","names":["React","isReactNodeEmpty","node","skipArray","Array","isArray","length","every","n","isReactChildrenElementOrElements","children","ensureElement","child","tagName","undefined","trim","createElement","type","isReactElement","props","getDisplayName","ComponentClass","displayName","name","isElementOfType","element","ComponentType"],"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/node_modules/@blueprintjs/core/src/common/utils/reactUtils.ts"],"sourcesContent":["/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\n/**\n * Returns true if `node` is null/undefined, false, empty string, or an array\n * composed of those. If `node` is an array, only one level of the array is\n * checked, for performance reasons.\n */\nexport function isReactNodeEmpty(node?: React.ReactNode, skipArray = false): boolean {\n    return (\n        node == null ||\n        node === \"\" ||\n        node === false ||\n        (!skipArray &&\n            Array.isArray(node) &&\n            // only recurse one level through arrays, for performance\n            (node.length === 0 || node.every(n => isReactNodeEmpty(n, true))))\n    );\n}\n\n/**\n * Returns true if children are a mappable children array\n *\n * @internal\n */\nexport function isReactChildrenElementOrElements(children: React.ReactNode): children is JSX.Element[] | JSX.Element {\n    return !isReactNodeEmpty(children, true) && children !== true;\n}\n\n/**\n * Converts a React node to an element: non-empty string or number or\n * `React.Fragment` (React 16.3+) is wrapped in given tag name; empty strings\n * and booleans are discarded.\n */\nexport function ensureElement(child: React.ReactNode | undefined, tagName: keyof JSX.IntrinsicElements = \"span\") {\n    if (child == null || typeof child === \"boolean\") {\n        return undefined;\n    } else if (typeof child === \"string\") {\n        // cull whitespace strings\n        return child.trim().length > 0 ? React.createElement(tagName, {}, child) : undefined;\n    } else if (typeof child === \"number\" || typeof (child as any).type === \"symbol\" || Array.isArray(child)) {\n        // React.Fragment has a symbol type, ReactNodeArray extends from Array\n        return React.createElement(tagName, {}, child);\n    } else if (isReactElement(child)) {\n        return child;\n    } else {\n        // child is inferred as {}\n        return undefined;\n    }\n}\n\nfunction isReactElement<T = any>(child: React.ReactNode): child is React.ReactElement<T> {\n    return (\n        typeof child === \"object\" &&\n        typeof (child as any).type !== \"undefined\" &&\n        typeof (child as any).props !== \"undefined\"\n    );\n}\n\n/**\n * Represents anything that has a `name` property such as Functions.\n */\ninterface INamed {\n    name?: string;\n}\n\n/**\n * @deprecated will be removed in v5.0\n */\nexport function getDisplayName(ComponentClass: React.ComponentType | INamed) {\n    return (ComponentClass as React.ComponentType).displayName || (ComponentClass as INamed).name || \"Unknown\";\n}\n\n/**\n * Returns true if the given JSX element matches the given component type.\n *\n * NOTE: This function only checks equality of `displayName` for performance and\n * to tolerate multiple minor versions of a component being included in one\n * application bundle.\n *\n * @param element JSX element in question\n * @param ComponentType desired component type of element\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isElementOfType<P = {}>(\n    element: any,\n    ComponentType: React.ComponentType<P>,\n): element is React.ReactElement<P> {\n    return (\n        element != null &&\n        element.type != null &&\n        element.type.displayName != null &&\n        element.type.displayName === ComponentType.displayName\n    );\n}\n"]},"metadata":{},"sourceType":"module"}