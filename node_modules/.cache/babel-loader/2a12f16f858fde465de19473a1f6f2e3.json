{"ast":null,"code":"var _jsxFileName = \"/home/jinsonshaju/collateral/collateral-email-tracker/src/components/sign-in/SignIn.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { UseState } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport \"./sign-in-styles.scss\";\nimport Button from \"../button/Button\";\nimport { signInAuthUserWithEmailAndPassword } from \"../../util/firebase/Firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormFields = {\n  email: \"\",\n  password: \"\"\n};\n\nfunction SignIn(props) {\n  _s();\n\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    email,\n    password\n  } = formFields;\n\n  const signInWithGoogle = async () => {\n    const {\n      user\n    } = await signInAuthUserWithEmailAndPassword(email, password);\n    console.log(user);\n    resetForm();\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({ ...formFields,\n      [name]: value\n    });\n  };\n\n  const resetForm = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      resetForm();\n    } catch (error) {\n      switch (error.code) {\n        case \"auth/wrong-password\":\n          alert(\"Incorrect password for email\");\n          break;\n\n        case \"auth/user-not-found\":\n          alert(\"No user associated with this email\");\n          break;\n\n        default:\n          console.log(error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Already have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and passowrd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Email\",\n        type: \"email\",\n        required: true,\n        onChange: handleChange,\n        name: \"email\",\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Password\",\n        type: \"password\",\n        required: true,\n        onChange: handleChange,\n        name: \"password\",\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: signInWithGoogle,\n          buttonType: \"google\",\n          children: \"Google SignIn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"BSTP5B8VO6H/Fwu712VTuD9hH54=\");\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/src/components/sign-in/SignIn.jsx"],"names":["React","useState","UseState","FormInput","Button","signInAuthUserWithEmailAndPassword","defaultFormFields","email","password","SignIn","props","formFields","setFormFields","signInWithGoogle","user","console","log","resetForm","handleChange","event","name","value","target","handleSubmit","preventDefault","error","code","alert"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { UseState } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport \"./sign-in-styles.scss\";\nimport Button from \"../button/Button\";\n\nimport { signInAuthUserWithEmailAndPassword } from \"../../util/firebase/Firebase\";\n\nconst defaultFormFields = {\n  email: \"\",\n  password: \"\",\n};\n\nfunction SignIn(props) {\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const { email, password } = formFields;\n\n  const signInWithGoogle = async () => {\n    const { user } = await signInAuthUserWithEmailAndPassword(email, password);\n    console.log(user);\n    resetForm();\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormFields({ ...formFields, [name]: value });\n  };\n\n  const resetForm = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      resetForm();\n    } catch (error) {\n      switch (error.code) {\n        case \"auth/wrong-password\":\n          alert(\"Incorrect password for email\");\n          break;\n        case \"auth/user-not-found\":\n          alert(\"No user associated with this email\");\n          break;\n        default:\n          console.log(error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"sign-in-container\">\n      <h2>Already have an account?</h2>\n      <span>Sign up with your email and passowrd</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          label=\"Email\"\n          type=\"email\"\n          required\n          onChange={handleChange}\n          name=\"email\"\n          value={email}\n        />\n\n        <FormInput\n          label=\"Password\"\n          type=\"password\"\n          required\n          onChange={handleChange}\n          name=\"password\"\n          value={password}\n        />\n        <div className=\"buttons-container\">\n          <Button type=\"submit\">Sign In</Button>\n          <Button onClick={signInWithGoogle} buttonType=\"google\">\n            Google SignIn\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}