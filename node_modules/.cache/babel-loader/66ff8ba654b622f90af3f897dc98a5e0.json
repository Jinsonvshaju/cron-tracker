{"ast":null,"code":"import _slicedToArray from\"/home/jinsonshaju/GIT/cron-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import{useState,useEffect}from\"react\";import FileUpload from\"../fileUpload/FileUpload.jsx\";import{API}from\"../util/api/Api.js\";import\"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var api=new API();function CronDetails(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),records=_useState2[0],setRecords=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isFileUploaded=_useState4[0],setFileUploaded=_useState4[1];var _useState5=useState(\"Validate Cron\"),_useState6=_slicedToArray(_useState5,2),cronMessage=_useState6[0],setCronMessage=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),cron=_useState8[0],setCron=_useState8[1];useEffect(function(){getEntries();console.log(\"Cron Input form page reloaded\");//eslint-disable-next-line\n},[isFileUploaded]);var getEntries=function getEntries(){return new Promise(function(resolve){api.getRecords().then(function(res){setRecords(res.data.message);}).catch(function(err){console.log(err);});});};var setCronInfo=function setCronInfo(cron){return new Promise(function(resolve){api.getCronInfo(cron).then(function(res){setCronMessage(res.data.message);}).catch(function(err){console.log(err);});});};var handleCronChange=function handleCronChange(event){var value=event.target.value;if(value.trim().length>0){setCronInfo(value);}else setCronMessage(\"Validate Cron\");setCron(value);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(FileUpload,{uploadFlag:{set:setFileUploaded,get:isFileUploaded}}),records.length>0?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"table\",{className:\"table table-striped table-hover\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{children:Object.keys(records[0]).map(function(element){return/*#__PURE__*/_jsx(\"th\",{children:element},element);})}),records.map(function(val,key){return/*#__PURE__*/_jsx(\"tr\",{children:Object.values(val).map(function(value){return/*#__PURE__*/_jsx(\"td\",{children:value},Math.random());})},key);})]})})}):\"\",/*#__PURE__*/_jsx(\"div\",{className:\"fixed-bottom\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"form-floating\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control is-invalid\",id:\"floatingInputInvalid\",onChange:handleCronChange,value:cron}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"floatingInputInvalid\",children:cronMessage})]})})]});}export default CronDetails;","map":{"version":3,"sources":["/home/jinsonshaju/GIT/cron-tracker/src/components/crondetails/crondetails.jsx"],"names":["React","useState","useEffect","FileUpload","API","api","CronDetails","props","records","setRecords","isFileUploaded","setFileUploaded","cronMessage","setCronMessage","cron","setCron","getEntries","console","log","Promise","resolve","getRecords","then","res","data","message","catch","err","setCronInfo","getCronInfo","handleCronChange","event","value","target","trim","length","set","get","Object","keys","map","element","val","key","values","Math","random"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport FileUpload from \"../fileUpload/FileUpload.jsx\";\nimport { API } from \"../util/api/Api.js\";\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nlet api = new API();\n\nfunction CronDetails(props) {\n  const [records, setRecords] = useState([]);\n  const [isFileUploaded, setFileUploaded] = useState(false);\n  const [cronMessage, setCronMessage] = useState(\"Validate Cron\");\n  const [cron, setCron] = useState(\"\");\n\n  useEffect(() => {\n    getEntries();\n    console.log(\"Cron Input form page reloaded\");\n    //eslint-disable-next-line\n  }, [isFileUploaded]);\n\n  const getEntries = () => {\n    return new Promise((resolve) => {\n      api\n        .getRecords()\n        .then((res) => {\n          setRecords(res.data.message);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    });\n  };\n\n  const setCronInfo = (cron) => {\n    return new Promise((resolve) => {\n      api\n        .getCronInfo(cron)\n        .then((res) => {\n          setCronMessage(res.data.message);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    });\n  };\n\n  const handleCronChange = (event) => {\n    const value = event.target.value;\n    if (value.trim().length > 0) {\n      setCronInfo(value);\n    } else setCronMessage(\"Validate Cron\");\n    setCron(value);\n  };\n\n  return (\n    <div>\n      <FileUpload uploadFlag={{ set: setFileUploaded, get: isFileUploaded }} />\n      {records.length > 0 ? (\n        <div>\n          <table className=\"table table-striped table-hover\">\n            <tbody>\n              <tr>\n                {Object.keys(records[0]).map((element) => {\n                  return <th key={element}>{element}</th>;\n                })}\n              </tr>\n              {records.map((val, key) => {\n                return (\n                  <tr key={key}>\n                    {Object.values(val).map((value) => {\n                      return <td key={Math.random()}>{value}</td>;\n                    })}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"fixed-bottom\">\n        <form className=\"form-floating\">\n          <input\n            type=\"text\"\n            className=\"form-control is-invalid\"\n            id=\"floatingInputInvalid\"\n            onChange={handleCronChange}\n            value={cron}\n          />\n          <label htmlFor=\"floatingInputInvalid\">{cronMessage}</label>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default CronDetails;\n"]},"metadata":{},"sourceType":"module"}