{"ast":null,"code":"var _jsxFileName = \"/home/jinsonshaju/collateral/collateral-email-tracker/src/components/cronInputForm/CronInputForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport Button from \"../button/Button\";\nimport config from \"../../config\";\nimport FormSelector from \"../form-selector/FormSelector\";\nimport { API } from \"../util/api/Api.js\";\nimport \"./cronInputForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet api = new API();\nconst startIndex = 0;\nconst defaultOptions = {\n  clientNames: getClientName(config.clients),\n  exchanges: getExchangeName(config.exchanges),\n  envs: getEnvs(getClientName(config.clients)[startIndex].value),\n  timeZones: getTimeZones(config.timeZones),\n  reportCycles: getReportCycles(config.reportCycles)\n};\nconst defaultFormFields = {\n  cron: \"\",\n  name: \"\",\n  clientName: defaultOptions.clientNames[startIndex].value,\n  exchange: defaultOptions.exchanges[startIndex].value,\n  env: defaultOptions.envs[startIndex].value,\n  timeZone: defaultOptions.timeZones[startIndex].value,\n  reportCycle: defaultOptions.reportCycles[startIndex].value\n};\n\nfunction getTimeZones(data) {\n  var timeZones = [];\n  Object.values(data).forEach(element => {\n    timeZones.push(element.name);\n  });\n  return timeZones;\n}\n\nfunction getExchangeName(data) {\n  return Object.values(data);\n}\n\nfunction getReportCycles(data) {\n  return Object.values(data);\n}\n\nfunction getEnvs(client) {\n  return Object.values(config.clients[client].envs);\n}\n\nfunction getClientName(data) {\n  var clients = [];\n  Object.values(data).forEach(element => {\n    clients.push(element.name);\n  });\n  return clients;\n}\n\nfunction CronInputForm(props) {\n  _s();\n\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    name,\n    cron,\n    clientName,\n    exchange,\n    env,\n    timeZone,\n    reportCycle\n  } = formFields;\n  const [cronMessage, setCronMessage] = useState(\"cron\");\n  const [records, setRecords] = useState([]);\n  const [options, setOptions] = useState(defaultOptions);\n  const {\n    clientNames,\n    exchanges,\n    envs,\n    timeZones,\n    reportCycles\n  } = options;\n  useEffect(() => {\n    getEntries();\n  }, []);\n\n  const handleReset = () => {\n    setFormFields(defaultFormFields);\n    setOptions(defaultOptions);\n    setCronMessage(\"cron\");\n  };\n\n  const addNewEntry = event => {\n    event.preventDefault();\n    return new Promise(resolve => {\n      api.addNewEntry(formFields).then(res => {\n        alert(res.data.message);\n\n        if (res.data.message.includes(\"Success\")) {\n          handleReset();\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  };\n\n  const getEntries = () => {\n    return new Promise(resolve => {\n      api.getRecords().then(res => {\n        console.log(res.data.message);\n        setRecords(res.data.message);\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  };\n\n  const setCronInfo = cron => {\n    return new Promise(resolve => {\n      api.getCronInfo(cron).then(res => {\n        setCronMessage(res.data.message);\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    var newFormField = formFields;\n    newFormField = { ...newFormField,\n      [name]: value\n    };\n\n    if (name === \"clientName\") {\n      const newEnvs = getEnvs(value);\n      setOptions({ ...options,\n        envs: newEnvs\n      });\n      newFormField = { ...newFormField,\n        env: newEnvs[startIndex].value\n      };\n    } else if (name === \"cron\") {\n      if (value.trim().length > 0) {\n        setCronInfo(value);\n      } else setCronMessage(\"cron\");\n    }\n\n    setFormFields(newFormField);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNewEntry,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Name\",\n        type: \"text\",\n        required: true,\n        onChange: handleChange,\n        name: \"name\",\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: cronMessage,\n        type: \"text\",\n        required: true,\n        onChange: handleChange,\n        name: \"cron\",\n        value: cron\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"style\",\n        children: [/*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"Client Names\",\n          options: clientNames,\n          onChange: handleChange,\n          name: \"clientName\",\n          value: clientName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"Exchanges\",\n          options: exchanges,\n          onChange: handleChange,\n          name: \"exchange\",\n          value: exchange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"Envs\",\n          options: envs,\n          name: \"env\",\n          onChange: handleChange,\n          value: env\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"Report Cycles\",\n          options: reportCycles,\n          name: \"reportCycle\",\n          onChange: handleChange,\n          value: reportCycle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"Time Zones\",\n          options: timeZones,\n          name: \"timeZone\",\n          onChange: handleChange,\n          value: timeZone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"style\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: handleReset,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: getEntries,\n          children: \"Load Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          buttonType: \"google\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), records.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Env\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Exchange\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cron\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time Zone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Report Cycle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CreatedTs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), records.map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.client\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.env\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.exchange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.cron\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.time_zone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.report_cycle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.created_time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CronInputForm, \"4MxoQqb8QWB1xsuY96V7PvsJ8wo=\");\n\n_c = CronInputForm;\nexport default CronInputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CronInputForm\");","map":{"version":3,"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/src/components/cronInputForm/CronInputForm.jsx"],"names":["React","useState","useEffect","FormInput","Button","config","FormSelector","API","api","startIndex","defaultOptions","clientNames","getClientName","clients","exchanges","getExchangeName","envs","getEnvs","value","timeZones","getTimeZones","reportCycles","getReportCycles","defaultFormFields","cron","name","clientName","exchange","env","timeZone","reportCycle","data","Object","values","forEach","element","push","client","CronInputForm","props","formFields","setFormFields","cronMessage","setCronMessage","records","setRecords","options","setOptions","getEntries","handleReset","addNewEntry","event","preventDefault","Promise","resolve","then","res","alert","message","includes","catch","err","console","log","getRecords","setCronInfo","getCronInfo","handleChange","target","newFormField","newEnvs","trim","length","map","val","key","id","time_zone","report_cycle","created_time"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState,useEffect } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport Button from \"../button/Button\";\nimport config from \"../../config\";\nimport FormSelector from \"../form-selector/FormSelector\";\nimport { API } from \"../util/api/Api.js\";\nimport \"./cronInputForm.css\";\nlet api = new API();\nconst startIndex = 0;\n\nconst defaultOptions = {\n  clientNames: getClientName(config.clients),\n  exchanges: getExchangeName(config.exchanges),\n  envs: getEnvs(getClientName(config.clients)[startIndex].value),\n  timeZones: getTimeZones(config.timeZones),\n  reportCycles: getReportCycles(config.reportCycles),\n};\n\nconst defaultFormFields = {\n  cron: \"\",\n  name: \"\",\n  clientName: defaultOptions.clientNames[startIndex].value,\n  exchange: defaultOptions.exchanges[startIndex].value,\n  env: defaultOptions.envs[startIndex].value,\n  timeZone: defaultOptions.timeZones[startIndex].value,\n  reportCycle: defaultOptions.reportCycles[startIndex].value,\n};\n\nfunction getTimeZones(data) {\n  var timeZones = [];\n  Object.values(data).forEach((element) => {\n    timeZones.push(element.name);\n  });\n  return timeZones;\n}\n\nfunction getExchangeName(data) {\n  return Object.values(data);\n}\n\nfunction getReportCycles(data) {\n  return Object.values(data);\n}\n\nfunction getEnvs(client) {\n  return Object.values(config.clients[client].envs);\n}\n\nfunction getClientName(data) {\n  var clients = [];\n  Object.values(data).forEach((element) => {\n    clients.push(element.name);\n  });\n  return clients;\n}\n\nfunction CronInputForm(props) {\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const { name, cron, clientName, exchange, env, timeZone, reportCycle } =\n    formFields;\n\n  const [cronMessage, setCronMessage] = useState(\"cron\");\n\n  const [records, setRecords] = useState([]);\n\n  const [options, setOptions] = useState(defaultOptions);\n  const { clientNames, exchanges, envs, timeZones, reportCycles } = options;\n\n  useEffect(()=>{\n    getEntries();\n  },[])\n\n  const handleReset = () => {\n    setFormFields(defaultFormFields);\n    setOptions(defaultOptions);\n    setCronMessage(\"cron\");\n  };\n  const addNewEntry = (event) => {\n    event.preventDefault();\n    return new Promise((resolve) => {\n      api\n        .addNewEntry(formFields)\n        .then((res) => {\n          alert(res.data.message);\n          if (res.data.message.includes(\"Success\")) {\n            handleReset();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    });\n  };\n\n  const getEntries = () => {\n    return new Promise((resolve) => {\n      api\n        .getRecords()\n        .then((res) => {\n          console.log(res.data.message);\n          setRecords(res.data.message);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    });\n  };\n\n  const setCronInfo = (cron) => {\n    return new Promise((resolve) => {\n      api\n        .getCronInfo(cron)\n        .then((res) => {\n          setCronMessage(res.data.message);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    });\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    var newFormField = formFields;\n    newFormField = { ...newFormField, [name]: value };\n    if (name === \"clientName\") {\n      const newEnvs = getEnvs(value);\n      setOptions({ ...options, envs: newEnvs });\n      newFormField = { ...newFormField, env: newEnvs[startIndex].value };\n    } else if (name === \"cron\") {\n      if (value.trim().length > 0) {\n        setCronInfo(value);\n      } else setCronMessage(\"cron\");\n    }\n    setFormFields(newFormField);\n  };\n\n  return (\n    <div>\n      <form onSubmit={addNewEntry}>\n        <FormInput\n          label=\"Name\"\n          type=\"text\"\n          required\n          onChange={handleChange}\n          name=\"name\"\n          value={name}\n        />\n\n        <FormInput\n          label={cronMessage}\n          type=\"text\"\n          required\n          onChange={handleChange}\n          name=\"cron\"\n          value={cron}\n        />\n        <div className=\"style\">\n          <FormSelector\n            label=\"Client Names\"\n            options={clientNames}\n            onChange={handleChange}\n            name=\"clientName\"\n            value={clientName}\n          />\n          <FormSelector\n            label=\"Exchanges\"\n            options={exchanges}\n            onChange={handleChange}\n            name=\"exchange\"\n            value={exchange}\n          />\n          <FormSelector\n            label=\"Envs\"\n            options={envs}\n            name=\"env\"\n            onChange={handleChange}\n            value={env}\n          />\n          <FormSelector\n            label=\"Report Cycles\"\n            options={reportCycles}\n            name=\"reportCycle\"\n            onChange={handleChange}\n            value={reportCycle}\n          />\n          <FormSelector\n            label=\"Time Zones\"\n            options={timeZones}\n            name=\"timeZone\"\n            onChange={handleChange}\n            value={timeZone}\n          />\n        </div>\n        <div className=\"style\">\n          <Button type=\"button\" onClick={handleReset}>\n            Clear\n          </Button>\n          <Button type=\"button\" onClick={getEntries}>\n            Load Records\n          </Button>\n          <Button buttonType=\"google\" type=\"submit\">\n            Submit\n          </Button>\n        </div>\n      </form>\n      {records.length>0?\n      <div className=\"App\">\n        <table>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Client</th>\n            <th>Env</th>\n            <th>Exchange</th>\n            <th>Cron</th>\n            <th>Time Zone</th>\n            <th>Report Cycle</th>\n            <th>CreatedTs</th>\n          </tr>\n          {records.map((val, key) => {\n            return (\n              <tr key={key}>\n                <td>{val.id}</td>\n                <td>{val.name}</td>\n                <td>{val.client}</td>\n                <td>{val.env}</td>\n                <td>{val.exchange}</td>\n                <td>{val.cron}</td>\n                <td>{val.time_zone}</td>\n                <td>{val.report_cycle}</td>\n                <td>{val.created_time}</td>\n              </tr>\n            );\n          })}\n        </table>\n      </div>:\"\"}\n    </div>\n  );\n}\n\nexport default CronInputForm;\n"]},"metadata":{},"sourceType":"module"}