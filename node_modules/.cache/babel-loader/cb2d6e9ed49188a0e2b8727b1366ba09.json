{"ast":null,"code":"/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport {};","map":{"version":3,"mappings":"AAAA","names":[],"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/node_modules/@blueprintjs/core/src/components/panel-stack/panelProps.ts"],"sourcesContent":["/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\n/* eslint-disable deprecation/deprecation */\n\n/**\n * An object describing a panel in a `PanelStack`.\n *\n * @deprecated use `Panel<T>`\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport interface IPanel<P = {}> {\n    /**\n     * The component type to render for this panel. This must be a reference to\n     * the component class or SFC, _not_ a JSX element, so it can be re-created\n     * dynamically when needed.\n     */\n    component: React.ComponentType<P & IPanelProps>;\n\n    /**\n     * HTML title to be passed to the <Text> component\n     */\n    htmlTitle?: string;\n\n    /**\n     * The props passed to the component type when it is rendered. The methods\n     * in `IPanelProps` will be injected by `PanelStack`.\n     */\n    props?: P;\n\n    /**\n     * The title to be displayed above this panel. It is also used as the text\n     * of the back button for any panel opened by this panel.\n     */\n    title?: React.ReactNode;\n}\n\n/**\n * Include this interface in your panel component's props type to access these\n * two functions which are injected by `PanelStack`.\n *\n * ```tsx\n * import { IPanelProps } from \"@blueprintjs/core\";\n * export class SettingsPanel extends React.Component<IPanelProps & ISettingsPanelProps> {...}\n * ```\n *\n * @deprecated use `PanelActions<T>`\n */\nexport interface IPanelProps {\n    /**\n     * Call this method to programatically close this panel. If this is the only\n     * panel on the stack then this method will do nothing.\n     *\n     * Remember that the panel header always contains a \"back\" button that\n     * closes this panel on click (unless there is only one panel on the stack).\n     */\n    closePanel(): void;\n\n    /**\n     * Call this method to open a new panel on the top of the stack.\n     */\n    openPanel<P>(panel: IPanel<P>): void;\n}\n"]},"metadata":{},"sourceType":"module"}