{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * `ItemListRenderer` helper method for rendering each item in `filteredItems`,\n * with optional support for `noResults` (when filtered items is empty)\n * and `initialContent` (when query is empty).\n */\nexport function renderFilteredItems(props, noResults, initialContent) {\n  if (props.query.length === 0 && initialContent !== undefined) {\n    return initialContent;\n  }\n\n  var items = props.filteredItems.map(props.renderItem).filter(function (item) {\n    return item != null;\n  });\n  return items.length > 0 ? items : noResults;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AA4EA;;;;;AAKA,OAAM,SAAUA,mBAAV,CACFC,KADE,EAEFC,SAFE,EAGFC,cAHE,EAGqC;AAEvC,MAAIF,KAAK,CAACG,KAAN,CAAYC,MAAZ,KAAuB,CAAvB,IAA4BF,cAAc,KAAKG,SAAnD,EAA8D;AAC1D,WAAOH,cAAP;AACH;;AACD,MAAMI,KAAK,GAAGN,KAAK,CAACO,aAAN,CAAoBC,GAApB,CAAwBR,KAAK,CAACS,UAA9B,EAA0CC,MAA1C,CAAiD,gBAAI;AAAI,eAAI,IAAI,IAAR;AAAY,GAArE,CAAd;AACA,SAAOJ,KAAK,CAACF,MAAN,GAAe,CAAf,GAAmBE,KAAnB,GAA2BL,SAAlC;AACH","names":["renderFilteredItems","props","noResults","initialContent","query","length","undefined","items","filteredItems","map","renderItem","filter"],"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/node_modules/@blueprintjs/select/src/common/itemListRenderer.ts"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IRef } from \"@blueprintjs/core\";\n\nimport { ICreateNewItem } from \"./listItemsUtils\";\n\n/**\n * An object describing how to render the list of items.\n * An `itemListRenderer` receives this object as its sole argument.\n */\nexport interface IItemListRendererProps<T> {\n    /**\n     * The currently focused item (for keyboard interactions), or `null` to\n     * indicate that no item is active.\n     */\n    activeItem: T | ICreateNewItem | null;\n\n    /**\n     * Array of items filtered by `itemListPredicate` or `itemPredicate`.\n     * See `items` for the full list of items.\n     *\n     * Use `renderFilteredItems()` utility function from this library to\n     * map each item in this array through `renderItem`, with support for\n     * optional `noResults` and `initialContent` states.\n     */\n    filteredItems: T[];\n\n    /**\n     * Array of all items in the list.\n     * See `filteredItems` for a filtered array based on `query` and predicate props.\n     */\n    items: T[];\n\n    /**\n     * The current query string.\n     */\n    query: string;\n\n    /**\n     * A ref handler that should be attached to the parent HTML element of the menu items.\n     * This is required for the active item to scroll into view automatically.\n     */\n    itemsParentRef: IRef<HTMLUListElement>;\n\n    /**\n     * Call this function to render an item.\n     * This retrieves the modifiers for the item and delegates actual rendering\n     * to the owner component's `itemRenderer` prop.\n     */\n    renderItem: (item: T, index: number) => JSX.Element | null;\n\n    /**\n     * Call this function to render the \"create new item\" view component.\n     *\n     * @returns null when creating a new item is not available, and undefined if the createNewItemRenderer returns undefined\n     */\n    renderCreateItem: () => JSX.Element | null | undefined;\n}\n\n/** Type alias for a function that renders the list of items. */\nexport type ItemListRenderer<T> = (itemListProps: IItemListRendererProps<T>) => JSX.Element | null;\n\n/**\n * `ItemListRenderer` helper method for rendering each item in `filteredItems`,\n * with optional support for `noResults` (when filtered items is empty)\n * and `initialContent` (when query is empty).\n */\nexport function renderFilteredItems(\n    props: IItemListRendererProps<any>,\n    noResults?: React.ReactNode,\n    initialContent?: React.ReactNode | null,\n): React.ReactNode {\n    if (props.query.length === 0 && initialContent !== undefined) {\n        return initialContent;\n    }\n    const items = props.filteredItems.map(props.renderItem).filter(item => item != null);\n    return items.length > 0 ? items : noResults;\n}\n"]},"metadata":{},"sourceType":"module"}