{"ast":null,"code":"import _objectSpread from\"/home/jinsonshaju/GIT/cron-tracker/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/home/jinsonshaju/GIT/cron-tracker/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _slicedToArray from\"/home/jinsonshaju/GIT/cron-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _excluded=[\"TRIGGER_TIMES\"];import FullCalendar from\"@fullcalendar/react\";import timeGridPlugin from\"@fullcalendar/timegrid\";import{useState,useEffect}from\"react\";import{API}from\"../../util/api/Api.js\";import\"./home.css\";import moment from\"moment\";import POPup from\"../../popup/popup.jsx\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var api=new API();function Home(){var _useState=useState(new Map()),_useState2=_slicedToArray(_useState,2),timeMap=_useState2[0],setTimeMap=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),events=_useState4[0],setEvents=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),displayMap=_useState6[0],setDisplayMap=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),popup=_useState8[0],setPopup=_useState8[1];var getEventKey=function getEventKey(time){return moment(time).local().format(\"YYYY-MM-DDTkk:mm:ss\");};var getEndTime=function getEndTime(time){var dateTime=new Date(time);dateTime.setSeconds(dateTime.getSeconds()+1);return moment(dateTime).local().format(\"YYYY-MM-DDTkk:mm:ss\");};useEffect(function(){handleReload();console.log(\"Home page Reloaded\");//eslint-disable-next-line\n},[]);var handleEventClick=function handleEventClick(_ref){var event=_ref.event;var key=getEventKey(event.start);setDisplayMap({title:key,records:Object.values(timeMap.get(key))});setPopup(true);};var handleReload=function handleReload(){return new Promise(function(resolve){api.getTriggerTimes().then(function(res){var startTimeMap=new Map();var newEvents=[];console.log(res.data.message);res.data.message.forEach(function(details){var TRIGGER_TIMES=details.TRIGGER_TIMES,props=_objectWithoutProperties(details,_excluded);TRIGGER_TIMES.forEach(function(element){var newList=startTimeMap.has(getEventKey(element))?startTimeMap.get(getEventKey(element)).concat([_objectSpread({},props)]):[_objectSpread({},props)];startTimeMap.set(getEventKey(element),newList);});});startTimeMap.forEach(function(value,key){if(!isNaN(new Date(key).getTime())){var color=moment(key).isAfter(new Date())?\"red\":\"green\";newEvents.push({title:\"Event \"+newEvents.length,start:key,end:getEndTime(key),color:color});}});setEvents(newEvents);setTimeMap(startTimeMap);}).catch(function(err){console.log(err);});});};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(POPup,{elementsMap:displayMap,stateValue:{popup:popup,setPopup:setPopup}}),/*#__PURE__*/_jsx(FullCalendar,{plugins:[timeGridPlugin],timeZone:\"local\",initialView:\"timeGridWeek\",allDaySlot:false,eventMinHeight:20,headerToolbar:{left:\"prev,next\",center:\"title\",right:\"today\"},buttonText:{today:\"Current Week\"},eventClick:handleEventClick,slotDuration:\"00:10:00\",events:events,slotLabelInterval:\"00:30:00\",nowIndicator:true})]})});}export default Home;","map":{"version":3,"sources":["/home/jinsonshaju/GIT/cron-tracker/src/components/routes/home/Home.jsx"],"names":["FullCalendar","timeGridPlugin","useState","useEffect","API","moment","POPup","api","Home","Map","timeMap","setTimeMap","events","setEvents","displayMap","setDisplayMap","popup","setPopup","getEventKey","time","local","format","getEndTime","dateTime","Date","setSeconds","getSeconds","handleReload","console","log","handleEventClick","event","key","start","title","records","Object","values","get","Promise","resolve","getTriggerTimes","then","res","startTimeMap","newEvents","data","message","forEach","details","TRIGGER_TIMES","props","element","newList","has","concat","set","value","isNaN","getTime","color","isAfter","push","length","end","catch","err","left","center","right","today"],"mappings":"2ZAAA,MAAOA,CAAAA,YAAP,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,wBAA3B,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,GAAT,KAAoB,uBAApB,CACA,MAAO,YAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,C,wFAEA,GAAIC,CAAAA,GAAG,CAAG,GAAIH,CAAAA,GAAJ,EAAV,CAEA,QAASI,CAAAA,IAAT,EAAgB,CACd,cAA8BN,QAAQ,CAAC,GAAIO,CAAAA,GAAJ,EAAD,CAAtC,wCAAOC,OAAP,eAAgBC,UAAhB,eACA,eAA4BT,QAAQ,CAAC,EAAD,CAApC,yCAAOU,MAAP,eAAeC,SAAf,eACA,eAAoCX,QAAQ,CAAC,EAAD,CAA5C,yCAAOY,UAAP,eAAmBC,aAAnB,eACA,eAA0Bb,QAAQ,CAAC,KAAD,CAAlC,yCAAOc,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,CAAU,CAC5B,MAAOd,CAAAA,MAAM,CAACc,IAAD,CAAN,CAAaC,KAAb,GAAqBC,MAArB,CAA4B,qBAA5B,CAAP,CACD,CAFD,CAIA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACH,IAAD,CAAU,CAC3B,GAAMI,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,IAAJ,CAASL,IAAT,CAAjB,CACAI,QAAQ,CAACE,UAAT,CAAoBF,QAAQ,CAACG,UAAT,GAAwB,CAA5C,EACA,MAAOrB,CAAAA,MAAM,CAACkB,QAAD,CAAN,CAAiBH,KAAjB,GAAyBC,MAAzB,CAAgC,qBAAhC,CAAP,CACD,CAJD,CAMAlB,SAAS,CAAC,UAAM,CACdwB,YAAY,GACZC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EACA;AACD,CAJQ,CAIN,EAJM,CAAT,CAMA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CACtC,GAAMC,CAAAA,GAAG,CAAGd,WAAW,CAACa,KAAK,CAACE,KAAP,CAAvB,CACAlB,aAAa,CAAC,CAACmB,KAAK,CAACF,GAAP,CAAWG,OAAO,CAACC,MAAM,CAACC,MAAP,CAAc3B,OAAO,CAAC4B,GAAR,CAAYN,GAAZ,CAAd,CAAnB,CAAD,CAAb,CACAf,QAAQ,CAAC,IAAD,CAAR,CACD,CAJD,CAMA,GAAMU,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,MAAO,IAAIY,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa,CAC9BjC,GAAG,CACAkC,eADH,GAEGC,IAFH,CAEQ,SAACC,GAAD,CAAS,CACb,GAAIC,CAAAA,YAAY,CAAG,GAAInC,CAAAA,GAAJ,EAAnB,CACA,GAAIoC,CAAAA,SAAS,CAAG,EAAhB,CACAjB,OAAO,CAACC,GAAR,CAAYc,GAAG,CAACG,IAAJ,CAASC,OAArB,EACAJ,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBC,OAAjB,CAAyB,SAACC,OAAD,CAAa,CACpC,GAAMC,CAAAA,aAAN,CAAkCD,OAAlC,CAAMC,aAAN,CAAwBC,KAAxB,0BAAkCF,OAAlC,YACAC,aAAa,CAACF,OAAd,CAAsB,SAACI,OAAD,CAAa,CACjC,GAAMC,CAAAA,OAAO,CAAGT,YAAY,CAACU,GAAb,CAAiBpC,WAAW,CAACkC,OAAD,CAA5B,EACZR,YAAY,CAACN,GAAb,CAAiBpB,WAAW,CAACkC,OAAD,CAA5B,EAAuCG,MAAvC,CAA8C,kBAAMJ,KAAN,EAA9C,CADY,CAEZ,kBAAMA,KAAN,EAFJ,CAGAP,YAAY,CAACY,GAAb,CAAiBtC,WAAW,CAACkC,OAAD,CAA5B,CAAuCC,OAAvC,EACD,CALD,EAMD,CARD,EASAT,YAAY,CAACI,OAAb,CAAqB,SAACS,KAAD,CAAQzB,GAAR,CAAgB,CACnC,GAAI,CAAC0B,KAAK,CAAC,GAAIlC,CAAAA,IAAJ,CAASQ,GAAT,EAAc2B,OAAd,EAAD,CAAV,CAAqC,CACnC,GAAMC,CAAAA,KAAK,CAAGvD,MAAM,CAAC2B,GAAD,CAAN,CAAY6B,OAAZ,CAAoB,GAAIrC,CAAAA,IAAJ,EAApB,EAAkC,KAAlC,CAA0C,OAAxD,CACAqB,SAAS,CAACiB,IAAV,CAAe,CACb5B,KAAK,CAAE,SAAWW,SAAS,CAACkB,MADf,CAEb9B,KAAK,CAAED,GAFM,CAGbgC,GAAG,CAAE1C,UAAU,CAACU,GAAD,CAHF,CAIb4B,KAAK,CAAEA,KAJM,CAAf,EAMD,CACF,CAVD,EAWA/C,SAAS,CAACgC,SAAD,CAAT,CACAlC,UAAU,CAACiC,YAAD,CAAV,CACD,CA5BH,EA6BGqB,KA7BH,CA6BS,SAACC,GAAD,CAAS,CACdtC,OAAO,CAACC,GAAR,CAAYqC,GAAZ,EACD,CA/BH,EAgCD,CAjCM,CAAP,CAkCD,CAnCD,CAqCA,mBACE,kCACE,oCACE,KAAC,KAAD,EACE,WAAW,CAAEpD,UADf,CAEE,UAAU,CAAE,CAAEE,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAFd,EADF,cAKE,KAAC,YAAD,EACE,OAAO,CAAE,CAAChB,cAAD,CADX,CAEE,QAAQ,CAAC,OAFX,CAGE,WAAW,CAAC,cAHd,CAIE,UAAU,CAAE,KAJd,CAKE,cAAc,CAAE,EALlB,CAME,aAAa,CAAE,CACbkE,IAAI,CAAE,WADO,CAEbC,MAAM,CAAE,OAFK,CAGbC,KAAK,CAAE,OAHM,CANjB,CAWE,UAAU,CAAE,CAAEC,KAAK,CAAE,cAAT,CAXd,CAYE,UAAU,CAAExC,gBAZd,CAaE,YAAY,CAAC,UAbf,CAcE,MAAM,CAAElB,MAdV,CAeE,iBAAiB,CAAC,UAfpB,CAgBE,YAAY,CAAE,IAhBhB,EALF,GADF,EADF,CA4BD,CAED,cAAeJ,CAAAA,IAAf","sourcesContent":["import FullCalendar from \"@fullcalendar/react\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport { useState, useEffect } from \"react\";\nimport { API } from \"../../util/api/Api.js\";\nimport \"./home.css\";\nimport moment from \"moment\";\nimport POPup from \"../../popup/popup.jsx\";\n\nlet api = new API();\n\nfunction Home() {\n  const [timeMap, setTimeMap] = useState(new Map());\n  const [events, setEvents] = useState([]);\n  const [displayMap, setDisplayMap] = useState({});\n  const [popup, setPopup] = useState(false);\n\n  const getEventKey = (time) => {\n    return moment(time).local().format(\"YYYY-MM-DDTkk:mm:ss\");\n  };\n\n  const getEndTime = (time) => {\n    const dateTime = new Date(time);\n    dateTime.setSeconds(dateTime.getSeconds() + 1);\n    return moment(dateTime).local().format(\"YYYY-MM-DDTkk:mm:ss\");\n  };\n\n  useEffect(() => {\n    handleReload();\n    console.log(\"Home page Reloaded\");\n    //eslint-disable-next-line\n  }, []);\n\n  const handleEventClick = ({ event }) => {\n    const key = getEventKey(event.start);\n    setDisplayMap({title:key,records:Object.values(timeMap.get(key))});\n    setPopup(true);\n  };\n\n  const handleReload = () => {\n    return new Promise((resolve) => {\n      api\n        .getTriggerTimes()\n        .then((res) => {\n          var startTimeMap = new Map();\n          var newEvents = [];\n          console.log(res.data.message);\n          res.data.message.forEach((details) => {\n            var { TRIGGER_TIMES, ...props } = details;\n            TRIGGER_TIMES.forEach((element) => {\n              const newList = startTimeMap.has(getEventKey(element))\n                ? startTimeMap.get(getEventKey(element)).concat([{ ...props }])\n                : [{ ...props }];\n              startTimeMap.set(getEventKey(element), newList);\n            });\n          });\n          startTimeMap.forEach((value, key) => {\n            if (!isNaN(new Date(key).getTime())) {\n              const color = moment(key).isAfter(new Date()) ? \"red\" : \"green\";\n              newEvents.push({\n                title: \"Event \" + newEvents.length,\n                start: key,\n                end: getEndTime(key),\n                color: color,\n              });\n            }\n          });\n          setEvents(newEvents);\n          setTimeMap(startTimeMap);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    });\n  };\n\n  return (\n    <div>\n      <div>\n        <POPup\n          elementsMap={displayMap}\n          stateValue={{ popup, setPopup }}\n        ></POPup>\n        <FullCalendar\n          plugins={[timeGridPlugin]}\n          timeZone=\"local\"\n          initialView=\"timeGridWeek\"\n          allDaySlot={false}\n          eventMinHeight={20}\n          headerToolbar={{\n            left: \"prev,next\",\n            center: \"title\",\n            right: \"today\",\n          }}\n          buttonText={{ today: \"Current Week\" }}\n          eventClick={handleEventClick}\n          slotDuration=\"00:10:00\"\n          events={events}\n          slotLabelInterval=\"00:30:00\"\n          nowIndicator={true}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}