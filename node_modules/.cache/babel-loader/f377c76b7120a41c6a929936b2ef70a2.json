{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs } from \"firebase/firestore\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCfb5xN45OixlxMYEW7fnWs7YMWdVICVtw\",\n  authDomain: \"email-tracker-54b1d.firebaseapp.com\",\n  projectId: \"email-tracker-54b1d\",\n  storageBucket: \"email-tracker-54b1d.appspot.com\",\n  messagingSenderId: \"467080504489\",\n  appId: \"1:467080504489:web:51b5e7aa2819b5e70fb5b8\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log(\"error creating the user\", console.error.message);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChnagedListener = callback => onAuthStateChanged(auth, callback);\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(element => {\n    const docRef = doc(collectionRef, element.title.toLowerCase());\n    batch.set(docRef, element);\n  });\n  await batch.commit();\n  console.log(\"done\");\n};\nexport const getDocuments = async name => {\n  const collectionRef = collection(db, name);\n  const q = query(collectionRef);\n  const querySnapshot = await getDoc(q);\n  const catogoryMap = querySnapshot.docs.reduce((acc, docSnapshot) => {\n    const {\n      title,\n      items\n    } = docSnapshot.data();\n    acc[title.toLowerCase()] = items;\n    return acc;\n  }, {});\n  return catogoryMap;\n};","map":{"version":3,"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/src/components/util/firebase/Firebase.jsx"],"names":["initializeApp","getFirestore","doc","getDoc","setDoc","collection","writeBatch","query","getDocs","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","console","log","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChnagedListener","callback","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","element","docRef","title","toLowerCase","set","commit","getDocuments","name","q","querySnapshot","catogoryMap","docs","reduce","acc","docSnapshot","items","data"],"mappings":"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","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport {\n  getFirestore,\n  doc,\n  getDoc,\n  setDoc,\n  collection,\n  writeBatch,\n  query,\n  getDocs,\n} from \"firebase/firestore\";\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCfb5xN45OixlxMYEW7fnWs7YMWdVICVtw\",\n  authDomain: \"email-tracker-54b1d.firebaseapp.com\",\n  projectId: \"email-tracker-54b1d\",\n  storageBucket: \"email-tracker-54b1d.appspot.com\",\n  messagingSenderId: \"467080504489\",\n  appId: \"1:467080504489:web:51b5e7aa2819b5e70fb5b8\",\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\",\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async (\n  userAuth,\n  additionalInformation = {}\n) => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation,\n      });\n    } catch (error) {\n      console.log(\"error creating the user\", console.error.message);\n    }\n  }\n  return userDocRef;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const signOutUser = async () => await signOut(auth);\n\nexport const onAuthStateChnagedListener = (callback) =>\n  onAuthStateChanged(auth, callback);\n\nexport const addCollectionAndDocuments = async (\n  collectionKey,\n  objectsToAdd\n) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach((element) => {\n    const docRef = doc(collectionRef, element.title.toLowerCase());\n    batch.set(docRef, element);\n  });\n  await batch.commit();\n  console.log(\"done\");\n};\n\nexport const getDocuments = async (name) => {\n  const collectionRef = collection(db, name);\n  const q = query(collectionRef);\n  const querySnapshot = await getDoc(q);\n  const catogoryMap = querySnapshot.docs.reduce((acc, docSnapshot) => {\n    const { title, items } = docSnapshot.data();\n    acc[title.toLowerCase()] = items;\n    return acc;\n  }, {});\n  return catogoryMap;\n};\n"]},"metadata":{},"sourceType":"module"}