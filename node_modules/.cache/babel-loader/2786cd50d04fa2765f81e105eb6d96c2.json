{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\"; // this component is simple enough that tests would be purely tautological.\n\n/* istanbul ignore next */\n\nvar ButtonGroup =\n/** @class */\nfunction (_super) {\n  __extends(ButtonGroup, _super);\n\n  function ButtonGroup() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ButtonGroup.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        alignText = _b.alignText,\n        className = _b.className,\n        fill = _b.fill,\n        minimal = _b.minimal,\n        large = _b.large,\n        vertical = _b.vertical,\n        htmlProps = __rest(_b, [\"alignText\", \"className\", \"fill\", \"minimal\", \"large\", \"vertical\"]);\n\n    var buttonGroupClasses = classNames(Classes.BUTTON_GROUP, (_a = {}, _a[Classes.FILL] = fill, _a[Classes.LARGE] = large, _a[Classes.MINIMAL] = minimal, _a[Classes.VERTICAL] = vertical, _a), Classes.alignmentClass(alignText), className);\n    return React.createElement(\"div\", __assign({}, htmlProps, {\n      className: buttonGroupClasses\n    }), this.props.children);\n  };\n\n  ButtonGroup.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".ButtonGroup\");\n  return ButtonGroup;\n}(AbstractPureComponent2);\n\nexport { ButtonGroup };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,sBAAT,EAA4CC,OAA5C,QAA2D,cAA3D;AACA,SAASC,kBAAT,QAAwD,oBAAxD,C,CA8CA;;AACA;;AAEA;AAAA;AAAA;AAAiCC;;AAAjC;;AAsBC;;AAnBUC,iCAAP;;;AACI,QAAMC,KAAyE,KAAKC,KAApF;AAAA,QAAQC,SAAS,eAAjB;AAAA,QAAmBC,SAAS,eAA5B;AAAA,QAA8BC,IAAI,UAAlC;AAAA,QAAoCC,OAAO,aAA3C;AAAA,QAA6CC,KAAK,WAAlD;AAAA,QAAoDC,QAAQ,cAA5D;AAAA,QAAiEC,SAAS,cAApE,kEAAoE,CAA1E;;AACA,QAAMC,kBAAkB,GAAGhB,UAAU,CACjCG,OAAO,CAACc,YADyB,GACbC,SAEhBA,GAACf,OAAO,CAACgB,IAAT,IAAgBR,IAFA,EAGhBO,GAACf,OAAO,CAACiB,KAAT,IAAiBP,KAHD,EAIhBK,GAACf,OAAO,CAACkB,OAAT,IAAmBT,OAJH,EAKhBM,GAACf,OAAO,CAACmB,QAAT,IAAoBR,QALJ,IADa,GAQjCX,OAAO,CAACoB,cAAR,CAAuBd,SAAvB,CARiC,EASjCC,SATiC,CAArC;AAWA,WACIT,wCAASc,SAAT,EAAkB;AAAEL,eAAS,EAAEM;AAAb,KAAlB,GACK,KAAKR,KAAL,CAAWgB,QADhB,CADJ;AAKH,GAlBM;;AAFOlB,4BAAc,UAAGF,kBAAH,EAAqB,cAArB,CAAd;AAqBlB;AAAC,CAtBD,CAAiCF,sBAAjC;;SAAaI","names":["classNames","React","AbstractPureComponent2","Classes","DISPLAYNAME_PREFIX","__extends","ButtonGroup","_b","props","alignText","className","fill","minimal","large","vertical","htmlProps","buttonGroupClasses","BUTTON_GROUP","_a","FILL","LARGE","MINIMAL","VERTICAL","alignmentClass","children"],"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/node_modules/@blueprintjs/core/src/components/button/buttonGroup.tsx"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Alignment, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, HTMLDivProps, Props } from \"../../common/props\";\n\n// eslint-disable-next-line deprecation/deprecation\nexport type ButtonGroupProps = IButtonGroupProps;\n/** @deprecated use ButtonGroupProps */\nexport interface IButtonGroupProps extends Props, HTMLDivProps {\n    /**\n     * Text alignment within button. By default, icons and text will be centered\n     * within the button. Passing `\"left\"` or `\"right\"` will align the button\n     * text to that side and push `icon` and `rightIcon` to either edge. Passing\n     * `\"center\"` will center the text and icons together.\n     */\n    alignText?: Alignment;\n\n    /** Buttons in this group. */\n    children: React.ReactNode;\n\n    /**\n     * Whether the button group should take up the full width of its container.\n     *\n     * @default false\n     */\n    fill?: boolean;\n\n    /**\n     * Whether the child buttons should appear with minimal styling.\n     *\n     * @default false\n     */\n    minimal?: boolean;\n\n    /**\n     * Whether the child buttons should appear with large styling.\n     *\n     * @default false\n     */\n    large?: boolean;\n\n    /**\n     * Whether the button group should appear with vertical styling.\n     *\n     * @default false\n     */\n    vertical?: boolean;\n}\n\n// this component is simple enough that tests would be purely tautological.\n/* istanbul ignore next */\n\nexport class ButtonGroup extends AbstractPureComponent2<ButtonGroupProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.ButtonGroup`;\n\n    public render() {\n        const { alignText, className, fill, minimal, large, vertical, ...htmlProps } = this.props;\n        const buttonGroupClasses = classNames(\n            Classes.BUTTON_GROUP,\n            {\n                [Classes.FILL]: fill,\n                [Classes.LARGE]: large,\n                [Classes.MINIMAL]: minimal,\n                [Classes.VERTICAL]: vertical,\n            },\n            Classes.alignmentClass(alignText),\n            className,\n        );\n        return (\n            <div {...htmlProps} className={buttonGroupClasses}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}