{"ast":null,"code":"var _jsxFileName = \"/home/jinsonshaju/collateral/collateral-email-tracker/src/components/cronInputForm/CronInputForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport Button from \"../button/Button\";\nimport config from \"../../config\";\nimport FormSelector from \"../form-selector/FormSelector\";\nimport { API } from \"../util/api/Api.js\";\nimport \"./cronInputForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet api = new API();\nconst startIndex = 0;\nconst defaultOptions = {\n  clientNames: getClientName(config.clients),\n  exchanges: getExchangeName(config.exchanges),\n  envs: getEnvs(getClientName(config.clients)[startIndex].value),\n  timeZones: getTimeZones(config.timeZones),\n  reportCycles: getReportCycles(config.reportCycles)\n};\nconst defaultFormFields = {\n  cron: \"\",\n  name: \"\",\n  clientName: defaultOptions.clientNames[startIndex].value,\n  exchange: defaultOptions.exchanges[startIndex].value,\n  env: defaultOptions.envs[startIndex].value,\n  timeZone: defaultOptions.timeZones[startIndex].value,\n  reportCycle: defaultOptions.reportCycles[startIndex].value\n};\n\nfunction getTimeZones(data) {\n  var timeZones = [];\n  Object.values(data).forEach(element => {\n    timeZones.push(element.name);\n  });\n  return timeZones;\n}\n\nfunction getExchangeName(data) {\n  return Object.values(data);\n}\n\nfunction getReportCycles(data) {\n  return Object.values(data);\n}\n\nfunction getEnvs(client) {\n  return Object.values(config.clients[client].envs);\n}\n\nfunction getClientName(data) {\n  var clients = [];\n  Object.values(data).forEach(element => {\n    clients.push(element.name);\n  });\n  return clients;\n}\n\nfunction CronInputForm(props) {\n  _s();\n\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    name,\n    cron,\n    clientName,\n    exchange,\n    env,\n    timeZone,\n    reportCycle\n  } = formFields;\n  const [cronMessage, setCronMessage] = useState(\"cron\");\n  const [records, setRecords] = useState([]);\n  const [options, setOptions] = useState(defaultOptions);\n  const {\n    clientNames,\n    exchanges,\n    envs,\n    timeZones,\n    reportCycles\n  } = options;\n\n  const handleReset = () => {\n    setFormFields(defaultFormFields);\n    setOptions(defaultOptions);\n    setCronMessage(\"cron\");\n  };\n\n  const addNewEntry = event => {\n    event.preventDefault();\n    return new Promise(resolve => {\n      api.addNewEntry(formFields).then(res => {\n        alert(res.data.message);\n\n        if (res.data.message.includes(\"Success\")) {\n          handleReset();\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  };\n\n  const getEntries = event => {\n    return new Promise(resolve => {\n      api.getRecords().then(res => {\n        console.log(res.data.message);\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  };\n\n  const setCronInfo = cron => {\n    return new Promise(resolve => {\n      api.getCronInfo(cron).then(res => {\n        setCronMessage(res.data.message);\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    var newFormField = formFields;\n    newFormField = { ...newFormField,\n      [name]: value\n    };\n\n    if (name === \"clientName\") {\n      const newEnvs = getEnvs(value);\n      setOptions({ ...options,\n        envs: newEnvs\n      });\n      newFormField = { ...newFormField,\n        env: newEnvs[startIndex].value\n      };\n    } else if (name === \"cron\") {\n      if (value.trim().length > 0) {\n        setCronInfo(value);\n      } else setCronMessage(\"cron\");\n    }\n\n    setFormFields(newFormField);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNewEntry,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Name\",\n        type: \"text\",\n        required: true,\n        onChange: handleChange,\n        name: \"name\",\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: cronMessage,\n        type: \"text\",\n        required: true,\n        onChange: handleChange,\n        name: \"cron\",\n        value: cron\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"style\",\n        children: [/*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"Client Names\",\n          options: clientNames,\n          onChange: handleChange,\n          name: \"clientName\",\n          value: clientName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"Exchanges\",\n          options: exchanges,\n          onChange: handleChange,\n          name: \"exchange\",\n          value: exchange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"Envs\",\n          options: envs,\n          name: \"env\",\n          onChange: handleChange,\n          value: env\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"Report Cycles\",\n          options: reportCycles,\n          name: \"reportCycle\",\n          onChange: handleChange,\n          value: reportCycle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"Time Zones\",\n          options: timeZones,\n          name: \"timeZone\",\n          onChange: handleChange,\n          value: timeZone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"style\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: handleReset,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: getEntries,\n          children: \"Load Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          buttonType: \"google\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }, this), records.map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CronInputForm, \"2y461JU3u6ashKGOkxd4A+WhDkU=\");\n\n_c = CronInputForm;\nexport default CronInputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CronInputForm\");","map":{"version":3,"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/src/components/cronInputForm/CronInputForm.jsx"],"names":["React","useState","FormInput","Button","config","FormSelector","API","api","startIndex","defaultOptions","clientNames","getClientName","clients","exchanges","getExchangeName","envs","getEnvs","value","timeZones","getTimeZones","reportCycles","getReportCycles","defaultFormFields","cron","name","clientName","exchange","env","timeZone","reportCycle","data","Object","values","forEach","element","push","client","CronInputForm","props","formFields","setFormFields","cronMessage","setCronMessage","records","setRecords","options","setOptions","handleReset","addNewEntry","event","preventDefault","Promise","resolve","then","res","alert","message","includes","catch","err","console","log","getEntries","getRecords","setCronInfo","getCronInfo","handleChange","target","newFormField","newEnvs","trim","length","map","val","key","age","gender"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport Button from \"../button/Button\";\nimport config from \"../../config\";\nimport FormSelector from \"../form-selector/FormSelector\";\nimport { API } from \"../util/api/Api.js\";\nimport \"./cronInputForm.css\";\nlet api = new API();\nconst startIndex = 0;\n\nconst defaultOptions = {\n  clientNames: getClientName(config.clients),\n  exchanges: getExchangeName(config.exchanges),\n  envs: getEnvs(getClientName(config.clients)[startIndex].value),\n  timeZones: getTimeZones(config.timeZones),\n  reportCycles: getReportCycles(config.reportCycles),\n};\n\nconst defaultFormFields = {\n  cron: \"\",\n  name: \"\",\n  clientName: defaultOptions.clientNames[startIndex].value,\n  exchange: defaultOptions.exchanges[startIndex].value,\n  env: defaultOptions.envs[startIndex].value,\n  timeZone: defaultOptions.timeZones[startIndex].value,\n  reportCycle: defaultOptions.reportCycles[startIndex].value,\n};\n\nfunction getTimeZones(data) {\n  var timeZones = [];\n  Object.values(data).forEach((element) => {\n    timeZones.push(element.name);\n  });\n  return timeZones;\n}\n\nfunction getExchangeName(data) {\n  return Object.values(data);\n}\n\nfunction getReportCycles(data) {\n  return Object.values(data);\n}\n\nfunction getEnvs(client) {\n  return Object.values(config.clients[client].envs);\n}\n\nfunction getClientName(data) {\n  var clients = [];\n  Object.values(data).forEach((element) => {\n    clients.push(element.name);\n  });\n  return clients;\n}\n\nfunction CronInputForm(props) {\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const { name, cron, clientName, exchange, env, timeZone, reportCycle } =\n    formFields;\n\n  const [cronMessage, setCronMessage] = useState(\"cron\");\n\n  const [records,setRecords] = useState([]);\n\n\n  const [options, setOptions] = useState(defaultOptions);\n  const { clientNames, exchanges, envs, timeZones, reportCycles } = options;\n\n  const handleReset = () => {\n    setFormFields(defaultFormFields);\n    setOptions(defaultOptions);\n    setCronMessage(\"cron\");\n  };\n  const addNewEntry = (event) => {\n    event.preventDefault();\n    return new Promise((resolve) => {\n      api\n        .addNewEntry(formFields)\n        .then((res) => {\n          alert(res.data.message);\n          if (res.data.message.includes(\"Success\")) {\n            handleReset();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    });\n  };\n\n  const getEntries = (event) => {\n    return new Promise((resolve) => {\n      api\n        .getRecords()\n        .then((res) => {\n          console.log(res.data.message);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    });\n  };\n\n  const setCronInfo = (cron) => {\n    return new Promise((resolve) => {\n      api\n        .getCronInfo(cron)\n        .then((res) => {\n          setCronMessage(res.data.message);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    });\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    var newFormField = formFields;\n    newFormField = { ...newFormField, [name]: value };\n    if (name === \"clientName\") {\n      const newEnvs = getEnvs(value);\n      setOptions({ ...options, envs: newEnvs });\n      newFormField = { ...newFormField, env: newEnvs[startIndex].value };\n    } else if (name === \"cron\") {\n      if (value.trim().length > 0) {\n        setCronInfo(value);\n      } else setCronMessage(\"cron\");\n    }\n    setFormFields(newFormField);\n  };\n\n  return (\n    <div>\n      <form onSubmit={addNewEntry}>\n        <FormInput\n          label=\"Name\"\n          type=\"text\"\n          required\n          onChange={handleChange}\n          name=\"name\"\n          value={name}\n        />\n\n        <FormInput\n          label={cronMessage}\n          type=\"text\"\n          required\n          onChange={handleChange}\n          name=\"cron\"\n          value={cron}\n        />\n        <div className=\"style\">\n          <FormSelector\n            label=\"Client Names\"\n            options={clientNames}\n            onChange={handleChange}\n            name=\"clientName\"\n            value={clientName}\n          />\n          <FormSelector\n            label=\"Exchanges\"\n            options={exchanges}\n            onChange={handleChange}\n            name=\"exchange\"\n            value={exchange}\n          />\n          <FormSelector\n            label=\"Envs\"\n            options={envs}\n            name=\"env\"\n            onChange={handleChange}\n            value={env}\n          />\n          <FormSelector\n            label=\"Report Cycles\"\n            options={reportCycles}\n            name=\"reportCycle\"\n            onChange={handleChange}\n            value={reportCycle}\n          />\n          <FormSelector\n            label=\"Time Zones\"\n            options={timeZones}\n            name=\"timeZone\"\n            onChange={handleChange}\n            value={timeZone}\n          />\n        </div>\n        <div className=\"style\">\n          <Button type=\"button\" onClick={handleReset}>\n            Clear\n          </Button>\n          <Button type=\"button\" onClick={getEntries}>\n            Load Records\n          </Button>\n          <Button buttonType=\"google\" type=\"submit\">\n            Submit\n          </Button>\n        </div>\n      </form>\n      <div className=\"App\">\n      <table>\n        <tr>\n          <th>Name</th>\n          <th>Age</th>\n          <th>Gender</th>\n        </tr>\n        {records.map((val, key) => {\n          return (\n            <tr key={key}>\n              <td>{val.name}</td>\n              <td>{val.age}</td>\n              <td>{val.gender}</td>\n            </tr>\n          )\n        })}\n      </table>\n    </div>\n    </div>\n  );\n}\n\nexport default CronInputForm;\n"]},"metadata":{},"sourceType":"module"}