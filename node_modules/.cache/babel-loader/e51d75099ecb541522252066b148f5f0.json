{"ast":null,"code":"var _jsxFileName = \"/home/jinsonshaju/collateral/collateral-email-tracker/src/components/sign-up/SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { UseState } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport \"./sign-up-styles.scss\";\nimport Button from \"../button/Button\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { createAuthUserWithEmailAndPassword, createUserDocumentFromAuth } from \"../../util/firebase/Firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormFields = {\n  displayName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\"\n};\n\nfunction SignUp(props) {\n  _s();\n\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = formFields;\n  const {\n    setCurrentUser\n  } = useContext(UserContext);\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({ ...formFields,\n      [name]: value\n    });\n  };\n\n  const resetForm = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwors do not match\");\n      return;\n    }\n\n    try {\n      const {\n        user\n      } = await createAuthUserWithEmailAndPassword(email, password);\n      setCurrentUser(user);\n      await createUserDocumentFromAuth(user, {\n        displayName\n      });\n      resetForm();\n    } catch (error) {\n      if (error.code === \"auth/email-already-in-use\") {\n        alert(\"Cannot create user, email already in use\");\n      } else {\n        console.log(\"User creation encountered an error\", error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Don't have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Display Name\",\n        type: \"text\",\n        required: true,\n        onChange: handleChange,\n        name: \"displayName\",\n        value: displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Email\",\n        type: \"email\",\n        required: true,\n        onChange: handleChange,\n        name: \"email\",\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Password\",\n        type: \"password\",\n        required: true,\n        onChange: handleChange,\n        name: \"password\",\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Confirm Password\",\n        type: \"password\",\n        required: true,\n        onChange: handleChange,\n        name: \"confirmPassword\",\n        value: confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        buttonType: \"google\",\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"BNNXrV0qdqCY7HK89zzO2SPvV4c=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/src/components/sign-up/SignUp.jsx"],"names":["React","useState","useContext","UseState","FormInput","Button","UserContext","createAuthUserWithEmailAndPassword","createUserDocumentFromAuth","defaultFormFields","displayName","email","password","confirmPassword","SignUp","props","formFields","setFormFields","setCurrentUser","handleChange","event","name","value","target","resetForm","handleSubmit","preventDefault","alert","user","error","code","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { UseState } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport \"./sign-up-styles.scss\";\nimport Button from \"../button/Button\";\n\nimport { UserContext } from \"../../contexts/UserContext\";\n\nimport {\n  createAuthUserWithEmailAndPassword,\n  createUserDocumentFromAuth,\n} from \"../../util/firebase/Firebase\";\n\nconst defaultFormFields = {\n  displayName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nfunction SignUp(props) {\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const { displayName, email, password, confirmPassword } = formFields;\n  const { setCurrentUser } = useContext(UserContext);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormFields({ ...formFields, [name]: value });\n  };\n\n  const resetForm = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"Passwors do not match\");\n      return;\n    }\n    try {\n      const { user } = await createAuthUserWithEmailAndPassword(\n        email,\n        password\n      );\n\n      setCurrentUser(user);\n      await createUserDocumentFromAuth(user, { displayName });\n      resetForm();\n    } catch (error) {\n      if (error.code === \"auth/email-already-in-use\") {\n        alert(\"Cannot create user, email already in use\");\n      } else {\n        console.log(\"User creation encountered an error\", error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"sign-up-container\">\n      <h2>Don't have an account?</h2>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          label=\"Display Name\"\n          type=\"text\"\n          required\n          onChange={handleChange}\n          name=\"displayName\"\n          value={displayName}\n        />\n\n        <FormInput\n          label=\"Email\"\n          type=\"email\"\n          required\n          onChange={handleChange}\n          name=\"email\"\n          value={email}\n        />\n\n        <FormInput\n          label=\"Password\"\n          type=\"password\"\n          required\n          onChange={handleChange}\n          name=\"password\"\n          value={password}\n        />\n\n        <FormInput\n          label=\"Confirm Password\"\n          type=\"password\"\n          required\n          onChange={handleChange}\n          name=\"confirmPassword\"\n          value={confirmPassword}\n        />\n        <Button buttonType=\"google\" type=\"submit\">\n          Sign Up\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}