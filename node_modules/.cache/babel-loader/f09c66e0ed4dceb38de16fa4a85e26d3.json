{"ast":null,"code":"var _jsxFileName = \"/home/jinsonshaju/collateral/collateral-email-tracker/src/components/cronInputForm/CronInputForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport Button from \"../button/Button\";\nimport config from \"../../config\";\nimport FormSelector from \"../form-selector/FormSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormFields = {\n  cron: \"\",\n  name: \"\",\n  clientNames: getClientName(config.clients),\n  exchanges: getExchangeName(config.exchanges),\n  envs: getEnvs(\"jpm\")\n};\n\nfunction getExchangeName(data) {\n  return Object.values(data);\n}\n\nfunction getEnvs(client) {\n  return Object.values(config.clients[client].envs);\n}\n\nfunction getClientName(data) {\n  var clients = [];\n  Object.values(data).forEach(element => {\n    clients.push(element.name);\n  });\n  return clients;\n}\n\nfunction CronInputForm(props) {\n  _s();\n\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    name,\n    cron,\n    clientNames,\n    exchanges,\n    envs\n  } = formFields;\n\n  const handleSubmit = () => {// console.log(getClientName(config.clients));\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({ ...formFields,\n      [name]: value\n    });\n  };\n\n  const handleSelectorChange = event => {\n    setFormFields({ ...formFields,\n      [envs]: getEnvs(event.target.value)\n    });\n    console.log(\"hello111\");\n    console.log(envs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Name\",\n        type: \"text\",\n        required: true,\n        onChange: handleChange,\n        name: \"name\",\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Cron\",\n        type: \"text\",\n        required: true,\n        onChange: handleChange,\n        name: \"cron\",\n        value: cron\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n        label: \"Client Names\",\n        options: clientNames,\n        onChange: handleSelectorChange,\n        name: \"client names\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n        label: \"Exchanges\",\n        options: exchanges\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n        label: \"Envs\",\n        options: envs,\n        name: \"envs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CronInputForm, \"BSTP5B8VO6H/Fwu712VTuD9hH54=\");\n\n_c = CronInputForm;\nexport default CronInputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CronInputForm\");","map":{"version":3,"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/src/components/cronInputForm/CronInputForm.jsx"],"names":["React","useState","FormInput","Button","config","FormSelector","defaultFormFields","cron","name","clientNames","getClientName","clients","exchanges","getExchangeName","envs","getEnvs","data","Object","values","client","forEach","element","push","CronInputForm","props","formFields","setFormFields","handleSubmit","handleChange","event","value","target","handleSelectorChange","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport Button from \"../button/Button\";\nimport config from \"../../config\";\nimport FormSelector from \"../form-selector/FormSelector\";\n\nconst defaultFormFields = {\n  cron: \"\",\n  name: \"\",\n  clientNames: getClientName(config.clients),\n  exchanges: getExchangeName(config.exchanges),\n  envs:getEnvs(\"jpm\")\n};\n\nfunction getExchangeName(data) {\n  return Object.values(data);\n}\n\nfunction getEnvs(client) {\n  return Object.values(config.clients[client].envs);\n}\n\nfunction getClientName(data) {\n  var clients = [];\n  Object.values(data).forEach((element) => {\n    clients.push(element.name);\n  });\n  return clients;\n}\n\nfunction CronInputForm(props) {\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const { name, cron, clientNames, exchanges, envs } = formFields;\n\n  const handleSubmit = () => {\n    // console.log(getClientName(config.clients));\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormFields({ ...formFields, [name]: value });\n  };\n\n  const handleSelectorChange = (event) => {\n    setFormFields({ ...formFields, [envs]: getEnvs(event.target.value) });\n    console.log(\"hello111\")\n    console.log(envs);\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          label=\"Name\"\n          type=\"text\"\n          required\n          onChange={handleChange}\n          name=\"name\"\n          value={name}\n        />\n\n        <FormInput\n          label=\"Cron\"\n          type=\"text\"\n          required\n          onChange={handleChange}\n          name=\"cron\"\n          value={cron}\n        />\n        <FormSelector\n          label=\"Client Names\"\n          options={clientNames}\n          onChange={handleSelectorChange}\n          name=\"client names\"\n        />\n        <FormSelector label=\"Exchanges\" options={exchanges} />\n        <FormSelector\n          label=\"Envs\"\n          options={envs}\n          name=\"envs\"\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </div>\n  );\n}\n\nexport default CronInputForm;\n"]},"metadata":{},"sourceType":"module"}