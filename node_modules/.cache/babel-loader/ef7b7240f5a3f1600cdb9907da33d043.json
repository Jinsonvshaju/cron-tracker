{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Classes, DISPLAYNAME_PREFIX, Intent } from \"../../common\";\nimport { H4 } from \"../html/html\";\nimport { Icon, IconSize } from \"../icon/icon\";\n\nvar Callout =\n/** @class */\nfunction (_super) {\n  __extends(Callout, _super);\n\n  function Callout() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Callout.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        className = _b.className,\n        children = _b.children,\n        icon = _b.icon,\n        intent = _b.intent,\n        title = _b.title,\n        htmlProps = __rest(_b, [\"className\", \"children\", \"icon\", \"intent\", \"title\"]);\n\n    var iconName = this.getIconName(icon, intent);\n    var classes = classNames(Classes.CALLOUT, Classes.intentClass(intent), (_a = {}, _a[Classes.CALLOUT_ICON] = iconName != null, _a), className);\n    return React.createElement(\"div\", __assign({\n      className: classes\n    }, htmlProps), iconName && React.createElement(Icon, {\n      icon: iconName,\n      size: IconSize.LARGE,\n      \"aria-hidden\": true,\n      tabIndex: -1\n    }), title && React.createElement(H4, null, title), children);\n  };\n\n  Callout.prototype.getIconName = function (icon, intent) {\n    // 1. no icon\n    if (icon === null) {\n      return undefined;\n    } // 2. defined iconName prop\n\n\n    if (icon !== undefined) {\n      return icon;\n    } // 3. default intent icon\n\n\n    switch (intent) {\n      case Intent.DANGER:\n        return \"error\";\n\n      case Intent.PRIMARY:\n        return \"info-sign\";\n\n      case Intent.WARNING:\n        return \"warning-sign\";\n\n      case Intent.SUCCESS:\n        return \"tick\";\n\n      default:\n        return undefined;\n    }\n  };\n\n  Callout.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Callout\");\n  return Callout;\n}(AbstractPureComponent2);\n\nexport { Callout };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SACIC,sBADJ,EAEIC,OAFJ,EAGIC,kBAHJ,EAMIC,MANJ,QASO,cATP;AAUA,SAASC,EAAT,QAAmB,cAAnB;AACA,SAASC,IAAT,EAAyBC,QAAzB,QAAyC,cAAzC;;AAmCA;AAAA;AAAA;AAA6BC;;AAA7B;;AA6CC;;AA1CUC,6BAAP;;;AACI,QAAMC,KAA6D,KAAKC,KAAxE;AAAA,QAAQC,SAAS,eAAjB;AAAA,QAAmBC,QAAQ,cAA3B;AAAA,QAA6BC,IAAI,UAAjC;AAAA,QAAmCC,MAAM,YAAzC;AAAA,QAA2CC,KAAK,WAAhD;AAAA,QAAqDC,SAAS,cAAxD,oDAAwD,CAA9D;;AACA,QAAMC,QAAQ,GAAG,KAAKC,WAAL,CAAiBL,IAAjB,EAAuBC,MAAvB,CAAjB;AACA,QAAMK,OAAO,GAAGrB,UAAU,CACtBG,OAAO,CAACmB,OADc,EAEtBnB,OAAO,CAACoB,WAAR,CAAoBP,MAApB,CAFsB,GAEKQ,SACzBA,GAACrB,OAAO,CAACsB,YAAT,IAAwBN,QAAQ,IAAI,IADX,EACeK,EAHpB,GAItBX,SAJsB,CAA1B;AAOA,WACIZ;AAAKY,eAAS,EAAEQ;AAAhB,OAA6BH,SAA7B,GACKC,QAAQ,IAAIlB,oBAACM,IAAD,EAAK;AAACQ,UAAI,EAAEI,QAAP;AAAiBO,UAAI,EAAElB,QAAQ,CAACmB,KAAhC;AAAqC,qBAAe,IAApD;AAA0DC,cAAQ,EAAE,CAAC;AAArE,KAAL,CADjB,EAEKX,KAAK,IAAIhB,oBAACK,EAAD,EAAG,IAAH,EAAKW,KAAL,CAFd,EAGKH,QAHL,CADJ;AAOH,GAjBM;;AAmBCJ,kCAAR,UAAoBK,IAApB,EAAiDC,MAAjD,EAAgE;AAC5D;AACA,QAAID,IAAI,KAAK,IAAb,EAAmB;AACf,aAAOc,SAAP;AACH,KAJ2D,CAK5D;;;AACA,QAAId,IAAI,KAAKc,SAAb,EAAwB;AACpB,aAAOd,IAAP;AACH,KAR2D,CAS5D;;;AACA,YAAQC,MAAR;AACI,WAAKX,MAAM,CAACyB,MAAZ;AACI,eAAO,OAAP;;AACJ,WAAKzB,MAAM,CAAC0B,OAAZ;AACI,eAAO,WAAP;;AACJ,WAAK1B,MAAM,CAAC2B,OAAZ;AACI,eAAO,cAAP;;AACJ,WAAK3B,MAAM,CAAC4B,OAAZ;AACI,eAAO,MAAP;;AACJ;AACI,eAAOJ,SAAP;AAVR;AAYH,GAtBO;;AArBMnB,wBAAc,UAAGN,kBAAH,EAAqB,UAArB,CAAd;AA4ClB;AAAC,CA7CD,CAA6BF,sBAA7B;;SAAaQ","names":["classNames","React","AbstractPureComponent2","Classes","DISPLAYNAME_PREFIX","Intent","H4","Icon","IconSize","__extends","Callout","_b","props","className","children","icon","intent","title","htmlProps","iconName","getIconName","classes","CALLOUT","intentClass","_a","CALLOUT_ICON","size","LARGE","tabIndex","undefined","DANGER","PRIMARY","WARNING","SUCCESS"],"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/node_modules/@blueprintjs/core/src/components/callout/callout.tsx"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport {\n    AbstractPureComponent2,\n    Classes,\n    DISPLAYNAME_PREFIX,\n    HTMLDivProps,\n    IntentProps,\n    Intent,\n    Props,\n    MaybeElement,\n} from \"../../common\";\nimport { H4 } from \"../html/html\";\nimport { Icon, IconName, IconSize } from \"../icon/icon\";\n\n// eslint-disable-next-line deprecation/deprecation\nexport type CalloutProps = ICalloutProps;\n/** @deprecated use CalloutProps */\nexport interface ICalloutProps extends IntentProps, Props, HTMLDivProps {\n    /** Callout contents. */\n    children?: React.ReactNode;\n\n    /**\n     * Name of a Blueprint UI icon (or an icon element) to render on the left side.\n     *\n     * If this prop is omitted or `undefined`, the `intent` prop will determine a default icon.\n     * If this prop is explicitly `null`, no icon will be displayed (regardless of `intent`).\n     */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Visual intent color to apply to background, title, and icon.\n     *\n     * Defining this prop also applies a default icon, if the `icon` prop is omitted.\n     */\n    intent?: Intent;\n\n    /**\n     * String content of optional title element.\n     *\n     * Due to a conflict with the HTML prop types, to provide JSX content simply\n     * pass `<H4>JSX title content</H4>` as first `children` element instead of\n     * using this prop (note uppercase tag name to use the Blueprint Heading\n     * component).\n     */\n    title?: string;\n}\n\nexport class Callout extends AbstractPureComponent2<CalloutProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Callout`;\n\n    public render() {\n        const { className, children, icon, intent, title, ...htmlProps } = this.props;\n        const iconName = this.getIconName(icon, intent);\n        const classes = classNames(\n            Classes.CALLOUT,\n            Classes.intentClass(intent),\n            { [Classes.CALLOUT_ICON]: iconName != null },\n            className,\n        );\n\n        return (\n            <div className={classes} {...htmlProps}>\n                {iconName && <Icon icon={iconName} size={IconSize.LARGE} aria-hidden={true} tabIndex={-1} />}\n                {title && <H4>{title}</H4>}\n                {children}\n            </div>\n        );\n    }\n\n    private getIconName(icon?: CalloutProps[\"icon\"], intent?: Intent): IconName | MaybeElement {\n        // 1. no icon\n        if (icon === null) {\n            return undefined;\n        }\n        // 2. defined iconName prop\n        if (icon !== undefined) {\n            return icon;\n        }\n        // 3. default intent icon\n        switch (intent) {\n            case Intent.DANGER:\n                return \"error\";\n            case Intent.PRIMARY:\n                return \"info-sign\";\n            case Intent.WARNING:\n                return \"warning-sign\";\n            case Intent.SUCCESS:\n                return \"tick\";\n            default:\n                return undefined;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}