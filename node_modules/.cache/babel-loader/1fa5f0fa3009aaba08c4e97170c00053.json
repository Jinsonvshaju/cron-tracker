{"ast":null,"code":"var _jsxFileName = \"/home/jinsonshaju/collateral/collateral-email-tracker/src/components/cronInputForm/CronInputForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport Button from \"../button/Button\";\nimport config from \"../../config\";\nimport FormSelector from \"../form-selector/FormSelector\";\nimport { API } from \"../util/api/Api.js\";\nimport \"./cronInputForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet api = new API();\nconst index = 0;\nconst defaultOptions = {\n  clientNames: getClientName(config.clients),\n  exchanges: getExchangeName(config.exchanges),\n  envs: getEnvs(getClientName(config.clients)[index].value),\n  timeZones: getTimeZones(config.timeZones)\n};\nconst defaultFormFields = {\n  cron: \"\",\n  name: \"\",\n  clientName: defaultOptions.clientNames[index].value,\n  exchange: defaultOptions.exchanges[index].value,\n  env: defaultOptions.envs[index].value\n};\n\nfunction getTimeZones(data) {\n  var timeZones = [];\n  Object.values(data).forEach(element => {\n    timeZones.push(element.name);\n  });\n  return timeZones;\n}\n\nfunction getExchangeName(data) {\n  return Object.values(data);\n}\n\nfunction getEnvs(client) {\n  return Object.values(config.clients[client].envs);\n}\n\nfunction getClientName(data) {\n  var clients = [];\n  Object.values(data).forEach(element => {\n    clients.push(element.name);\n  });\n  return clients;\n}\n\nfunction CronInputForm(props) {\n  _s();\n\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    name,\n    cron,\n    clientName,\n    exchange,\n    env\n  } = formFields;\n  const [cronMessage, setCronMessage] = useState(\"cron\");\n  const [options, setOptions] = useState(defaultOptions);\n  const {\n    clientNames,\n    exchanges,\n    envs\n  } = options;\n\n  const handleSubmit = () => {// console.log(getClientName(config.clients));\n  };\n\n  const getCronInfo = cron => {\n    return new Promise(resolve => {\n      api.getCronInfo(cron).then(res => {\n        setCronMessage(res.data.message);\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({ ...formFields,\n      [name]: value\n    });\n\n    if (name === \"clientName\") {\n      const newEnvs = getEnvs(value);\n      setOptions({ ...options,\n        envs: newEnvs\n      });\n      setFormFields({ ...formFields,\n        env: newEnvs[index].value\n      });\n    } else if (name === \"cron\") {\n      if (value.trim().length > 0) {\n        getCronInfo(value);\n      } else setCronMessage(\"cron\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Name\",\n        type: \"text\",\n        required: true,\n        onChange: handleChange,\n        name: \"name\",\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: cronMessage,\n        type: \"text\",\n        required: true,\n        onChange: handleChange,\n        name: \"cron\",\n        value: cron\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"style\",\n        children: [/*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"Client Names\",\n          options: clientNames,\n          onChange: handleChange,\n          name: \"clientName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"Exchanges\",\n          options: exchanges,\n          onChange: handleChange,\n          name: \"exchange\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"Envs\",\n          options: envs,\n          name: \"env\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormSelector, {\n          label: \"Envs\",\n          options: envs,\n          name: \"env\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"style\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          buttonType: \"google\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CronInputForm, \"dpfIjYWimIHM+9BtWlYMElxxfbw=\");\n\n_c = CronInputForm;\nexport default CronInputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CronInputForm\");","map":{"version":3,"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/src/components/cronInputForm/CronInputForm.jsx"],"names":["React","useState","FormInput","Button","config","FormSelector","API","api","index","defaultOptions","clientNames","getClientName","clients","exchanges","getExchangeName","envs","getEnvs","value","timeZones","getTimeZones","defaultFormFields","cron","name","clientName","exchange","env","data","Object","values","forEach","element","push","client","CronInputForm","props","formFields","setFormFields","cronMessage","setCronMessage","options","setOptions","handleSubmit","getCronInfo","Promise","resolve","then","res","message","catch","err","console","log","handleChange","event","target","newEnvs","trim","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport Button from \"../button/Button\";\nimport config from \"../../config\";\nimport FormSelector from \"../form-selector/FormSelector\";\nimport { API } from \"../util/api/Api.js\";\nimport \"./cronInputForm.css\";\nlet api = new API();\nconst index = 0;\n\nconst defaultOptions = {\n  clientNames: getClientName(config.clients),\n  exchanges: getExchangeName(config.exchanges),\n  envs: getEnvs(getClientName(config.clients)[index].value),\n  timeZones:getTimeZones(config.timeZones),\n};\n\nconst defaultFormFields = {\n  cron: \"\",\n  name: \"\",\n  clientName: defaultOptions.clientNames[index].value,\n  exchange: defaultOptions.exchanges[index].value,\n  env: defaultOptions.envs[index].value,\n};\n\nfunction getTimeZones(data){\n  var timeZones=[];\n  Object.values(data).forEach((element) => {\n    timeZones.push(element.name);\n  });\n  return timeZones;\n}\n\nfunction getExchangeName(data) {\n  return Object.values(data);\n}\n\nfunction getEnvs(client) {\n  return Object.values(config.clients[client].envs);\n}\n\nfunction getClientName(data) {\n  var clients = [];\n  Object.values(data).forEach((element) => {\n    clients.push(element.name);\n  });\n  return clients;\n}\n\nfunction CronInputForm(props) {\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const { name, cron, clientName, exchange, env } = formFields;\n  const [cronMessage, setCronMessage] = useState(\"cron\");\n\n  const [options, setOptions] = useState(defaultOptions);\n  const { clientNames, exchanges, envs } = options;\n  const handleSubmit = () => {\n    // console.log(getClientName(config.clients));\n  };\n\n  const getCronInfo = (cron) => {\n    return new Promise((resolve) => {\n      api\n        .getCronInfo(cron)\n        .then((res) => {\n          setCronMessage(res.data.message);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    });\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormFields({ ...formFields, [name]: value });\n    if (name === \"clientName\") {\n      const newEnvs = getEnvs(value);\n      setOptions({ ...options, envs: newEnvs });\n      setFormFields({ ...formFields, env: newEnvs[index].value });\n    } else if (name === \"cron\") {\n      if (value.trim().length > 0) {\n        getCronInfo(value);\n      } else setCronMessage(\"cron\");\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          label=\"Name\"\n          type=\"text\"\n          required\n          onChange={handleChange}\n          name=\"name\"\n          value={name}\n        />\n\n        <FormInput\n          label={cronMessage}\n          type=\"text\"\n          required\n          onChange={handleChange}\n          name=\"cron\"\n          value={cron}\n        />\n        <div className=\"style\">\n          <FormSelector\n            label=\"Client Names\"\n            options={clientNames}\n            onChange={handleChange}\n            name=\"clientName\"\n          />\n          <FormSelector\n            label=\"Exchanges\"\n            options={exchanges}\n            onChange={handleChange}\n            name=\"exchange\"\n          />\n          <FormSelector\n            label=\"Envs\"\n            options={envs}\n            name=\"env\"\n            onChange={handleChange}\n          />\n          <FormSelector\n            label=\"Envs\"\n            options={envs}\n            name=\"env\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"style\">\n          <Button type=\"button\">Clear</Button>\n          <Button buttonType=\"google\" type=\"submit\">\n            Submit\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default CronInputForm;\n"]},"metadata":{},"sourceType":"module"}