{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { AbstractPureComponent2, Classes, Position } from \"../../common\";\nimport { Popover } from \"../popover/popover\";\nvar POPPER_MODIFIERS = {\n  preventOverflow: {\n    boundariesElement: \"viewport\"\n  }\n};\nvar TRANSITION_DURATION = 100;\n/* istanbul ignore next */\n\n/** @deprecated use ContextMenu2 */\n\nvar ContextMenu =\n/** @class */\nfunction (_super) {\n  __extends(ContextMenu, _super);\n\n  function ContextMenu() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      isDarkTheme: false,\n      isOpen: false\n    };\n\n    _this.cancelContextMenu = function (e) {\n      return e.preventDefault();\n    };\n\n    _this.handleBackdropContextMenu = function (e) {\n      // React function to remove from the event pool, useful when using a event within a callback\n      e.persist();\n      e.preventDefault(); // wait for backdrop to disappear so we can find the \"real\" element at event coordinates.\n      // timeout duration is equivalent to transition duration so we know it's animated out.\n\n      _this.setTimeout(function () {\n        // retrigger context menu event at the element beneath the backdrop.\n        // if it has a `contextmenu` event handler then it'll be invoked.\n        // if it doesn't, no native menu will show (at least on OSX) :(\n        var newTarget = document.elementFromPoint(e.clientX, e.clientY);\n\n        var view = e.view,\n            newEventInit = __rest(e, [\"view\"]);\n\n        newTarget === null || newTarget === void 0 ? void 0 : newTarget.dispatchEvent(new MouseEvent(\"contextmenu\", newEventInit));\n      }, TRANSITION_DURATION);\n    };\n\n    _this.handlePopoverInteraction = function (nextOpenState) {\n      if (!nextOpenState) {\n        // delay the actual hiding till the event queue clears\n        // to avoid flicker of opening twice\n        _this.requestAnimationFrame(function () {\n          return _this.hide();\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  ContextMenu.prototype.render = function () {\n    var _a; // prevent right-clicking in a context menu\n\n\n    var content = React.createElement(\"div\", {\n      onContextMenu: this.cancelContextMenu\n    }, this.state.menu);\n    var popoverClassName = classNames((_a = {}, _a[Classes.DARK] = this.state.isDarkTheme, _a)); // HACKHACK: workaround until we have access to Popper#scheduleUpdate().\n    // https://github.com/palantir/blueprint/issues/692\n    // Generate key based on offset so a new Popover instance is created\n    // when offset changes, to force recomputing position.\n\n    var key = this.state.offset === undefined ? \"\" : \"\".concat(this.state.offset.left, \"x\").concat(this.state.offset.top); // wrap the popover in a positioned div to make sure it is properly\n    // offset on the screen.\n\n    /* eslint-disable deprecation/deprecation */\n\n    return React.createElement(\"div\", {\n      className: Classes.CONTEXT_MENU_POPOVER_TARGET,\n      style: this.state.offset\n    }, React.createElement(Popover, __assign({}, this.props, {\n      backdropProps: {\n        onContextMenu: this.handleBackdropContextMenu\n      },\n      content: content,\n      enforceFocus: false,\n      key: key,\n      hasBackdrop: true,\n      isOpen: this.state.isOpen,\n      minimal: true,\n      modifiers: POPPER_MODIFIERS,\n      onInteraction: this.handlePopoverInteraction,\n      position: Position.RIGHT_TOP,\n      popoverClassName: popoverClassName,\n      target: React.createElement(\"div\", null),\n      transitionDuration: TRANSITION_DURATION\n    })));\n    /* eslint-enable deprecation/deprecation */\n  };\n\n  ContextMenu.prototype.show = function (menu, offset, onClose, isDarkTheme) {\n    if (isDarkTheme === void 0) {\n      isDarkTheme = false;\n    }\n\n    this.setState({\n      isOpen: true,\n      menu: menu,\n      offset: offset,\n      onClose: onClose,\n      isDarkTheme: isDarkTheme\n    });\n  };\n\n  ContextMenu.prototype.hide = function () {\n    var _a, _b;\n\n    (_b = (_a = this.state).onClose) === null || _b === void 0 ? void 0 : _b.call(_a);\n    this.setState({\n      isOpen: false,\n      onClose: undefined\n    });\n  };\n\n  return ContextMenu;\n}(AbstractPureComponent2);\n\nvar contextMenuElement; // eslint-disable-next-line deprecation/deprecation\n\nvar contextMenu;\n/**\n * Show the given menu element at the given offset from the top-left corner of the viewport.\n * The menu will appear below-right of this point and will flip to below-left if there is not enough\n * room onscreen. The optional callback will be invoked when this menu closes.\n *\n * @deprecated use ContextMenu2\n */\n\nexport function show(menu, offset, onClose, isDarkTheme) {\n  if (contextMenuElement === undefined) {\n    contextMenuElement = document.createElement(\"div\");\n    contextMenuElement.classList.add(Classes.CONTEXT_MENU);\n    document.body.appendChild(contextMenuElement);\n    /* eslint-disable deprecation/deprecation */\n\n    contextMenu = ReactDOM.render(React.createElement(ContextMenu, {\n      onClosed: remove\n    }), contextMenuElement);\n    /* eslint-enable deprecation/deprecation */\n  }\n\n  contextMenu.show(menu, offset, onClose, isDarkTheme);\n}\n/** Hide the open context menu. */\n\nexport function hide() {\n  contextMenu === null || contextMenu === void 0 ? void 0 : contextMenu.hide();\n}\n/** Return whether a context menu is currently open. */\n\nexport function isOpen() {\n  return contextMenu != null && contextMenu.state.isOpen;\n}\n\nfunction remove() {\n  if (contextMenuElement != null) {\n    ReactDOM.unmountComponentAtNode(contextMenuElement);\n    contextMenuElement.remove();\n    contextMenuElement = undefined;\n    contextMenu = undefined;\n  }\n}","map":{"version":3,"mappings":"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","names":["classNames","React","ReactDOM","AbstractPureComponent2","Classes","Position","Popover","POPPER_MODIFIERS","preventOverflow","boundariesElement","TRANSITION_DURATION","__extends","_this","isDarkTheme","isOpen","e","preventDefault","persist","setTimeout","newTarget","document","elementFromPoint","clientX","clientY","newEventInit","dispatchEvent","MouseEvent","nextOpenState","requestAnimationFrame","hide","ContextMenu","content","onContextMenu","cancelContextMenu","state","menu","popoverClassName","_a","DARK","key","offset","undefined","left","concat","top","className","CONTEXT_MENU_POPOVER_TARGET","style","__assign","props","backdropProps","handleBackdropContextMenu","enforceFocus","hasBackdrop","minimal","modifiers","onInteraction","handlePopoverInteraction","position","RIGHT_TOP","target","transitionDuration","onClose","setState","_b","contextMenuElement","contextMenu","show","createElement","classList","add","CONTEXT_MENU","body","appendChild","render","onClosed","remove","unmountComponentAtNode"],"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/node_modules/@blueprintjs/core/src/components/context-menu/contextMenu.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { AbstractPureComponent2, Classes, Position } from \"../../common\";\nimport { IOverlayLifecycleProps } from \"../overlay/overlay\";\nimport { Popover } from \"../popover/popover\";\nimport { PopperModifiers } from \"../popover/popoverSharedProps\";\n\nexport interface IOffset {\n    left: number;\n    top: number;\n}\n\ninterface IContextMenuState {\n    isOpen: boolean;\n    isDarkTheme: boolean;\n    menu?: JSX.Element;\n    offset?: IOffset;\n    onClose?: () => void;\n}\n\nconst POPPER_MODIFIERS: PopperModifiers = {\n    preventOverflow: { boundariesElement: \"viewport\" },\n};\nconst TRANSITION_DURATION = 100;\n\ntype IContextMenuProps = IOverlayLifecycleProps;\n\n/* istanbul ignore next */\n/** @deprecated use ContextMenu2 */\n\nclass ContextMenu extends AbstractPureComponent2<IContextMenuProps, IContextMenuState> {\n    public state: IContextMenuState = {\n        isDarkTheme: false,\n        isOpen: false,\n    };\n\n    public render() {\n        // prevent right-clicking in a context menu\n        const content = <div onContextMenu={this.cancelContextMenu}>{this.state.menu}</div>;\n        const popoverClassName = classNames({ [Classes.DARK]: this.state.isDarkTheme });\n\n        // HACKHACK: workaround until we have access to Popper#scheduleUpdate().\n        // https://github.com/palantir/blueprint/issues/692\n        // Generate key based on offset so a new Popover instance is created\n        // when offset changes, to force recomputing position.\n        const key = this.state.offset === undefined ? \"\" : `${this.state.offset.left}x${this.state.offset.top}`;\n\n        // wrap the popover in a positioned div to make sure it is properly\n        // offset on the screen.\n        /* eslint-disable deprecation/deprecation */\n        return (\n            <div className={Classes.CONTEXT_MENU_POPOVER_TARGET} style={this.state.offset}>\n                <Popover\n                    {...this.props}\n                    backdropProps={{ onContextMenu: this.handleBackdropContextMenu }}\n                    content={content}\n                    enforceFocus={false}\n                    key={key}\n                    hasBackdrop={true}\n                    isOpen={this.state.isOpen}\n                    minimal={true}\n                    modifiers={POPPER_MODIFIERS}\n                    onInteraction={this.handlePopoverInteraction}\n                    position={Position.RIGHT_TOP}\n                    popoverClassName={popoverClassName}\n                    target={<div />}\n                    transitionDuration={TRANSITION_DURATION}\n                />\n            </div>\n        );\n        /* eslint-enable deprecation/deprecation */\n    }\n\n    public show(menu: JSX.Element, offset: IOffset, onClose?: () => void, isDarkTheme = false) {\n        this.setState({ isOpen: true, menu, offset, onClose, isDarkTheme });\n    }\n\n    public hide() {\n        this.state.onClose?.();\n        this.setState({ isOpen: false, onClose: undefined });\n    }\n\n    private cancelContextMenu = (e: React.SyntheticEvent<HTMLDivElement>) => e.preventDefault();\n\n    private handleBackdropContextMenu = (e: React.MouseEvent<HTMLDivElement>) => {\n        // React function to remove from the event pool, useful when using a event within a callback\n        e.persist();\n        e.preventDefault();\n        // wait for backdrop to disappear so we can find the \"real\" element at event coordinates.\n        // timeout duration is equivalent to transition duration so we know it's animated out.\n        this.setTimeout(() => {\n            // retrigger context menu event at the element beneath the backdrop.\n            // if it has a `contextmenu` event handler then it'll be invoked.\n            // if it doesn't, no native menu will show (at least on OSX) :(\n            const newTarget = document.elementFromPoint(e.clientX, e.clientY);\n            const { view, ...newEventInit } = e;\n            newTarget?.dispatchEvent(new MouseEvent(\"contextmenu\", newEventInit));\n        }, TRANSITION_DURATION);\n    };\n\n    private handlePopoverInteraction = (nextOpenState: boolean) => {\n        if (!nextOpenState) {\n            // delay the actual hiding till the event queue clears\n            // to avoid flicker of opening twice\n            this.requestAnimationFrame(() => this.hide());\n        }\n    };\n}\n\nlet contextMenuElement: HTMLElement | undefined;\n// eslint-disable-next-line deprecation/deprecation\nlet contextMenu: ContextMenu | undefined;\n\n/**\n * Show the given menu element at the given offset from the top-left corner of the viewport.\n * The menu will appear below-right of this point and will flip to below-left if there is not enough\n * room onscreen. The optional callback will be invoked when this menu closes.\n *\n * @deprecated use ContextMenu2\n */\nexport function show(menu: JSX.Element, offset: IOffset, onClose?: () => void, isDarkTheme?: boolean) {\n    if (contextMenuElement === undefined) {\n        contextMenuElement = document.createElement(\"div\");\n        contextMenuElement.classList.add(Classes.CONTEXT_MENU);\n        document.body.appendChild(contextMenuElement);\n        /* eslint-disable deprecation/deprecation */\n        contextMenu = ReactDOM.render<IContextMenuProps>(\n            <ContextMenu onClosed={remove} />,\n            contextMenuElement,\n        ) as ContextMenu;\n        /* eslint-enable deprecation/deprecation */\n    }\n\n    contextMenu!.show(menu, offset, onClose, isDarkTheme);\n}\n\n/** Hide the open context menu. */\nexport function hide() {\n    contextMenu?.hide();\n}\n\n/** Return whether a context menu is currently open. */\nexport function isOpen() {\n    return contextMenu != null && contextMenu.state.isOpen;\n}\n\nfunction remove() {\n    if (contextMenuElement != null) {\n        ReactDOM.unmountComponentAtNode(contextMenuElement);\n        contextMenuElement.remove();\n        contextMenuElement = undefined;\n        contextMenu = undefined;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}