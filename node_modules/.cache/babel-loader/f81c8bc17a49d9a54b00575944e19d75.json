{"ast":null,"code":"/*!\nFullCalendar v5.10.2\nDocs & License: https://fullcalendar.io/\n(c) 2021 Adam Shaw\n*/\nimport './main.css';\nimport { createRef, getStickyHeaderDates, createElement, ViewRoot, SimpleScrollGrid, getStickyFooterScrollbar, renderScrollShim, DateComponent, buildNavLinkAttrs, DayCellContent, Fragment, BaseComponent, createFormatter, StandardEvent, buildSegTimeText, EventRoot, getSegAnchorAttrs, memoize, MoreLinkRoot, getSegMeta, createAriaClickAttrs, getUniqueDomId, setRef, DayCellRoot, WeekNumberRoot, buildEntryKey, intersectSpans, SegHierarchy, intersectRanges, addDays, RefMap, sortEventSegs, isPropsEqual, buildEventRangeKey, BgEvent, renderFill, PositionCache, NowTimer, Slicer, DayHeader, DaySeriesModel, DayTableModel, addWeeks, diffWeeks, DateProfileGenerator, createPlugin } from '@fullcalendar/common';\nimport { __extends, __assign, __spreadArray } from 'tslib';\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\n\nvar TableView =\n/** @class */\nfunction (_super) {\n  __extends(TableView, _super);\n\n  function TableView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.headerElRef = createRef();\n    return _this;\n  }\n\n  TableView.prototype.renderSimpleLayout = function (headerRowContent, bodyContent) {\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var sections = [];\n    var stickyHeaderDates = getStickyHeaderDates(context.options);\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunk: {\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent\n        }\n      });\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunk: {\n        content: bodyContent\n      }\n    });\n    return createElement(ViewRoot, {\n      viewSpec: context.viewSpec\n    }, function (rootElRef, classNames) {\n      return createElement(\"div\", {\n        ref: rootElRef,\n        className: ['fc-daygrid'].concat(classNames).join(' ')\n      }, createElement(SimpleScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        collapsibleWidth: props.forPrint,\n        cols: []\n        /* TODO: make optional? */\n        ,\n        sections: sections\n      }));\n    });\n  };\n\n  TableView.prototype.renderHScrollLayout = function (headerRowContent, bodyContent, colCnt, dayMinWidth) {\n    var ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n\n    if (!ScrollGrid) {\n      throw new Error('No ScrollGrid implementation');\n    }\n\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n    var stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n    var sections = [];\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunks: [{\n          key: 'main',\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent\n        }]\n      });\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunks: [{\n        key: 'main',\n        content: bodyContent\n      }]\n    });\n\n    if (stickyFooterScrollbar) {\n      sections.push({\n        type: 'footer',\n        key: 'footer',\n        isSticky: true,\n        chunks: [{\n          key: 'main',\n          content: renderScrollShim\n        }]\n      });\n    }\n\n    return createElement(ViewRoot, {\n      viewSpec: context.viewSpec\n    }, function (rootElRef, classNames) {\n      return createElement(\"div\", {\n        ref: rootElRef,\n        className: ['fc-daygrid'].concat(classNames).join(' ')\n      }, createElement(ScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        collapsibleWidth: props.forPrint,\n        colGroups: [{\n          cols: [{\n            span: colCnt,\n            minWidth: dayMinWidth\n          }]\n        }],\n        sections: sections\n      }));\n    });\n  };\n\n  return TableView;\n}(DateComponent);\n\nfunction splitSegsByRow(segs, rowCnt) {\n  var byRow = [];\n\n  for (var i = 0; i < rowCnt; i += 1) {\n    byRow[i] = [];\n  }\n\n  for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n    var seg = segs_1[_i];\n    byRow[seg.row].push(seg);\n  }\n\n  return byRow;\n}\n\nfunction splitSegsByFirstCol(segs, colCnt) {\n  var byCol = [];\n\n  for (var i = 0; i < colCnt; i += 1) {\n    byCol[i] = [];\n  }\n\n  for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {\n    var seg = segs_2[_i];\n    byCol[seg.firstCol].push(seg);\n  }\n\n  return byCol;\n}\n\nfunction splitInteractionByRow(ui, rowCnt) {\n  var byRow = [];\n\n  if (!ui) {\n    for (var i = 0; i < rowCnt; i += 1) {\n      byRow[i] = null;\n    }\n  } else {\n    for (var i = 0; i < rowCnt; i += 1) {\n      byRow[i] = {\n        affectedInstances: ui.affectedInstances,\n        isEvent: ui.isEvent,\n        segs: []\n      };\n    }\n\n    for (var _i = 0, _a = ui.segs; _i < _a.length; _i++) {\n      var seg = _a[_i];\n      byRow[seg.row].segs.push(seg);\n    }\n  }\n\n  return byRow;\n}\n\nvar TableCellTop =\n/** @class */\nfunction (_super) {\n  __extends(TableCellTop, _super);\n\n  function TableCellTop() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TableCellTop.prototype.render = function () {\n    var props = this.props;\n    var navLinkAttrs = buildNavLinkAttrs(this.context, props.date);\n    return createElement(DayCellContent, {\n      date: props.date,\n      dateProfile: props.dateProfile,\n      todayRange: props.todayRange,\n      showDayNumber: props.showDayNumber,\n      extraHookProps: props.extraHookProps,\n      defaultContent: renderTopInner\n    }, function (innerElRef, innerContent) {\n      return (innerContent || props.forceDayTop) && createElement(\"div\", {\n        className: \"fc-daygrid-day-top\",\n        ref: innerElRef\n      }, createElement(\"a\", __assign({\n        id: props.dayNumberId,\n        className: \"fc-daygrid-day-number\"\n      }, navLinkAttrs), innerContent || createElement(Fragment, null, \"\\u00A0\")));\n    });\n  };\n\n  return TableCellTop;\n}(BaseComponent);\n\nfunction renderTopInner(props) {\n  return props.dayNumberText;\n}\n\nvar DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'narrow'\n});\n\nfunction hasListItemDisplay(seg) {\n  var display = seg.eventRange.ui.display;\n  return display === 'list-item' || display === 'auto' && !seg.eventRange.def.allDay && seg.firstCol === seg.lastCol && // can't be multi-day\n  seg.isStart && // \"\n  seg.isEnd // \"\n  ;\n}\n\nvar TableBlockEvent =\n/** @class */\nfunction (_super) {\n  __extends(TableBlockEvent, _super);\n\n  function TableBlockEvent() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TableBlockEvent.prototype.render = function () {\n    var props = this.props;\n    return createElement(StandardEvent, __assign({}, props, {\n      extraClassNames: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'],\n      defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT,\n      defaultDisplayEventEnd: props.defaultDisplayEventEnd,\n      disableResizing: !props.seg.eventRange.def.allDay\n    }));\n  };\n\n  return TableBlockEvent;\n}(BaseComponent);\n\nvar TableListItemEvent =\n/** @class */\nfunction (_super) {\n  __extends(TableListItemEvent, _super);\n\n  function TableListItemEvent() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TableListItemEvent.prototype.render = function () {\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var timeFormat = context.options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;\n    var timeText = buildSegTimeText(props.seg, timeFormat, context, true, props.defaultDisplayEventEnd);\n    return createElement(EventRoot, {\n      seg: props.seg,\n      timeText: timeText,\n      defaultContent: renderInnerContent,\n      isDragging: props.isDragging,\n      isResizing: false,\n      isDateSelecting: false,\n      isSelected: props.isSelected,\n      isPast: props.isPast,\n      isFuture: props.isFuture,\n      isToday: props.isToday\n    }, function (rootElRef, classNames, innerElRef, innerContent) {\n      return (// we don't use styles!\n        createElement(\"a\", __assign({\n          className: ['fc-daygrid-event', 'fc-daygrid-dot-event'].concat(classNames).join(' '),\n          ref: rootElRef\n        }, getSegAnchorAttrs(props.seg, context)), innerContent)\n      );\n    });\n  };\n\n  return TableListItemEvent;\n}(BaseComponent);\n\nfunction renderInnerContent(innerProps) {\n  return createElement(Fragment, null, createElement(\"div\", {\n    className: \"fc-daygrid-event-dot\",\n    style: {\n      borderColor: innerProps.borderColor || innerProps.backgroundColor\n    }\n  }), innerProps.timeText && createElement(\"div\", {\n    className: \"fc-event-time\"\n  }, innerProps.timeText), createElement(\"div\", {\n    className: \"fc-event-title\"\n  }, innerProps.event.title || createElement(Fragment, null, \"\\u00A0\")));\n}\n\nvar TableCellMoreLink =\n/** @class */\nfunction (_super) {\n  __extends(TableCellMoreLink, _super);\n\n  function TableCellMoreLink() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.compileSegs = memoize(compileSegs);\n    return _this;\n  }\n\n  TableCellMoreLink.prototype.render = function () {\n    var props = this.props;\n\n    var _a = this.compileSegs(props.singlePlacements),\n        allSegs = _a.allSegs,\n        invisibleSegs = _a.invisibleSegs;\n\n    return createElement(MoreLinkRoot, {\n      dateProfile: props.dateProfile,\n      todayRange: props.todayRange,\n      allDayDate: props.allDayDate,\n      moreCnt: props.moreCnt,\n      allSegs: allSegs,\n      hiddenSegs: invisibleSegs,\n      alignmentElRef: props.alignmentElRef,\n      alignGridTop: props.alignGridTop,\n      extraDateSpan: props.extraDateSpan,\n      popoverContent: function () {\n        var isForcedInvisible = (props.eventDrag ? props.eventDrag.affectedInstances : null) || (props.eventResize ? props.eventResize.affectedInstances : null) || {};\n        return createElement(Fragment, null, allSegs.map(function (seg) {\n          var instanceId = seg.eventRange.instance.instanceId;\n          return createElement(\"div\", {\n            className: \"fc-daygrid-event-harness\",\n            key: instanceId,\n            style: {\n              visibility: isForcedInvisible[instanceId] ? 'hidden' : ''\n            }\n          }, hasListItemDisplay(seg) ? createElement(TableListItemEvent, __assign({\n            seg: seg,\n            isDragging: false,\n            isSelected: instanceId === props.eventSelection,\n            defaultDisplayEventEnd: false\n          }, getSegMeta(seg, props.todayRange))) : createElement(TableBlockEvent, __assign({\n            seg: seg,\n            isDragging: false,\n            isResizing: false,\n            isDateSelecting: false,\n            isSelected: instanceId === props.eventSelection,\n            defaultDisplayEventEnd: false\n          }, getSegMeta(seg, props.todayRange))));\n        }));\n      }\n    }, function (rootElRef, classNames, innerElRef, innerContent, handleClick, title, isExpanded, popoverId) {\n      return createElement(\"a\", __assign({\n        ref: rootElRef,\n        className: ['fc-daygrid-more-link'].concat(classNames).join(' '),\n        title: title,\n        \"aria-expanded\": isExpanded,\n        \"aria-controls\": popoverId\n      }, createAriaClickAttrs(handleClick)), innerContent);\n    });\n  };\n\n  return TableCellMoreLink;\n}(BaseComponent);\n\nfunction compileSegs(singlePlacements) {\n  var allSegs = [];\n  var invisibleSegs = [];\n\n  for (var _i = 0, singlePlacements_1 = singlePlacements; _i < singlePlacements_1.length; _i++) {\n    var placement = singlePlacements_1[_i];\n    allSegs.push(placement.seg);\n\n    if (!placement.isVisible) {\n      invisibleSegs.push(placement.seg);\n    }\n  }\n\n  return {\n    allSegs: allSegs,\n    invisibleSegs: invisibleSegs\n  };\n}\n\nvar DEFAULT_WEEK_NUM_FORMAT = createFormatter({\n  week: 'narrow'\n});\n\nvar TableCell =\n/** @class */\nfunction (_super) {\n  __extends(TableCell, _super);\n\n  function TableCell() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.rootElRef = createRef();\n    _this.state = {\n      dayNumberId: getUniqueDomId()\n    };\n\n    _this.handleRootEl = function (el) {\n      setRef(_this.rootElRef, el);\n      setRef(_this.props.elRef, el);\n    };\n\n    return _this;\n  }\n\n  TableCell.prototype.render = function () {\n    var _a = this,\n        context = _a.context,\n        props = _a.props,\n        state = _a.state,\n        rootElRef = _a.rootElRef;\n\n    var date = props.date,\n        dateProfile = props.dateProfile;\n    var navLinkAttrs = buildNavLinkAttrs(context, date, 'week');\n    return createElement(DayCellRoot, {\n      date: date,\n      dateProfile: dateProfile,\n      todayRange: props.todayRange,\n      showDayNumber: props.showDayNumber,\n      extraHookProps: props.extraHookProps,\n      elRef: this.handleRootEl\n    }, function (dayElRef, dayClassNames, rootDataAttrs, isDisabled) {\n      return createElement(\"td\", __assign({\n        ref: dayElRef,\n        role: \"gridcell\",\n        className: ['fc-daygrid-day'].concat(dayClassNames, props.extraClassNames || []).join(' ')\n      }, rootDataAttrs, props.extraDataAttrs, props.showDayNumber ? {\n        'aria-labelledby': state.dayNumberId\n      } : {}), createElement(\"div\", {\n        className: \"fc-daygrid-day-frame fc-scrollgrid-sync-inner\",\n        ref: props.innerElRef\n        /* different from hook system! RENAME */\n\n      }, props.showWeekNumber && createElement(WeekNumberRoot, {\n        date: date,\n        defaultFormat: DEFAULT_WEEK_NUM_FORMAT\n      }, function (weekElRef, weekClassNames, innerElRef, innerContent) {\n        return createElement(\"a\", __assign({\n          ref: weekElRef,\n          className: ['fc-daygrid-week-number'].concat(weekClassNames).join(' ')\n        }, navLinkAttrs), innerContent);\n      }), !isDisabled && createElement(TableCellTop, {\n        date: date,\n        dateProfile: dateProfile,\n        showDayNumber: props.showDayNumber,\n        dayNumberId: state.dayNumberId,\n        forceDayTop: props.forceDayTop,\n        todayRange: props.todayRange,\n        extraHookProps: props.extraHookProps\n      }), createElement(\"div\", {\n        className: \"fc-daygrid-day-events\",\n        ref: props.fgContentElRef\n      }, props.fgContent, createElement(\"div\", {\n        className: \"fc-daygrid-day-bottom\",\n        style: {\n          marginTop: props.moreMarginTop\n        }\n      }, createElement(TableCellMoreLink, {\n        allDayDate: date,\n        singlePlacements: props.singlePlacements,\n        moreCnt: props.moreCnt,\n        alignmentElRef: rootElRef,\n        alignGridTop: !props.showDayNumber,\n        extraDateSpan: props.extraDateSpan,\n        dateProfile: props.dateProfile,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize,\n        todayRange: props.todayRange\n      }))), createElement(\"div\", {\n        className: \"fc-daygrid-day-bg\"\n      }, props.bgContent)));\n    });\n  };\n\n  return TableCell;\n}(DateComponent);\n\nfunction computeFgSegPlacement(segs, // assumed already sorted\ndayMaxEvents, dayMaxEventRows, strictOrder, eventInstanceHeights, maxContentHeight, cells) {\n  var hierarchy = new DayGridSegHierarchy();\n  hierarchy.allowReslicing = true;\n  hierarchy.strictOrder = strictOrder;\n\n  if (dayMaxEvents === true || dayMaxEventRows === true) {\n    hierarchy.maxCoord = maxContentHeight;\n    hierarchy.hiddenConsumes = true;\n  } else if (typeof dayMaxEvents === 'number') {\n    hierarchy.maxStackCnt = dayMaxEvents;\n  } else if (typeof dayMaxEventRows === 'number') {\n    hierarchy.maxStackCnt = dayMaxEventRows;\n    hierarchy.hiddenConsumes = true;\n  } // create segInputs only for segs with known heights\n\n\n  var segInputs = [];\n  var unknownHeightSegs = [];\n\n  for (var i = 0; i < segs.length; i += 1) {\n    var seg = segs[i];\n    var instanceId = seg.eventRange.instance.instanceId;\n    var eventHeight = eventInstanceHeights[instanceId];\n\n    if (eventHeight != null) {\n      segInputs.push({\n        index: i,\n        thickness: eventHeight,\n        span: {\n          start: seg.firstCol,\n          end: seg.lastCol + 1\n        }\n      });\n    } else {\n      unknownHeightSegs.push(seg);\n    }\n  }\n\n  var hiddenEntries = hierarchy.addSegs(segInputs);\n  var segRects = hierarchy.toRects();\n\n  var _a = placeRects(segRects, segs, cells),\n      singleColPlacements = _a.singleColPlacements,\n      multiColPlacements = _a.multiColPlacements,\n      leftoverMargins = _a.leftoverMargins;\n\n  var moreCnts = [];\n  var moreMarginTops = []; // add segs with unknown heights\n\n  for (var _i = 0, unknownHeightSegs_1 = unknownHeightSegs; _i < unknownHeightSegs_1.length; _i++) {\n    var seg = unknownHeightSegs_1[_i];\n    multiColPlacements[seg.firstCol].push({\n      seg: seg,\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0\n    });\n\n    for (var col = seg.firstCol; col <= seg.lastCol; col += 1) {\n      singleColPlacements[col].push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0\n      });\n    }\n  } // add the hidden entries\n\n\n  for (var col = 0; col < cells.length; col += 1) {\n    moreCnts.push(0);\n  }\n\n  for (var _b = 0, hiddenEntries_1 = hiddenEntries; _b < hiddenEntries_1.length; _b++) {\n    var hiddenEntry = hiddenEntries_1[_b];\n    var seg = segs[hiddenEntry.index];\n    var hiddenSpan = hiddenEntry.span;\n    multiColPlacements[hiddenSpan.start].push({\n      seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0\n    });\n\n    for (var col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {\n      moreCnts[col] += 1;\n      singleColPlacements[col].push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0\n      });\n    }\n  } // deal with leftover margins\n\n\n  for (var col = 0; col < cells.length; col += 1) {\n    moreMarginTops.push(leftoverMargins[col]);\n  }\n\n  return {\n    singleColPlacements: singleColPlacements,\n    multiColPlacements: multiColPlacements,\n    moreCnts: moreCnts,\n    moreMarginTops: moreMarginTops\n  };\n} // rects ordered by top coord, then left\n\n\nfunction placeRects(allRects, segs, cells) {\n  var rectsByEachCol = groupRectsByEachCol(allRects, cells.length);\n  var singleColPlacements = [];\n  var multiColPlacements = [];\n  var leftoverMargins = [];\n\n  for (var col = 0; col < cells.length; col += 1) {\n    var rects = rectsByEachCol[col]; // compute all static segs in singlePlacements\n\n    var singlePlacements = [];\n    var currentHeight = 0;\n    var currentMarginTop = 0;\n\n    for (var _i = 0, rects_1 = rects; _i < rects_1.length; _i++) {\n      var rect = rects_1[_i];\n      var seg = segs[rect.index];\n      singlePlacements.push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: true,\n        isAbsolute: false,\n        absoluteTop: rect.levelCoord,\n        marginTop: rect.levelCoord - currentHeight\n      });\n      currentHeight = rect.levelCoord + rect.thickness;\n    } // compute mixed static/absolute segs in multiPlacements\n\n\n    var multiPlacements = [];\n    currentHeight = 0;\n    currentMarginTop = 0;\n\n    for (var _a = 0, rects_2 = rects; _a < rects_2.length; _a++) {\n      var rect = rects_2[_a];\n      var seg = segs[rect.index];\n      var isAbsolute = rect.span.end - rect.span.start > 1; // multi-column?\n\n      var isFirstCol = rect.span.start === col;\n      currentMarginTop += rect.levelCoord - currentHeight; // amount of space since bottom of previous seg\n\n      currentHeight = rect.levelCoord + rect.thickness; // height will now be bottom of current seg\n\n      if (isAbsolute) {\n        currentMarginTop += rect.thickness;\n\n        if (isFirstCol) {\n          multiPlacements.push({\n            seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n            isVisible: true,\n            isAbsolute: true,\n            absoluteTop: rect.levelCoord,\n            marginTop: 0\n          });\n        }\n      } else if (isFirstCol) {\n        multiPlacements.push({\n          seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n          isVisible: true,\n          isAbsolute: false,\n          absoluteTop: rect.levelCoord,\n          marginTop: currentMarginTop // claim the margin\n\n        });\n        currentMarginTop = 0;\n      }\n    }\n\n    singleColPlacements.push(singlePlacements);\n    multiColPlacements.push(multiPlacements);\n    leftoverMargins.push(currentMarginTop);\n  }\n\n  return {\n    singleColPlacements: singleColPlacements,\n    multiColPlacements: multiColPlacements,\n    leftoverMargins: leftoverMargins\n  };\n}\n\nfunction groupRectsByEachCol(rects, colCnt) {\n  var rectsByEachCol = [];\n\n  for (var col = 0; col < colCnt; col += 1) {\n    rectsByEachCol.push([]);\n  }\n\n  for (var _i = 0, rects_3 = rects; _i < rects_3.length; _i++) {\n    var rect = rects_3[_i];\n\n    for (var col = rect.span.start; col < rect.span.end; col += 1) {\n      rectsByEachCol[col].push(rect);\n    }\n  }\n\n  return rectsByEachCol;\n}\n\nfunction resliceSeg(seg, spanStart, spanEnd, cells) {\n  if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n    return seg;\n  }\n\n  var eventRange = seg.eventRange;\n  var origRange = eventRange.range;\n  var slicedRange = intersectRanges(origRange, {\n    start: cells[spanStart].date,\n    end: addDays(cells[spanEnd - 1].date, 1)\n  });\n  return __assign(__assign({}, seg), {\n    firstCol: spanStart,\n    lastCol: spanEnd - 1,\n    eventRange: {\n      def: eventRange.def,\n      ui: __assign(__assign({}, eventRange.ui), {\n        durationEditable: false\n      }),\n      instance: eventRange.instance,\n      range: slicedRange\n    },\n    isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(),\n    isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf()\n  });\n}\n\nvar DayGridSegHierarchy =\n/** @class */\nfunction (_super) {\n  __extends(DayGridSegHierarchy, _super);\n\n  function DayGridSegHierarchy() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // config\n\n\n    _this.hiddenConsumes = false; // allows us to keep hidden entries in the hierarchy so they take up space\n\n    _this.forceHidden = {};\n    return _this;\n  }\n\n  DayGridSegHierarchy.prototype.addSegs = function (segInputs) {\n    var _this = this;\n\n    var hiddenSegs = _super.prototype.addSegs.call(this, segInputs);\n\n    var entriesByLevel = this.entriesByLevel;\n\n    var excludeHidden = function (entry) {\n      return !_this.forceHidden[buildEntryKey(entry)];\n    }; // remove the forced-hidden segs\n\n\n    for (var level = 0; level < entriesByLevel.length; level += 1) {\n      entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden);\n    }\n\n    return hiddenSegs;\n  };\n\n  DayGridSegHierarchy.prototype.handleInvalidInsertion = function (insertion, entry, hiddenEntries) {\n    var _a = this,\n        entriesByLevel = _a.entriesByLevel,\n        forceHidden = _a.forceHidden;\n\n    var touchingEntry = insertion.touchingEntry,\n        touchingLevel = insertion.touchingLevel,\n        touchingLateral = insertion.touchingLateral;\n\n    if (this.hiddenConsumes && touchingEntry) {\n      var touchingEntryId = buildEntryKey(touchingEntry); // if not already hidden\n\n      if (!forceHidden[touchingEntryId]) {\n        if (this.allowReslicing) {\n          var placeholderEntry = __assign(__assign({}, touchingEntry), {\n            span: intersectSpans(touchingEntry.span, entry.span)\n          });\n\n          var placeholderEntryId = buildEntryKey(placeholderEntry);\n          forceHidden[placeholderEntryId] = true;\n          entriesByLevel[touchingLevel][touchingLateral] = placeholderEntry; // replace touchingEntry with our placeholder\n\n          this.splitEntry(touchingEntry, entry, hiddenEntries); // split up the touchingEntry, reinsert it\n        } else {\n          forceHidden[touchingEntryId] = true;\n          hiddenEntries.push(touchingEntry);\n        }\n      }\n    }\n\n    return _super.prototype.handleInvalidInsertion.call(this, insertion, entry, hiddenEntries);\n  };\n\n  return DayGridSegHierarchy;\n}(SegHierarchy);\n\nvar TableRow =\n/** @class */\nfunction (_super) {\n  __extends(TableRow, _super);\n\n  function TableRow() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.cellElRefs = new RefMap(); // the <td>\n\n    _this.frameElRefs = new RefMap(); // the fc-daygrid-day-frame\n\n    _this.fgElRefs = new RefMap(); // the fc-daygrid-day-events\n\n    _this.segHarnessRefs = new RefMap(); // indexed by \"instanceId:firstCol\"\n\n    _this.rootElRef = createRef();\n    _this.state = {\n      framePositions: null,\n      maxContentHeight: null,\n      eventInstanceHeights: {}\n    };\n    return _this;\n  }\n\n  TableRow.prototype.render = function () {\n    var _this = this;\n\n    var _a = this,\n        props = _a.props,\n        state = _a.state,\n        context = _a.context;\n\n    var options = context.options;\n    var colCnt = props.cells.length;\n    var businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);\n    var bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);\n    var highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);\n    var mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);\n\n    var _b = computeFgSegPlacement(sortEventSegs(props.fgEventSegs, options.eventOrder), props.dayMaxEvents, props.dayMaxEventRows, options.eventOrderStrict, state.eventInstanceHeights, state.maxContentHeight, props.cells),\n        singleColPlacements = _b.singleColPlacements,\n        multiColPlacements = _b.multiColPlacements,\n        moreCnts = _b.moreCnts,\n        moreMarginTops = _b.moreMarginTops;\n\n    var isForcedInvisible = // TODO: messy way to compute this\n    props.eventDrag && props.eventDrag.affectedInstances || props.eventResize && props.eventResize.affectedInstances || {};\n    return createElement(\"tr\", {\n      ref: this.rootElRef,\n      role: \"row\"\n    }, props.renderIntro && props.renderIntro(), props.cells.map(function (cell, col) {\n      var normalFgNodes = _this.renderFgSegs(col, props.forPrint ? singleColPlacements[col] : multiColPlacements[col], props.todayRange, isForcedInvisible);\n\n      var mirrorFgNodes = _this.renderFgSegs(col, buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements), props.todayRange, {}, Boolean(props.eventDrag), Boolean(props.eventResize), false);\n\n      return createElement(TableCell, {\n        key: cell.key,\n        elRef: _this.cellElRefs.createRef(cell.key),\n        innerElRef: _this.frameElRefs.createRef(cell.key)\n        /* FF <td> problem, but okay to use for left/right. TODO: rename prop */\n        ,\n        dateProfile: props.dateProfile,\n        date: cell.date,\n        showDayNumber: props.showDayNumbers,\n        showWeekNumber: props.showWeekNumbers && col === 0,\n        forceDayTop: props.showWeekNumbers\n        /* even displaying weeknum for row, not necessarily day */\n        ,\n        todayRange: props.todayRange,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize,\n        extraHookProps: cell.extraHookProps,\n        extraDataAttrs: cell.extraDataAttrs,\n        extraClassNames: cell.extraClassNames,\n        extraDateSpan: cell.extraDateSpan,\n        moreCnt: moreCnts[col],\n        moreMarginTop: moreMarginTops[col],\n        singlePlacements: singleColPlacements[col],\n        fgContentElRef: _this.fgElRefs.createRef(cell.key),\n        fgContent: // Fragment scopes the keys\n        createElement(Fragment, null, createElement(Fragment, null, normalFgNodes), createElement(Fragment, null, mirrorFgNodes)),\n        bgContent: // Fragment scopes the keys\n        createElement(Fragment, null, _this.renderFillSegs(highlightSegsByCol[col], 'highlight'), _this.renderFillSegs(businessHoursByCol[col], 'non-business'), _this.renderFillSegs(bgEventSegsByCol[col], 'bg-event'))\n      });\n    }));\n  };\n\n  TableRow.prototype.componentDidMount = function () {\n    this.updateSizing(true);\n  };\n\n  TableRow.prototype.componentDidUpdate = function (prevProps, prevState) {\n    var currentProps = this.props;\n    this.updateSizing(!isPropsEqual(prevProps, currentProps));\n  };\n\n  TableRow.prototype.getHighlightSegs = function () {\n    var props = this.props;\n\n    if (props.eventDrag && props.eventDrag.segs.length) {\n      // messy check\n      return props.eventDrag.segs;\n    }\n\n    if (props.eventResize && props.eventResize.segs.length) {\n      // messy check\n      return props.eventResize.segs;\n    }\n\n    return props.dateSelectionSegs;\n  };\n\n  TableRow.prototype.getMirrorSegs = function () {\n    var props = this.props;\n\n    if (props.eventResize && props.eventResize.segs.length) {\n      // messy check\n      return props.eventResize.segs;\n    }\n\n    return [];\n  };\n\n  TableRow.prototype.renderFgSegs = function (col, segPlacements, todayRange, isForcedInvisible, isDragging, isResizing, isDateSelecting) {\n    var context = this.context;\n    var eventSelection = this.props.eventSelection;\n    var framePositions = this.state.framePositions;\n    var defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1\n\n    var isMirror = isDragging || isResizing || isDateSelecting;\n    var nodes = [];\n\n    if (framePositions) {\n      for (var _i = 0, segPlacements_1 = segPlacements; _i < segPlacements_1.length; _i++) {\n        var placement = segPlacements_1[_i];\n        var seg = placement.seg;\n        var instanceId = seg.eventRange.instance.instanceId;\n        var key = instanceId + ':' + col;\n        var isVisible = placement.isVisible && !isForcedInvisible[instanceId];\n        var isAbsolute = placement.isAbsolute;\n        var left = '';\n        var right = '';\n\n        if (isAbsolute) {\n          if (context.isRtl) {\n            right = 0;\n            left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];\n          } else {\n            left = 0;\n            right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];\n          }\n        }\n        /*\n        known bug: events that are force to be list-item but span multiple days still take up space in later columns\n        todo: in print view, for multi-day events, don't display title within non-start/end segs\n        */\n\n\n        nodes.push(createElement(\"div\", {\n          className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''),\n          key: key,\n          ref: isMirror ? null : this.segHarnessRefs.createRef(key),\n          style: {\n            visibility: isVisible ? '' : 'hidden',\n            marginTop: isAbsolute ? '' : placement.marginTop,\n            top: isAbsolute ? placement.absoluteTop : '',\n            left: left,\n            right: right\n          }\n        }, hasListItemDisplay(seg) ? createElement(TableListItemEvent, __assign({\n          seg: seg,\n          isDragging: isDragging,\n          isSelected: instanceId === eventSelection,\n          defaultDisplayEventEnd: defaultDisplayEventEnd\n        }, getSegMeta(seg, todayRange))) : createElement(TableBlockEvent, __assign({\n          seg: seg,\n          isDragging: isDragging,\n          isResizing: isResizing,\n          isDateSelecting: isDateSelecting,\n          isSelected: instanceId === eventSelection,\n          defaultDisplayEventEnd: defaultDisplayEventEnd\n        }, getSegMeta(seg, todayRange)))));\n      }\n    }\n\n    return nodes;\n  };\n\n  TableRow.prototype.renderFillSegs = function (segs, fillType) {\n    var isRtl = this.context.isRtl;\n    var todayRange = this.props.todayRange;\n    var framePositions = this.state.framePositions;\n    var nodes = [];\n\n    if (framePositions) {\n      for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n        var seg = segs_1[_i];\n        var leftRightCss = isRtl ? {\n          right: 0,\n          left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol]\n        } : {\n          left: 0,\n          right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol]\n        };\n        nodes.push(createElement(\"div\", {\n          key: buildEventRangeKey(seg.eventRange),\n          className: \"fc-daygrid-bg-harness\",\n          style: leftRightCss\n        }, fillType === 'bg-event' ? createElement(BgEvent, __assign({\n          seg: seg\n        }, getSegMeta(seg, todayRange))) : renderFill(fillType)));\n      }\n    }\n\n    return createElement.apply(void 0, __spreadArray([Fragment, {}], nodes));\n  };\n\n  TableRow.prototype.updateSizing = function (isExternalSizingChange) {\n    var _a = this,\n        props = _a.props,\n        frameElRefs = _a.frameElRefs;\n\n    if (!props.forPrint && props.clientWidth !== null // positioning ready?\n    ) {\n      if (isExternalSizingChange) {\n        var frameEls = props.cells.map(function (cell) {\n          return frameElRefs.currentMap[cell.key];\n        });\n\n        if (frameEls.length) {\n          var originEl = this.rootElRef.current;\n          this.setState({\n            framePositions: new PositionCache(originEl, frameEls, true, // isHorizontal\n            false)\n          });\n        }\n      }\n\n      var oldInstanceHeights = this.state.eventInstanceHeights;\n      var newInstanceHeights = this.queryEventInstanceHeights();\n      var limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;\n      this.setState({\n        // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n        // Essentially, once you compute an element's height, never null-out.\n        // TODO: always display all events, as visibility:hidden?\n        eventInstanceHeights: __assign(__assign({}, oldInstanceHeights), newInstanceHeights),\n        maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null\n      });\n    }\n  };\n\n  TableRow.prototype.queryEventInstanceHeights = function () {\n    var segElMap = this.segHarnessRefs.currentMap;\n    var eventInstanceHeights = {}; // get the max height amongst instance segs\n\n    for (var key in segElMap) {\n      var height = Math.round(segElMap[key].getBoundingClientRect().height);\n      var instanceId = key.split(':')[0]; // deconstruct how renderFgSegs makes the key\n\n      eventInstanceHeights[instanceId] = Math.max(eventInstanceHeights[instanceId] || 0, height);\n    }\n\n    return eventInstanceHeights;\n  };\n\n  TableRow.prototype.computeMaxContentHeight = function () {\n    var firstKey = this.props.cells[0].key;\n    var cellEl = this.cellElRefs.currentMap[firstKey];\n    var fcContainerEl = this.fgElRefs.currentMap[firstKey];\n    return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;\n  };\n\n  TableRow.prototype.getCellEls = function () {\n    var elMap = this.cellElRefs.currentMap;\n    return this.props.cells.map(function (cell) {\n      return elMap[cell.key];\n    });\n  };\n\n  return TableRow;\n}(DateComponent);\n\nTableRow.addStateEquality({\n  eventInstanceHeights: isPropsEqual\n});\n\nfunction buildMirrorPlacements(mirrorSegs, colPlacements) {\n  if (!mirrorSegs.length) {\n    return [];\n  }\n\n  var topsByInstanceId = buildAbsoluteTopHash(colPlacements); // TODO: cache this at first render?\n\n  return mirrorSegs.map(function (seg) {\n    return {\n      seg: seg,\n      isVisible: true,\n      isAbsolute: true,\n      absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n      marginTop: 0\n    };\n  });\n}\n\nfunction buildAbsoluteTopHash(colPlacements) {\n  var topsByInstanceId = {};\n\n  for (var _i = 0, colPlacements_1 = colPlacements; _i < colPlacements_1.length; _i++) {\n    var placements = colPlacements_1[_i];\n\n    for (var _a = 0, placements_1 = placements; _a < placements_1.length; _a++) {\n      var placement = placements_1[_a];\n      topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop;\n    }\n  }\n\n  return topsByInstanceId;\n}\n\nvar Table =\n/** @class */\nfunction (_super) {\n  __extends(Table, _super);\n\n  function Table() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.splitBusinessHourSegs = memoize(splitSegsByRow);\n    _this.splitBgEventSegs = memoize(splitSegsByRow);\n    _this.splitFgEventSegs = memoize(splitSegsByRow);\n    _this.splitDateSelectionSegs = memoize(splitSegsByRow);\n    _this.splitEventDrag = memoize(splitInteractionByRow);\n    _this.splitEventResize = memoize(splitInteractionByRow);\n    _this.rowRefs = new RefMap();\n\n    _this.handleRootEl = function (rootEl) {\n      _this.rootEl = rootEl;\n\n      if (rootEl) {\n        _this.context.registerInteractiveComponent(_this, {\n          el: rootEl,\n          isHitComboAllowed: _this.props.isHitComboAllowed\n        });\n      } else {\n        _this.context.unregisterInteractiveComponent(_this);\n      }\n    };\n\n    return _this;\n  }\n\n  Table.prototype.render = function () {\n    var _this = this;\n\n    var props = this.props;\n    var dateProfile = props.dateProfile,\n        dayMaxEventRows = props.dayMaxEventRows,\n        dayMaxEvents = props.dayMaxEvents,\n        expandRows = props.expandRows;\n    var rowCnt = props.cells.length;\n    var businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);\n    var bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);\n    var fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);\n    var dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);\n    var eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);\n    var eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt);\n    var limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true; // if rows can't expand to fill fixed height, can't do balanced-height event limit\n    // TODO: best place to normalize these options?\n\n    if (limitViaBalanced && !expandRows) {\n      limitViaBalanced = false;\n      dayMaxEventRows = null;\n      dayMaxEvents = null;\n    }\n\n    var classNames = ['fc-daygrid-body', limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced', expandRows ? '' : 'fc-daygrid-body-natural' // will height of one row depend on the others?\n    ];\n    return createElement(\"div\", {\n      className: classNames.join(' '),\n      ref: this.handleRootEl,\n      style: {\n        // these props are important to give this wrapper correct dimensions for interactions\n        // TODO: if we set it here, can we avoid giving to inner tables?\n        width: props.clientWidth,\n        minWidth: props.tableMinWidth\n      }\n    }, createElement(NowTimer, {\n      unit: \"day\"\n    }, function (nowDate, todayRange) {\n      return createElement(Fragment, null, createElement(\"table\", {\n        role: \"presentation\",\n        className: \"fc-scrollgrid-sync-table\",\n        style: {\n          width: props.clientWidth,\n          minWidth: props.tableMinWidth,\n          height: expandRows ? props.clientHeight : ''\n        }\n      }, props.colGroupNode, createElement(\"tbody\", {\n        role: \"presentation\"\n      }, props.cells.map(function (cells, row) {\n        return createElement(TableRow, {\n          ref: _this.rowRefs.createRef(row),\n          key: cells.length ? cells[0].date.toISOString()\n          /* best? or put key on cell? or use diff formatter? */\n          : row // in case there are no cells (like when resource view is loading)\n          ,\n          showDayNumbers: rowCnt > 1,\n          showWeekNumbers: props.showWeekNumbers,\n          todayRange: todayRange,\n          dateProfile: dateProfile,\n          cells: cells,\n          renderIntro: props.renderRowIntro,\n          businessHourSegs: businessHourSegsByRow[row],\n          eventSelection: props.eventSelection,\n          bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay)\n          /* hack */\n          ,\n          fgEventSegs: fgEventSegsByRow[row],\n          dateSelectionSegs: dateSelectionSegsByRow[row],\n          eventDrag: eventDragByRow[row],\n          eventResize: eventResizeByRow[row],\n          dayMaxEvents: dayMaxEvents,\n          dayMaxEventRows: dayMaxEventRows,\n          clientWidth: props.clientWidth,\n          clientHeight: props.clientHeight,\n          forPrint: props.forPrint\n        });\n      }))));\n    }));\n  }; // Hit System\n  // ----------------------------------------------------------------------------------------------------\n\n\n  Table.prototype.prepareHits = function () {\n    this.rowPositions = new PositionCache(this.rootEl, this.rowRefs.collect().map(function (rowObj) {\n      return rowObj.getCellEls()[0];\n    }), // first cell el in each row. TODO: not optimal\n    false, true);\n    this.colPositions = new PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n    true, // horizontal\n    false);\n  };\n\n  Table.prototype.queryHit = function (positionLeft, positionTop) {\n    var _a = this,\n        colPositions = _a.colPositions,\n        rowPositions = _a.rowPositions;\n\n    var col = colPositions.leftToIndex(positionLeft);\n    var row = rowPositions.topToIndex(positionTop);\n\n    if (row != null && col != null) {\n      var cell = this.props.cells[row][col];\n      return {\n        dateProfile: this.props.dateProfile,\n        dateSpan: __assign({\n          range: this.getCellRange(row, col),\n          allDay: true\n        }, cell.extraDateSpan),\n        dayEl: this.getCellEl(row, col),\n        rect: {\n          left: colPositions.lefts[col],\n          right: colPositions.rights[col],\n          top: rowPositions.tops[row],\n          bottom: rowPositions.bottoms[row]\n        },\n        layer: 0\n      };\n    }\n\n    return null;\n  };\n\n  Table.prototype.getCellEl = function (row, col) {\n    return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal\n  };\n\n  Table.prototype.getCellRange = function (row, col) {\n    var start = this.props.cells[row][col].date;\n    var end = addDays(start, 1);\n    return {\n      start: start,\n      end: end\n    };\n  };\n\n  return Table;\n}(DateComponent);\n\nfunction isSegAllDay(seg) {\n  return seg.eventRange.def.allDay;\n}\n\nvar DayTableSlicer =\n/** @class */\nfunction (_super) {\n  __extends(DayTableSlicer, _super);\n\n  function DayTableSlicer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.forceDayIfListItem = true;\n    return _this;\n  }\n\n  DayTableSlicer.prototype.sliceRange = function (dateRange, dayTableModel) {\n    return dayTableModel.sliceRange(dateRange);\n  };\n\n  return DayTableSlicer;\n}(Slicer);\n\nvar DayTable =\n/** @class */\nfunction (_super) {\n  __extends(DayTable, _super);\n\n  function DayTable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.slicer = new DayTableSlicer();\n    _this.tableRef = createRef();\n    return _this;\n  }\n\n  DayTable.prototype.render = function () {\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    return createElement(Table, __assign({\n      ref: this.tableRef\n    }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), {\n      dateProfile: props.dateProfile,\n      cells: props.dayTableModel.cells,\n      colGroupNode: props.colGroupNode,\n      tableMinWidth: props.tableMinWidth,\n      renderRowIntro: props.renderRowIntro,\n      dayMaxEvents: props.dayMaxEvents,\n      dayMaxEventRows: props.dayMaxEventRows,\n      showWeekNumbers: props.showWeekNumbers,\n      expandRows: props.expandRows,\n      headerAlignElRef: props.headerAlignElRef,\n      clientWidth: props.clientWidth,\n      clientHeight: props.clientHeight,\n      forPrint: props.forPrint\n    }));\n  };\n\n  return DayTable;\n}(DateComponent);\n\nvar DayTableView =\n/** @class */\nfunction (_super) {\n  __extends(DayTableView, _super);\n\n  function DayTableView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.buildDayTableModel = memoize(buildDayTableModel);\n    _this.headerRef = createRef();\n    _this.tableRef = createRef();\n    return _this;\n  }\n\n  DayTableView.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.context,\n        options = _a.options,\n        dateProfileGenerator = _a.dateProfileGenerator;\n    var props = this.props;\n    var dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);\n    var headerContent = options.dayHeaders && createElement(DayHeader, {\n      ref: this.headerRef,\n      dateProfile: props.dateProfile,\n      dates: dayTableModel.headerDates,\n      datesRepDistinctDays: dayTableModel.rowCnt === 1\n    });\n\n    var bodyContent = function (contentArg) {\n      return createElement(DayTable, {\n        ref: _this.tableRef,\n        dateProfile: props.dateProfile,\n        dayTableModel: dayTableModel,\n        businessHours: props.businessHours,\n        dateSelection: props.dateSelection,\n        eventStore: props.eventStore,\n        eventUiBases: props.eventUiBases,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize,\n        nextDayThreshold: options.nextDayThreshold,\n        colGroupNode: contentArg.tableColGroupNode,\n        tableMinWidth: contentArg.tableMinWidth,\n        dayMaxEvents: options.dayMaxEvents,\n        dayMaxEventRows: options.dayMaxEventRows,\n        showWeekNumbers: options.weekNumbers,\n        expandRows: !props.isHeightAuto,\n        headerAlignElRef: _this.headerElRef,\n        clientWidth: contentArg.clientWidth,\n        clientHeight: contentArg.clientHeight,\n        forPrint: props.forPrint\n      });\n    };\n\n    return options.dayMinWidth ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth) : this.renderSimpleLayout(headerContent, bodyContent);\n  };\n\n  return DayTableView;\n}(TableView);\n\nfunction buildDayTableModel(dateProfile, dateProfileGenerator) {\n  var daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n  return new DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\n\nvar TableDateProfileGenerator =\n/** @class */\nfunction (_super) {\n  __extends(TableDateProfileGenerator, _super);\n\n  function TableDateProfileGenerator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  } // Computes the date range that will be rendered.\n\n\n  TableDateProfileGenerator.prototype.buildRenderRange = function (currentRange, currentRangeUnit, isRangeAllDay) {\n    var dateEnv = this.props.dateEnv;\n\n    var renderRange = _super.prototype.buildRenderRange.call(this, currentRange, currentRangeUnit, isRangeAllDay);\n\n    var start = renderRange.start;\n    var end = renderRange.end;\n    var endOfWeek; // year and month views should be aligned with weeks. this is already done for week\n\n    if (/^(year|month)$/.test(currentRangeUnit)) {\n      start = dateEnv.startOfWeek(start); // make end-of-week if not already\n\n      endOfWeek = dateEnv.startOfWeek(end);\n\n      if (endOfWeek.valueOf() !== end.valueOf()) {\n        end = addWeeks(endOfWeek, 1);\n      }\n    } // ensure 6 weeks\n\n\n    if (this.props.monthMode && this.props.fixedWeekCount) {\n      var rowCnt = Math.ceil( // could be partial weeks due to hiddenDays\n      diffWeeks(start, end));\n      end = addWeeks(end, 6 - rowCnt);\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  };\n\n  return TableDateProfileGenerator;\n}(DateProfileGenerator);\n\nvar main = createPlugin({\n  initialView: 'dayGridMonth',\n  views: {\n    dayGrid: {\n      component: DayTableView,\n      dateProfileGeneratorClass: TableDateProfileGenerator\n    },\n    dayGridDay: {\n      type: 'dayGrid',\n      duration: {\n        days: 1\n      }\n    },\n    dayGridWeek: {\n      type: 'dayGrid',\n      duration: {\n        weeks: 1\n      }\n    },\n    dayGridMonth: {\n      type: 'dayGrid',\n      duration: {\n        months: 1\n      },\n      monthMode: true,\n      fixedWeekCount: true\n    }\n  }\n});\nexport default main;\nexport { DayTableView as DayGridView, DayTable, DayTableSlicer, Table, TableView, buildDayTableModel };","map":{"version":3,"mappings":"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","names":["__extends","_this","createRef","TableView","headerRowContent","bodyContent","props","context","sections","stickyHeaderDates","getStickyHeaderDates","options","push","type","key","isSticky","chunk","elRef","headerElRef","tableClassName","rowContent","liquid","content","createElement","ViewRoot","viewSpec","rootElRef","classNames","ref","className","concat","join","SimpleScrollGrid","isHeightAuto","forPrint","collapsibleWidth","cols","colCnt","dayMinWidth","ScrollGrid","pluginHooks","scrollGridImpl","Error","stickyFooterScrollbar","getStickyFooterScrollbar","chunks","renderScrollShim","colGroups","span","minWidth","DateComponent","splitSegsByRow","segs","rowCnt","byRow","i","_i","seg","row","splitSegsByFirstCol","byCol","firstCol","splitInteractionByRow","ui","affectedInstances","isEvent","TableCellTop","navLinkAttrs","buildNavLinkAttrs","date","DayCellContent","dateProfile","todayRange","showDayNumber","extraHookProps","defaultContent","renderTopInner","innerElRef","innerContent","forceDayTop","id","dayNumberId","Fragment","BaseComponent","dayNumberText","DEFAULT_TABLE_EVENT_TIME_FORMAT","createFormatter","hour","minute","omitZeroMinute","meridiem","hasListItemDisplay","eventRange","display","def","allDay","lastCol","isStart","isEnd","TableBlockEvent","StandardEvent","__assign","extraClassNames","defaultTimeFormat","defaultDisplayEventEnd","disableResizing","TableListItemEvent","timeFormat","eventTimeFormat","timeText","buildSegTimeText","EventRoot","renderInnerContent","isDragging","isResizing","isDateSelecting","isSelected","isPast","isFuture","isToday","getSegAnchorAttrs","innerProps","style","borderColor","backgroundColor","event","title","memoize","compileSegs","TableCellMoreLink","singlePlacements","allSegs","invisibleSegs","MoreLinkRoot","allDayDate","moreCnt","hiddenSegs","alignmentElRef","alignGridTop","extraDateSpan","popoverContent","isForcedInvisible","eventDrag","eventResize","map","instanceId","instance","visibility","eventSelection","getSegMeta","handleClick","isExpanded","popoverId","createAriaClickAttrs","placement","isVisible","DEFAULT_WEEK_NUM_FORMAT","week","getUniqueDomId","el","setRef","TableCell","state","DayCellRoot","handleRootEl","dayElRef","dayClassNames","rootDataAttrs","isDisabled","role","extraDataAttrs","showWeekNumber","WeekNumberRoot","defaultFormat","weekElRef","weekClassNames","fgContentElRef","fgContent","marginTop","moreMarginTop","bgContent","computeFgSegPlacement","dayMaxEvents","dayMaxEventRows","strictOrder","eventInstanceHeights","maxContentHeight","cells","hierarchy","DayGridSegHierarchy","allowReslicing","maxCoord","hiddenConsumes","maxStackCnt","segInputs","unknownHeightSegs","length","eventHeight","index","thickness","start","end","hiddenEntries","addSegs","segRects","toRects","placeRects","singleColPlacements","multiColPlacements","leftoverMargins","moreCnts","moreMarginTops","isAbsolute","absoluteTop","col","resliceSeg","_b","hiddenEntry","hiddenSpan","allRects","rectsByEachCol","groupRectsByEachCol","rects","currentHeight","currentMarginTop","rect","levelCoord","multiPlacements","_a","isFirstCol","spanStart","spanEnd","origRange","range","slicedRange","intersectRanges","addDays","durationEditable","valueOf","_super","call","entriesByLevel","excludeHidden","entry","forceHidden","buildEntryKey","level","filter","insertion","touchingLevel","touchingLateral","touchingEntry","touchingEntryId","placeholderEntry","intersectSpans","placeholderEntryId","splitEntry","handleInvalidInsertion","SegHierarchy","RefMap","framePositions","TableRow","businessHoursByCol","businessHourSegs","bgEventSegsByCol","bgEventSegs","highlightSegsByCol","getHighlightSegs","mirrorSegsByCol","getMirrorSegs","sortEventSegs","fgEventSegs","eventOrder","eventOrderStrict","renderIntro","cell","normalFgNodes","renderFgSegs","mirrorFgNodes","buildMirrorPlacements","Boolean","cellElRefs","frameElRefs","showDayNumbers","showWeekNumbers","fgElRefs","renderFillSegs","updateSizing","prevProps","prevState","currentProps","isPropsEqual","dateSelectionSegs","segPlacements","isMirror","nodes","left","right","isRtl","lefts","rights","segHarnessRefs","top","fillType","leftRightCss","buildEventRangeKey","BgEvent","renderFill","__spreadArray","isExternalSizingChange","clientWidth","frameEls","currentMap","originEl","current","setState","PositionCache","oldInstanceHeights","newInstanceHeights","queryEventInstanceHeights","limitByContentHeight","computeMaxContentHeight","segElMap","height","Math","round","getBoundingClientRect","split","max","firstKey","cellEl","fcContainerEl","bottom","elMap","addStateEquality","mirrorSegs","colPlacements","topsByInstanceId","buildAbsoluteTopHash","placements","rootEl","registerInteractiveComponent","isHitComboAllowed","unregisterInteractiveComponent","Table","expandRows","businessHourSegsByRow","splitBusinessHourSegs","bgEventSegsByRow","splitBgEventSegs","fgEventSegsByRow","splitFgEventSegs","dateSelectionSegsByRow","splitDateSelectionSegs","eventDragByRow","splitEventDrag","eventResizeByRow","splitEventResize","limitViaBalanced","width","tableMinWidth","NowTimer","unit","nowDate","clientHeight","colGroupNode","rowRefs","toISOString","renderRowIntro","isSegAllDay","rowPositions","collect","rowObj","getCellEls","colPositions","positionLeft","positionTop","leftToIndex","topToIndex","dateSpan","getCellRange","dayEl","getCellEl","tops","bottoms","layer","DayTableSlicer","dateRange","dayTableModel","sliceRange","Slicer","DayTable","tableRef","slicer","sliceProps","nextDayThreshold","headerAlignElRef","buildDayTableModel","DayTableView","dateProfileGenerator","headerContent","dayHeaders","DayHeader","headerRef","dates","headerDates","datesRepDistinctDays","contentArg","businessHours","dateSelection","eventStore","eventUiBases","tableColGroupNode","weekNumbers","renderHScrollLayout","renderSimpleLayout","daySeries","DaySeriesModel","renderRange","DayTableModel","test","currentRangeUnit","TableDateProfileGenerator","currentRange","isRangeAllDay","dateEnv","buildRenderRange","endOfWeek","startOfWeek","addWeeks","monthMode","fixedWeekCount","ceil","diffWeeks","DateProfileGenerator","createPlugin","initialView","views","dayGrid","component","dateProfileGeneratorClass","dayGridDay","duration","days","dayGridWeek","weeks","dayGridMonth","months"],"sources":["/home/jinsonshaju/GIT/cron-tracker/node_modules/@fullcalendar/daygrid/src/TableView.tsx","/home/jinsonshaju/GIT/cron-tracker/node_modules/@fullcalendar/daygrid/src/TableSeg.ts","/home/jinsonshaju/GIT/cron-tracker/node_modules/@fullcalendar/daygrid/src/TableCellTop.tsx","/home/jinsonshaju/GIT/cron-tracker/node_modules/@fullcalendar/daygrid/src/event-rendering.ts","/home/jinsonshaju/GIT/cron-tracker/node_modules/@fullcalendar/daygrid/src/TableBlockEvent.tsx","/home/jinsonshaju/GIT/cron-tracker/node_modules/@fullcalendar/daygrid/src/TableListItemEvent.tsx","/home/jinsonshaju/GIT/cron-tracker/node_modules/@fullcalendar/daygrid/src/TableCellMoreLink.tsx","/home/jinsonshaju/GIT/cron-tracker/node_modules/@fullcalendar/daygrid/src/TableCell.tsx","/home/jinsonshaju/GIT/cron-tracker/node_modules/@fullcalendar/daygrid/src/event-placement.ts","/home/jinsonshaju/GIT/cron-tracker/node_modules/@fullcalendar/daygrid/src/TableRow.tsx","/home/jinsonshaju/GIT/cron-tracker/node_modules/@fullcalendar/daygrid/src/Table.tsx","/home/jinsonshaju/GIT/cron-tracker/node_modules/@fullcalendar/daygrid/src/DayTableSlicer.tsx","/home/jinsonshaju/GIT/cron-tracker/node_modules/@fullcalendar/daygrid/src/DayTable.tsx","/home/jinsonshaju/GIT/cron-tracker/node_modules/@fullcalendar/daygrid/src/DayTableView.tsx","/home/jinsonshaju/GIT/cron-tracker/node_modules/@fullcalendar/daygrid/src/TableDateProfileGenerator.ts","/home/jinsonshaju/GIT/cron-tracker/node_modules/@fullcalendar/daygrid/src/main.ts"],"sourcesContent":["import {\n  VNode, createElement,\n  SimpleScrollGrid,\n  SimpleScrollGridSection,\n  ChunkContentCallbackArgs,\n  createRef,\n  ScrollGridSectionConfig,\n  ViewRoot,\n  DateComponent,\n  ViewProps,\n  RefObject,\n  renderScrollShim,\n  getStickyHeaderDates,\n  getStickyFooterScrollbar,\n  ChunkConfigRowContent,\n  Dictionary,\n} from '@fullcalendar/common'\n\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\n\nexport abstract class TableView<State=Dictionary> extends DateComponent<ViewProps, State> {\n  protected headerElRef: RefObject<HTMLTableCellElement> = createRef<HTMLTableCellElement>()\n\n  renderSimpleLayout(\n    headerRowContent: ChunkConfigRowContent,\n    bodyContent: (contentArg: ChunkContentCallbackArgs) => VNode,\n  ) {\n    let { props, context } = this\n    let sections: SimpleScrollGridSection[] = []\n    let stickyHeaderDates = getStickyHeaderDates(context.options)\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunk: {\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent,\n        },\n      })\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunk: { content: bodyContent },\n    })\n\n    return (\n      <ViewRoot viewSpec={context.viewSpec}>\n        {(rootElRef, classNames) => (\n          <div ref={rootElRef} className={['fc-daygrid'].concat(classNames).join(' ')}>\n            <SimpleScrollGrid\n              liquid={!props.isHeightAuto && !props.forPrint}\n              collapsibleWidth={props.forPrint}\n              cols={[] /* TODO: make optional? */}\n              sections={sections}\n            />\n          </div>\n        )}\n      </ViewRoot>\n    )\n  }\n\n  renderHScrollLayout(\n    headerRowContent: ChunkConfigRowContent,\n    bodyContent: (contentArg: ChunkContentCallbackArgs) => VNode,\n    colCnt: number,\n    dayMinWidth: number,\n  ) {\n    let ScrollGrid = this.context.pluginHooks.scrollGridImpl\n\n    if (!ScrollGrid) {\n      throw new Error('No ScrollGrid implementation')\n    }\n\n    let { props, context } = this\n    let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options)\n    let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options)\n    let sections: ScrollGridSectionConfig[] = []\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunks: [{\n          key: 'main',\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent,\n        }],\n      })\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunks: [{\n        key: 'main',\n        content: bodyContent,\n      }],\n    })\n\n    if (stickyFooterScrollbar) {\n      sections.push({\n        type: 'footer',\n        key: 'footer',\n        isSticky: true,\n        chunks: [{\n          key: 'main',\n          content: renderScrollShim,\n        }],\n      })\n    }\n\n    return (\n      <ViewRoot viewSpec={context.viewSpec}>\n        {(rootElRef, classNames) => (\n          <div ref={rootElRef} className={['fc-daygrid'].concat(classNames).join(' ')}>\n            <ScrollGrid\n              liquid={!props.isHeightAuto && !props.forPrint}\n              collapsibleWidth={props.forPrint}\n              colGroups={[{ cols: [{ span: colCnt, minWidth: dayMinWidth }] }]}\n              sections={sections}\n            />\n          </div>\n        )}\n      </ViewRoot>\n    )\n  }\n}\n","import { EventSegUiInteractionState, Seg } from '@fullcalendar/common'\n\n// this is a DATA STRUCTURE, not a component\n\nexport interface TableSeg extends Seg {\n  row: number\n  firstCol: number\n  lastCol: number\n}\n\nexport function splitSegsByRow(segs: TableSeg[], rowCnt: number) {\n  let byRow: TableSeg[][] = []\n\n  for (let i = 0; i < rowCnt; i += 1) {\n    byRow[i] = []\n  }\n\n  for (let seg of segs) {\n    byRow[seg.row].push(seg)\n  }\n\n  return byRow\n}\n\nexport function splitSegsByFirstCol(segs: TableSeg[], colCnt: number) {\n  let byCol: TableSeg[][] = []\n\n  for (let i = 0; i < colCnt; i += 1) {\n    byCol[i] = []\n  }\n\n  for (let seg of segs) {\n    byCol[seg.firstCol].push(seg)\n  }\n\n  return byCol\n}\n\nexport function splitInteractionByRow(ui: EventSegUiInteractionState | null, rowCnt: number) {\n  let byRow: EventSegUiInteractionState[] = []\n\n  if (!ui) {\n    for (let i = 0; i < rowCnt; i += 1) {\n      byRow[i] = null\n    }\n  } else {\n    for (let i = 0; i < rowCnt; i += 1) {\n      byRow[i] = {\n        affectedInstances: ui.affectedInstances,\n        isEvent: ui.isEvent,\n        segs: [],\n      }\n    }\n\n    for (let seg of ui.segs) {\n      byRow[seg.row].segs.push(seg)\n    }\n  }\n\n  return byRow\n}\n","import {\n  createElement,\n  DateMarker,\n  DateRange,\n  DayCellContentArg,\n  DayCellContent,\n  BaseComponent,\n  DateProfile,\n  Dictionary,\n  Fragment,\n  buildNavLinkAttrs,\n} from '@fullcalendar/common'\n\ninterface TableCellTopProps {\n  date: DateMarker\n  dateProfile: DateProfile\n  showDayNumber: boolean\n  dayNumberId: string\n  forceDayTop: boolean // hack to force-create an element with height (created by a nbsp)\n  todayRange: DateRange\n  extraHookProps?: Dictionary\n}\n\nexport class TableCellTop extends BaseComponent<TableCellTopProps> {\n  render() {\n    let { props } = this\n    let navLinkAttrs = buildNavLinkAttrs(this.context, props.date)\n\n    return (\n      <DayCellContent\n        date={props.date}\n        dateProfile={props.dateProfile}\n        todayRange={props.todayRange}\n        showDayNumber={props.showDayNumber}\n        extraHookProps={props.extraHookProps}\n        defaultContent={renderTopInner}\n      >\n        {(innerElRef, innerContent) => (\n          (innerContent || props.forceDayTop) && (\n            <div className=\"fc-daygrid-day-top\" ref={innerElRef}>\n              <a\n                id={props.dayNumberId}\n                className=\"fc-daygrid-day-number\"\n                {...navLinkAttrs}\n              >\n                {innerContent || <Fragment>&nbsp;</Fragment>}\n              </a>\n            </div>\n          )\n        )}\n      </DayCellContent>\n    )\n  }\n}\n\nfunction renderTopInner(props: DayCellContentArg) {\n  return props.dayNumberText\n}\n","import { createFormatter } from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\n\nexport const DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'narrow',\n})\n\nexport function hasListItemDisplay(seg: TableSeg) {\n  let { display } = seg.eventRange.ui\n\n  return display === 'list-item' || (\n    display === 'auto' &&\n    !seg.eventRange.def.allDay &&\n    seg.firstCol === seg.lastCol && // can't be multi-day\n    seg.isStart && // \"\n    seg.isEnd // \"\n  )\n}\n","import { createElement, StandardEvent, BaseComponent, MinimalEventProps } from '@fullcalendar/common'\nimport { DEFAULT_TABLE_EVENT_TIME_FORMAT } from './event-rendering'\n\nexport interface TableBlockEventProps extends MinimalEventProps {\n  defaultDisplayEventEnd: boolean\n}\n\nexport class TableBlockEvent extends BaseComponent<TableBlockEventProps> {\n  render() {\n    let { props } = this\n\n    return (\n      <StandardEvent\n        {...props}\n        extraClassNames={['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event']}\n        defaultTimeFormat={DEFAULT_TABLE_EVENT_TIME_FORMAT}\n        defaultDisplayEventEnd={props.defaultDisplayEventEnd}\n        disableResizing={!props.seg.eventRange.def.allDay}\n      />\n    )\n  }\n}\n","import {\n  createElement,\n  BaseComponent,\n  Seg,\n  EventRoot,\n  buildSegTimeText,\n  EventContentArg,\n  Fragment,\n  getSegAnchorAttrs,\n} from '@fullcalendar/common'\nimport { DEFAULT_TABLE_EVENT_TIME_FORMAT } from './event-rendering'\n\nexport interface DotTableEventProps {\n  seg: Seg\n  isDragging: boolean\n  isSelected: boolean\n  isPast: boolean\n  isFuture: boolean\n  isToday: boolean\n  defaultDisplayEventEnd: boolean\n}\n\nexport class TableListItemEvent extends BaseComponent<DotTableEventProps> {\n  render() {\n    let { props, context } = this\n    let timeFormat = context.options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT\n    let timeText = buildSegTimeText(\n      props.seg,\n      timeFormat,\n      context,\n      true,\n      props.defaultDisplayEventEnd,\n    )\n\n    return (\n      <EventRoot\n        seg={props.seg}\n        timeText={timeText}\n        defaultContent={renderInnerContent}\n        isDragging={props.isDragging}\n        isResizing={false}\n        isDateSelecting={false}\n        isSelected={props.isSelected}\n        isPast={props.isPast}\n        isFuture={props.isFuture}\n        isToday={props.isToday}\n      >\n        {(rootElRef, classNames, innerElRef, innerContent) => ( // we don't use styles!\n          <a\n            className={['fc-daygrid-event', 'fc-daygrid-dot-event'].concat(classNames).join(' ')}\n            ref={rootElRef}\n            {...getSegAnchorAttrs(props.seg, context)}\n          >\n            {innerContent}\n          </a>\n        )}\n      </EventRoot>\n    )\n  }\n}\n\nfunction renderInnerContent(innerProps: EventContentArg) {\n  return (\n    <Fragment>\n      <div\n        className=\"fc-daygrid-event-dot\"\n        style={{ borderColor: innerProps.borderColor || innerProps.backgroundColor }}\n      />\n      {innerProps.timeText && (\n        <div className=\"fc-event-time\">{innerProps.timeText}</div>\n      )}\n      <div className=\"fc-event-title\">\n        {innerProps.event.title || <Fragment>&nbsp;</Fragment>}\n      </div>\n    </Fragment>\n  )\n}\n","import {\n  createElement,\n  MoreLinkRoot,\n  RefObject,\n  BaseComponent,\n  memoize,\n  DateMarker,\n  Dictionary,\n  DateProfile,\n  DateRange,\n  EventSegUiInteractionState,\n  getSegMeta,\n  Fragment,\n  createAriaClickAttrs,\n} from '@fullcalendar/common'\nimport { TableSegPlacement } from './event-placement'\nimport { hasListItemDisplay } from './event-rendering'\nimport { TableBlockEvent } from './TableBlockEvent'\nimport { TableListItemEvent } from './TableListItemEvent'\nimport { TableSeg } from './TableSeg'\n\nexport interface TableCellMoreLinkProps {\n  allDayDate: DateMarker\n  singlePlacements: TableSegPlacement[]\n  moreCnt: number\n  alignmentElRef: RefObject<HTMLElement> // for popover\n  alignGridTop: boolean // for popover\n  extraDateSpan?: Dictionary\n  dateProfile: DateProfile\n  todayRange: DateRange\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n}\n\nexport class TableCellMoreLink extends BaseComponent<TableCellMoreLinkProps> {\n  compileSegs = memoize(compileSegs)\n\n  render() {\n    let { props } = this\n    let { allSegs, invisibleSegs } = this.compileSegs(props.singlePlacements)\n\n    return (\n      <MoreLinkRoot\n        dateProfile={props.dateProfile}\n        todayRange={props.todayRange}\n        allDayDate={props.allDayDate}\n        moreCnt={props.moreCnt}\n        allSegs={allSegs}\n        hiddenSegs={invisibleSegs}\n        alignmentElRef={props.alignmentElRef}\n        alignGridTop={props.alignGridTop}\n        extraDateSpan={props.extraDateSpan}\n        popoverContent={() => {\n          let isForcedInvisible =\n            (props.eventDrag ? props.eventDrag.affectedInstances : null) ||\n            (props.eventResize ? props.eventResize.affectedInstances : null) ||\n            {}\n          return (\n            <Fragment>\n              {allSegs.map((seg) => {\n                let instanceId = seg.eventRange.instance.instanceId\n                return (\n                  <div\n                    className=\"fc-daygrid-event-harness\"\n                    key={instanceId}\n                    style={{\n                      visibility: isForcedInvisible[instanceId] ? 'hidden' : ('' as any),\n                    }}\n                  >\n                    {hasListItemDisplay(seg) ? (\n                      <TableListItemEvent\n                        seg={seg}\n                        isDragging={false}\n                        isSelected={instanceId === props.eventSelection}\n                        defaultDisplayEventEnd={false}\n                        {...getSegMeta(seg, props.todayRange)}\n                      />\n                    ) : (\n                      <TableBlockEvent\n                        seg={seg}\n                        isDragging={false}\n                        isResizing={false}\n                        isDateSelecting={false}\n                        isSelected={instanceId === props.eventSelection}\n                        defaultDisplayEventEnd={false}\n                        {...getSegMeta(seg, props.todayRange)}\n                      />\n                    )}\n                  </div>\n                )\n              })}\n            </Fragment>\n          )\n        }}\n      >\n        {(rootElRef, classNames, innerElRef, innerContent, handleClick, title, isExpanded, popoverId) => (\n          <a\n            ref={rootElRef}\n            className={['fc-daygrid-more-link'].concat(classNames).join(' ')}\n            title={title}\n            aria-expanded={isExpanded}\n            aria-controls={popoverId}\n            {...createAriaClickAttrs(handleClick)}\n          >\n            {innerContent}\n          </a>\n        )}\n      </MoreLinkRoot>\n    )\n  }\n}\n\nfunction compileSegs(singlePlacements: TableSegPlacement[]): {\n  allSegs: TableSeg[]\n  invisibleSegs: TableSeg[]\n} {\n  let allSegs: TableSeg[] = []\n  let invisibleSegs: TableSeg[] = []\n\n  for (let placement of singlePlacements) {\n    allSegs.push(placement.seg)\n\n    if (!placement.isVisible) {\n      invisibleSegs.push(placement.seg)\n    }\n  }\n\n  return { allSegs, invisibleSegs }\n}\n","import {\n  Ref,\n  ComponentChildren,\n  createElement,\n  DateMarker,\n  DateComponent,\n  DateRange,\n  buildNavLinkAttrs,\n  WeekNumberRoot,\n  DayCellRoot,\n  DateProfile,\n  setRef,\n  createFormatter,\n  Dictionary,\n  createRef,\n  EventSegUiInteractionState,\n  getUniqueDomId,\n} from '@fullcalendar/common'\nimport { TableCellTop } from './TableCellTop'\nimport { TableCellMoreLink } from './TableCellMoreLink'\nimport { TableSegPlacement } from './event-placement'\n\nexport interface TableCellProps {\n  date: DateMarker\n  dateProfile: DateProfile\n  extraHookProps?: Dictionary\n  extraDataAttrs?: Dictionary\n  extraClassNames?: string[]\n  extraDateSpan?: Dictionary\n  elRef?: Ref<HTMLTableCellElement>\n  innerElRef?: Ref<HTMLDivElement>\n  bgContent: ComponentChildren\n  fgContentElRef?: Ref<HTMLDivElement> // TODO: rename!!! classname confusion. is the \"event\" div\n  fgContent: ComponentChildren\n  moreCnt: number\n  moreMarginTop: number\n  showDayNumber: boolean\n  showWeekNumber: boolean\n  forceDayTop: boolean\n  todayRange: DateRange\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  singlePlacements: TableSegPlacement[]\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'narrow' })\n\nexport class TableCell extends DateComponent<TableCellProps> {\n  private rootElRef = createRef<HTMLElement>()\n  state = {\n    dayNumberId: getUniqueDomId(),\n  }\n\n  render() {\n    let { context, props, state, rootElRef } = this\n    let { date, dateProfile } = props\n    let navLinkAttrs = buildNavLinkAttrs(context, date, 'week')\n\n    return (\n      <DayCellRoot\n        date={date}\n        dateProfile={dateProfile}\n        todayRange={props.todayRange}\n        showDayNumber={props.showDayNumber}\n        extraHookProps={props.extraHookProps}\n        elRef={this.handleRootEl}\n      >\n        {(dayElRef, dayClassNames, rootDataAttrs, isDisabled) => (\n          <td\n            ref={dayElRef}\n            role=\"gridcell\"\n            className={['fc-daygrid-day'].concat(dayClassNames, props.extraClassNames || []).join(' ')}\n            {...rootDataAttrs}\n            {...props.extraDataAttrs}\n            {...(props.showDayNumber ? { 'aria-labelledby': state.dayNumberId } : {})}\n          >\n            <div className=\"fc-daygrid-day-frame fc-scrollgrid-sync-inner\" ref={props.innerElRef /* different from hook system! RENAME */}>\n              {props.showWeekNumber && (\n                <WeekNumberRoot date={date} defaultFormat={DEFAULT_WEEK_NUM_FORMAT}>\n                  {(weekElRef, weekClassNames, innerElRef, innerContent) => (\n                    <a\n                      ref={weekElRef}\n                      className={['fc-daygrid-week-number'].concat(weekClassNames).join(' ')}\n                      {...navLinkAttrs}\n                    >\n                      {innerContent}\n                    </a>\n                  )}\n                </WeekNumberRoot>\n              )}\n              {!isDisabled && (\n                <TableCellTop\n                  date={date}\n                  dateProfile={dateProfile}\n                  showDayNumber={props.showDayNumber}\n                  dayNumberId={state.dayNumberId}\n                  forceDayTop={props.forceDayTop}\n                  todayRange={props.todayRange}\n                  extraHookProps={props.extraHookProps}\n                />\n              )}\n              <div\n                className=\"fc-daygrid-day-events\"\n                ref={props.fgContentElRef}\n              >\n                {props.fgContent}\n                <div className=\"fc-daygrid-day-bottom\" style={{ marginTop: props.moreMarginTop }}>\n                  <TableCellMoreLink\n                    allDayDate={date}\n                    singlePlacements={props.singlePlacements}\n                    moreCnt={props.moreCnt}\n                    alignmentElRef={rootElRef}\n                    alignGridTop={!props.showDayNumber}\n                    extraDateSpan={props.extraDateSpan}\n                    dateProfile={props.dateProfile}\n                    eventSelection={props.eventSelection}\n                    eventDrag={props.eventDrag}\n                    eventResize={props.eventResize}\n                    todayRange={props.todayRange}\n                  />\n                </div>\n              </div>\n              <div className=\"fc-daygrid-day-bg\">\n                {props.bgContent}\n              </div>\n            </div>\n          </td>\n        )}\n      </DayCellRoot>\n    )\n  }\n\n  handleRootEl = (el: HTMLElement) => {\n    setRef(this.rootElRef, el)\n    setRef(this.props.elRef, el)\n  }\n}\n","import {\n  SegHierarchy,\n  SegRect,\n  SegEntry,\n  SegInsertion,\n  buildEntryKey,\n  EventRenderRange,\n  intersectRanges,\n  addDays,\n  DayTableCell,\n  intersectSpans,\n} from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\n\nexport interface TableSegPlacement {\n  seg: TableSeg\n  isVisible: boolean\n  isAbsolute: boolean\n  absoluteTop: number // populated regardless of isAbsolute\n  marginTop: number\n}\n\nexport function computeFgSegPlacement(\n  segs: TableSeg[], // assumed already sorted\n  dayMaxEvents: boolean | number,\n  dayMaxEventRows: boolean | number,\n  strictOrder: boolean,\n  eventInstanceHeights: { [instanceId: string]: number },\n  maxContentHeight: number | null,\n  cells: DayTableCell[],\n) {\n  let hierarchy = new DayGridSegHierarchy()\n  hierarchy.allowReslicing = true\n  hierarchy.strictOrder = strictOrder\n\n  if (dayMaxEvents === true || dayMaxEventRows === true) {\n    hierarchy.maxCoord = maxContentHeight\n    hierarchy.hiddenConsumes = true\n  } else if (typeof dayMaxEvents === 'number') {\n    hierarchy.maxStackCnt = dayMaxEvents\n  } else if (typeof dayMaxEventRows === 'number') {\n    hierarchy.maxStackCnt = dayMaxEventRows\n    hierarchy.hiddenConsumes = true\n  }\n\n  // create segInputs only for segs with known heights\n  let segInputs: SegEntry[] = []\n  let unknownHeightSegs: TableSeg[] = []\n  for (let i = 0; i < segs.length; i += 1) {\n    let seg = segs[i]\n    let { instanceId } = seg.eventRange.instance\n    let eventHeight = eventInstanceHeights[instanceId]\n\n    if (eventHeight != null) {\n      segInputs.push({\n        index: i,\n        thickness: eventHeight,\n        span: {\n          start: seg.firstCol,\n          end: seg.lastCol + 1,\n        },\n      })\n    } else {\n      unknownHeightSegs.push(seg)\n    }\n  }\n\n  let hiddenEntries = hierarchy.addSegs(segInputs)\n  let segRects = hierarchy.toRects()\n  let { singleColPlacements, multiColPlacements, leftoverMargins } = placeRects(segRects, segs, cells)\n\n  let moreCnts: number[] = []\n  let moreMarginTops: number[] = []\n\n  // add segs with unknown heights\n  for (let seg of unknownHeightSegs) {\n    multiColPlacements[seg.firstCol].push({\n      seg,\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0,\n    })\n\n    for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n      singleColPlacements[col].push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0,\n      })\n    }\n  }\n\n  // add the hidden entries\n  for (let col = 0; col < cells.length; col += 1) {\n    moreCnts.push(0)\n  }\n  for (let hiddenEntry of hiddenEntries) {\n    let seg = segs[hiddenEntry.index]\n    let hiddenSpan = hiddenEntry.span\n\n    multiColPlacements[hiddenSpan.start].push({\n      seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0,\n    })\n\n    for (let col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {\n      moreCnts[col] += 1\n      singleColPlacements[col].push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0,\n      })\n    }\n  }\n\n  // deal with leftover margins\n  for (let col = 0; col < cells.length; col += 1) {\n    moreMarginTops.push(leftoverMargins[col])\n  }\n\n  return { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops }\n}\n\n// rects ordered by top coord, then left\nfunction placeRects(allRects: SegRect[], segs: TableSeg[], cells: DayTableCell[]) {\n  let rectsByEachCol = groupRectsByEachCol(allRects, cells.length)\n  let singleColPlacements: TableSegPlacement[][] = []\n  let multiColPlacements: TableSegPlacement[][] = []\n  let leftoverMargins: number[] = []\n\n  for (let col = 0; col < cells.length; col += 1) {\n    let rects = rectsByEachCol[col]\n\n    // compute all static segs in singlePlacements\n    let singlePlacements: TableSegPlacement[] = []\n    let currentHeight = 0\n    let currentMarginTop = 0\n    for (let rect of rects) {\n      let seg = segs[rect.index]\n      singlePlacements.push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: true,\n        isAbsolute: false,\n        absoluteTop: rect.levelCoord,\n        marginTop: rect.levelCoord - currentHeight,\n      })\n      currentHeight = rect.levelCoord + rect.thickness\n    }\n\n    // compute mixed static/absolute segs in multiPlacements\n    let multiPlacements: TableSegPlacement[] = []\n    currentHeight = 0\n    currentMarginTop = 0\n    for (let rect of rects) {\n      let seg = segs[rect.index]\n      let isAbsolute = rect.span.end - rect.span.start > 1 // multi-column?\n      let isFirstCol = rect.span.start === col\n\n      currentMarginTop += rect.levelCoord - currentHeight // amount of space since bottom of previous seg\n      currentHeight = rect.levelCoord + rect.thickness // height will now be bottom of current seg\n\n      if (isAbsolute) {\n        currentMarginTop += rect.thickness\n        if (isFirstCol) {\n          multiPlacements.push({\n            seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n            isVisible: true,\n            isAbsolute: true,\n            absoluteTop: rect.levelCoord,\n            marginTop: 0,\n          })\n        }\n      } else if (isFirstCol) {\n        multiPlacements.push({\n          seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n          isVisible: true,\n          isAbsolute: false,\n          absoluteTop: rect.levelCoord,\n          marginTop: currentMarginTop, // claim the margin\n        })\n        currentMarginTop = 0\n      }\n    }\n\n    singleColPlacements.push(singlePlacements)\n    multiColPlacements.push(multiPlacements)\n    leftoverMargins.push(currentMarginTop)\n  }\n\n  return { singleColPlacements, multiColPlacements, leftoverMargins }\n}\n\nfunction groupRectsByEachCol(rects: SegRect[], colCnt: number): SegRect[][] {\n  let rectsByEachCol: SegRect[][] = []\n\n  for (let col = 0; col < colCnt; col += 1) {\n    rectsByEachCol.push([])\n  }\n\n  for (let rect of rects) {\n    for (let col = rect.span.start; col < rect.span.end; col += 1) {\n      rectsByEachCol[col].push(rect)\n    }\n  }\n\n  return rectsByEachCol\n}\n\nfunction resliceSeg(seg: TableSeg, spanStart: number, spanEnd: number, cells: DayTableCell[]): TableSeg {\n  if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n    return seg\n  }\n\n  let eventRange = seg.eventRange\n  let origRange = eventRange.range\n  let slicedRange = intersectRanges(origRange, {\n    start: cells[spanStart].date,\n    end: addDays(cells[spanEnd - 1].date, 1),\n  })\n\n  return {\n    ...seg,\n    firstCol: spanStart,\n    lastCol: spanEnd - 1,\n    eventRange: {\n      def: eventRange.def,\n      ui: { ...eventRange.ui, durationEditable: false }, // hack to disable resizing\n      instance: eventRange.instance,\n      range: slicedRange,\n    } as EventRenderRange,\n    isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(),\n    isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf(),\n  }\n}\n\nclass DayGridSegHierarchy extends SegHierarchy {\n  // config\n  hiddenConsumes: boolean = false\n\n  // allows us to keep hidden entries in the hierarchy so they take up space\n  forceHidden: { [entryId: string]: true } = {}\n\n  addSegs(segInputs: SegEntry[]): SegEntry[] {\n    const hiddenSegs = super.addSegs(segInputs)\n    const { entriesByLevel } = this\n    const excludeHidden = (entry: SegEntry) => !this.forceHidden[buildEntryKey(entry)]\n\n    // remove the forced-hidden segs\n    for (let level = 0; level < entriesByLevel.length; level += 1) {\n      entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden)\n    }\n\n    return hiddenSegs\n  }\n\n  handleInvalidInsertion(insertion: SegInsertion, entry: SegEntry, hiddenEntries: SegEntry[]) {\n    const { entriesByLevel, forceHidden } = this\n    const { touchingEntry, touchingLevel, touchingLateral } = insertion\n\n    if (this.hiddenConsumes && touchingEntry) {\n      const touchingEntryId = buildEntryKey(touchingEntry)\n      // if not already hidden\n      if (!forceHidden[touchingEntryId]) {\n        if (this.allowReslicing) {\n          const placeholderEntry: SegEntry = { // placeholder of the \"more\" link\n            ...touchingEntry,\n            span: intersectSpans(touchingEntry.span, entry.span),\n          }\n          const placeholderEntryId = buildEntryKey(placeholderEntry)\n          forceHidden[placeholderEntryId] = true\n          entriesByLevel[touchingLevel][touchingLateral] = placeholderEntry // replace touchingEntry with our placeholder\n          this.splitEntry(touchingEntry, entry, hiddenEntries) // split up the touchingEntry, reinsert it\n        } else {\n          forceHidden[touchingEntryId] = true\n          hiddenEntries.push(touchingEntry)\n        }\n      }\n    }\n\n    return super.handleInvalidInsertion(insertion, entry, hiddenEntries)\n  }\n}\n","import {\n  EventSegUiInteractionState,\n  VNode,\n  DateComponent,\n  createElement,\n  PositionCache,\n  RefMap,\n  CssDimValue,\n  DateRange,\n  getSegMeta,\n  DateProfile,\n  Fragment,\n  BgEvent,\n  renderFill,\n  isPropsEqual,\n  createRef,\n  buildEventRangeKey,\n  sortEventSegs,\n  DayTableCell,\n} from '@fullcalendar/common'\nimport { TableSeg, splitSegsByFirstCol } from './TableSeg'\nimport { TableCell } from './TableCell'\nimport { TableListItemEvent } from './TableListItemEvent'\nimport { TableBlockEvent } from './TableBlockEvent'\nimport { computeFgSegPlacement, TableSegPlacement } from './event-placement'\nimport { hasListItemDisplay } from './event-rendering'\n\n// TODO: attach to window resize?\n\nexport interface TableRowProps {\n  cells: DayTableCell[]\n  renderIntro?: () => VNode\n  businessHourSegs: TableSeg[]\n  bgEventSegs: TableSeg[]\n  fgEventSegs: TableSeg[]\n  dateSelectionSegs: TableSeg[]\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  dayMaxEvents: boolean | number\n  dayMaxEventRows: boolean | number\n  clientWidth: number | null\n  clientHeight: number | null // simply for causing an updateSize, for when liquid height\n  dateProfile: DateProfile\n  todayRange: DateRange\n  showDayNumbers: boolean\n  showWeekNumbers: boolean\n  forPrint: boolean\n}\n\ninterface TableRowState {\n  framePositions: PositionCache\n  maxContentHeight: number | null\n  eventInstanceHeights: { [instanceId: string]: number } // integers\n}\n\nexport class TableRow extends DateComponent<TableRowProps, TableRowState> {\n  private cellElRefs = new RefMap<HTMLTableCellElement>() // the <td>\n  private frameElRefs = new RefMap<HTMLElement>() // the fc-daygrid-day-frame\n  private fgElRefs = new RefMap<HTMLDivElement>() // the fc-daygrid-day-events\n  private segHarnessRefs = new RefMap<HTMLDivElement>() // indexed by \"instanceId:firstCol\"\n  private rootElRef = createRef<HTMLTableRowElement>()\n\n  state: TableRowState = {\n    framePositions: null,\n    maxContentHeight: null,\n    eventInstanceHeights: {},\n  }\n\n  render() {\n    let { props, state, context } = this\n    let { options } = context\n    let colCnt = props.cells.length\n\n    let businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt)\n    let bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt)\n    let highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt)\n    let mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt)\n\n    let { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops } = computeFgSegPlacement(\n      sortEventSegs(props.fgEventSegs, options.eventOrder) as TableSeg[],\n      props.dayMaxEvents,\n      props.dayMaxEventRows,\n      options.eventOrderStrict,\n      state.eventInstanceHeights,\n      state.maxContentHeight,\n      props.cells,\n    )\n\n    let isForcedInvisible = // TODO: messy way to compute this\n      (props.eventDrag && props.eventDrag.affectedInstances) ||\n      (props.eventResize && props.eventResize.affectedInstances) ||\n      {}\n\n    return (\n      <tr ref={this.rootElRef} role=\"row\">\n        {props.renderIntro && props.renderIntro()}\n        {props.cells.map((cell, col) => {\n          let normalFgNodes = this.renderFgSegs(\n            col,\n            props.forPrint ? singleColPlacements[col] : multiColPlacements[col],\n            props.todayRange,\n            isForcedInvisible,\n          )\n\n          let mirrorFgNodes = this.renderFgSegs(\n            col,\n            buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements),\n            props.todayRange,\n            {},\n            Boolean(props.eventDrag),\n            Boolean(props.eventResize),\n            false, // date-selecting (because mirror is never drawn for date selection)\n          )\n\n          return (\n            <TableCell\n              key={cell.key}\n              elRef={this.cellElRefs.createRef(cell.key)}\n              innerElRef={this.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */}\n              dateProfile={props.dateProfile}\n              date={cell.date}\n              showDayNumber={props.showDayNumbers}\n              showWeekNumber={props.showWeekNumbers && col === 0}\n              forceDayTop={props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */}\n              todayRange={props.todayRange}\n              eventSelection={props.eventSelection}\n              eventDrag={props.eventDrag}\n              eventResize={props.eventResize}\n              extraHookProps={cell.extraHookProps}\n              extraDataAttrs={cell.extraDataAttrs}\n              extraClassNames={cell.extraClassNames}\n              extraDateSpan={cell.extraDateSpan}\n              moreCnt={moreCnts[col]}\n              moreMarginTop={moreMarginTops[col]}\n              singlePlacements={singleColPlacements[col]}\n              fgContentElRef={this.fgElRefs.createRef(cell.key)}\n              fgContent={( // Fragment scopes the keys\n                <Fragment>\n                  <Fragment>{normalFgNodes}</Fragment>\n                  <Fragment>{mirrorFgNodes}</Fragment>\n                </Fragment>\n              )}\n              bgContent={( // Fragment scopes the keys\n                <Fragment>\n                  {this.renderFillSegs(highlightSegsByCol[col], 'highlight')}\n                  {this.renderFillSegs(businessHoursByCol[col], 'non-business')}\n                  {this.renderFillSegs(bgEventSegsByCol[col], 'bg-event')}\n                </Fragment>\n              )}\n            />\n          )\n        })}\n      </tr>\n    )\n  }\n\n  componentDidMount() {\n    this.updateSizing(true)\n  }\n\n  componentDidUpdate(prevProps: TableRowProps, prevState: TableRowState) {\n    let currentProps = this.props\n\n    this.updateSizing(\n      !isPropsEqual(prevProps, currentProps),\n    )\n  }\n\n  getHighlightSegs(): TableSeg[] {\n    let { props } = this\n\n    if (props.eventDrag && props.eventDrag.segs.length) { // messy check\n      return props.eventDrag.segs as TableSeg[]\n    }\n\n    if (props.eventResize && props.eventResize.segs.length) { // messy check\n      return props.eventResize.segs as TableSeg[]\n    }\n\n    return props.dateSelectionSegs\n  }\n\n  getMirrorSegs(): TableSeg[] {\n    let { props } = this\n\n    if (props.eventResize && props.eventResize.segs.length) { // messy check\n      return props.eventResize.segs as TableSeg[]\n    }\n\n    return []\n  }\n\n  renderFgSegs(\n    col: number,\n    segPlacements: TableSegPlacement[],\n    todayRange: DateRange,\n    isForcedInvisible: { [instanceId: string]: any },\n    isDragging?: boolean,\n    isResizing?: boolean,\n    isDateSelecting?: boolean,\n  ): VNode[] {\n    let { context } = this\n    let { eventSelection } = this.props\n    let { framePositions } = this.state\n    let defaultDisplayEventEnd = this.props.cells.length === 1 // colCnt === 1\n    let isMirror = isDragging || isResizing || isDateSelecting\n    let nodes: VNode[] = []\n\n    if (framePositions) {\n      for (let placement of segPlacements) {\n        let { seg } = placement\n        let { instanceId } = seg.eventRange.instance\n        let key = instanceId + ':' + col\n        let isVisible = placement.isVisible && !isForcedInvisible[instanceId]\n        let isAbsolute = placement.isAbsolute\n        let left: CssDimValue = ''\n        let right: CssDimValue = ''\n\n        if (isAbsolute) {\n          if (context.isRtl) {\n            right = 0\n            left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol]\n          } else {\n            left = 0\n            right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol]\n          }\n        }\n\n        /*\n        known bug: events that are force to be list-item but span multiple days still take up space in later columns\n        todo: in print view, for multi-day events, don't display title within non-start/end segs\n        */\n        nodes.push(\n          <div\n            className={'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : '')}\n            key={key}\n            ref={isMirror ? null : this.segHarnessRefs.createRef(key)}\n            style={{\n              visibility: isVisible ? ('' as any) : 'hidden',\n              marginTop: isAbsolute ? '' : placement.marginTop,\n              top: isAbsolute ? placement.absoluteTop : '',\n              left,\n              right,\n            }}\n          >\n            {hasListItemDisplay(seg) ? (\n              <TableListItemEvent\n                seg={seg}\n                isDragging={isDragging}\n                isSelected={instanceId === eventSelection}\n                defaultDisplayEventEnd={defaultDisplayEventEnd}\n                {...getSegMeta(seg, todayRange)}\n              />\n            ) : (\n              <TableBlockEvent\n                seg={seg}\n                isDragging={isDragging}\n                isResizing={isResizing}\n                isDateSelecting={isDateSelecting}\n                isSelected={instanceId === eventSelection}\n                defaultDisplayEventEnd={defaultDisplayEventEnd}\n                {...getSegMeta(seg, todayRange)}\n              />\n            )}\n          </div>,\n        )\n      }\n    }\n\n    return nodes\n  }\n\n  renderFillSegs(segs: TableSeg[], fillType: string): VNode {\n    let { isRtl } = this.context\n    let { todayRange } = this.props\n    let { framePositions } = this.state\n    let nodes: VNode[] = []\n\n    if (framePositions) {\n      for (let seg of segs) {\n        let leftRightCss = isRtl ? {\n          right: 0,\n          left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol],\n        } : {\n          left: 0,\n          right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol],\n        }\n\n        nodes.push(\n          <div\n            key={buildEventRangeKey(seg.eventRange)}\n            className=\"fc-daygrid-bg-harness\"\n            style={leftRightCss}\n          >\n            {fillType === 'bg-event' ?\n              <BgEvent seg={seg} {...getSegMeta(seg, todayRange)} /> :\n              renderFill(fillType)}\n          </div>,\n        )\n      }\n    }\n\n    return createElement(Fragment, {}, ...nodes)\n  }\n\n  updateSizing(isExternalSizingChange) {\n    let { props, frameElRefs } = this\n\n    if (\n      !props.forPrint &&\n      props.clientWidth !== null // positioning ready?\n    ) {\n      if (isExternalSizingChange) {\n        let frameEls = props.cells.map((cell) => frameElRefs.currentMap[cell.key])\n\n        if (frameEls.length) {\n          let originEl = this.rootElRef.current\n\n          this.setState({ // will trigger isCellPositionsChanged...\n            framePositions: new PositionCache(\n              originEl,\n              frameEls,\n              true, // isHorizontal\n              false,\n            ),\n          })\n        }\n      }\n\n      const oldInstanceHeights = this.state.eventInstanceHeights\n      const newInstanceHeights = this.queryEventInstanceHeights()\n      const limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true\n\n      this.setState({\n        // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n        // Essentially, once you compute an element's height, never null-out.\n        // TODO: always display all events, as visibility:hidden?\n        eventInstanceHeights: { ...oldInstanceHeights, ...newInstanceHeights },\n\n        maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null,\n      })\n    }\n  }\n\n  queryEventInstanceHeights() {\n    let segElMap = this.segHarnessRefs.currentMap\n    let eventInstanceHeights: { [key: string]: number } = {}\n\n    // get the max height amongst instance segs\n    for (let key in segElMap) {\n      let height = Math.round(segElMap[key].getBoundingClientRect().height)\n      let instanceId = key.split(':')[0] // deconstruct how renderFgSegs makes the key\n      eventInstanceHeights[instanceId] = Math.max(eventInstanceHeights[instanceId] || 0, height)\n    }\n\n    return eventInstanceHeights\n  }\n\n  computeMaxContentHeight() {\n    let firstKey = this.props.cells[0].key\n    let cellEl = this.cellElRefs.currentMap[firstKey]\n    let fcContainerEl = this.fgElRefs.currentMap[firstKey]\n\n    return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top\n  }\n\n  public getCellEls() {\n    let elMap = this.cellElRefs.currentMap\n\n    return this.props.cells.map((cell) => elMap[cell.key])\n  }\n}\n\nTableRow.addStateEquality({\n  eventInstanceHeights: isPropsEqual,\n})\n\nfunction buildMirrorPlacements(mirrorSegs: TableSeg[], colPlacements: TableSegPlacement[][]): TableSegPlacement[] {\n  if (!mirrorSegs.length) {\n    return []\n  }\n  let topsByInstanceId = buildAbsoluteTopHash(colPlacements) // TODO: cache this at first render?\n  return mirrorSegs.map((seg: TableSeg) => ({\n    seg,\n    isVisible: true,\n    isAbsolute: true,\n    absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n    marginTop: 0,\n  }))\n}\n\nfunction buildAbsoluteTopHash(colPlacements: TableSegPlacement[][]): { [instanceId: string]: number } {\n  let topsByInstanceId: { [instanceId: string]: number } = {}\n\n  for (let placements of colPlacements) {\n    for (let placement of placements) {\n      topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop\n    }\n  }\n\n  return topsByInstanceId\n}\n","import {\n  EventSegUiInteractionState,\n  VNode,\n  DateComponent,\n  RefObject,\n  CssDimValue,\n  createElement,\n  PositionCache,\n  memoize,\n  addDays,\n  RefMap,\n  DateRange,\n  NowTimer,\n  DateMarker,\n  DateProfile,\n  Fragment,\n  Hit,\n  DayTableCell,\n} from '@fullcalendar/common'\nimport { TableSeg, splitSegsByRow, splitInteractionByRow } from './TableSeg'\nimport { TableRow } from './TableRow'\n\nexport interface TableProps {\n  dateProfile: DateProfile\n  cells: DayTableCell[][] // cells-BY-ROW\n  renderRowIntro?: () => VNode\n  colGroupNode: VNode\n  tableMinWidth: CssDimValue\n  expandRows: boolean\n  showWeekNumbers: boolean\n  clientWidth: number | null\n  clientHeight: number | null\n  businessHourSegs: TableSeg[]\n  bgEventSegs: TableSeg[]\n  fgEventSegs: TableSeg[]\n  dateSelectionSegs: TableSeg[]\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  dayMaxEvents: boolean | number\n  dayMaxEventRows: boolean | number\n  headerAlignElRef?: RefObject<HTMLElement>\n  forPrint: boolean\n  isHitComboAllowed?: (hit0: Hit, hit1: Hit) => boolean\n}\n\nexport class Table extends DateComponent<TableProps> {\n  private splitBusinessHourSegs = memoize(splitSegsByRow)\n  private splitBgEventSegs = memoize(splitSegsByRow)\n  private splitFgEventSegs = memoize(splitSegsByRow)\n  private splitDateSelectionSegs = memoize(splitSegsByRow)\n  private splitEventDrag = memoize(splitInteractionByRow)\n  private splitEventResize = memoize(splitInteractionByRow)\n  private rootEl: HTMLElement\n  private rowRefs = new RefMap<TableRow>()\n  private rowPositions: PositionCache\n  private colPositions: PositionCache\n\n  render() {\n    let { props } = this\n    let { dateProfile, dayMaxEventRows, dayMaxEvents, expandRows } = props\n    let rowCnt = props.cells.length\n\n    let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt)\n    let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt)\n    let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt)\n    let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt)\n    let eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt)\n    let eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt)\n\n    let limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true\n\n    // if rows can't expand to fill fixed height, can't do balanced-height event limit\n    // TODO: best place to normalize these options?\n    if (limitViaBalanced && !expandRows) {\n      limitViaBalanced = false\n      dayMaxEventRows = null\n      dayMaxEvents = null\n    }\n\n    let classNames = [\n      'fc-daygrid-body',\n      limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced', // will all row heights be equal?\n      expandRows ? '' : 'fc-daygrid-body-natural', // will height of one row depend on the others?\n    ]\n\n    return (\n      <div\n        className={classNames.join(' ')}\n        ref={this.handleRootEl}\n        style={{\n          // these props are important to give this wrapper correct dimensions for interactions\n          // TODO: if we set it here, can we avoid giving to inner tables?\n          width: props.clientWidth,\n          minWidth: props.tableMinWidth,\n        }}\n      >\n        <NowTimer unit=\"day\">\n          {(nowDate: DateMarker, todayRange: DateRange) => (\n            <Fragment>\n              <table\n                role=\"presentation\"\n                className=\"fc-scrollgrid-sync-table\"\n                style={{\n                  width: props.clientWidth,\n                  minWidth: props.tableMinWidth,\n                  height: expandRows ? props.clientHeight : '',\n                }}\n              >\n                {props.colGroupNode}\n                <tbody role=\"presentation\">\n                  {props.cells.map((cells, row) => (\n                    <TableRow\n                      ref={this.rowRefs.createRef(row)}\n                      key={\n                        cells.length\n                          ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */\n                          : row // in case there are no cells (like when resource view is loading)\n                      }\n                      showDayNumbers={rowCnt > 1}\n                      showWeekNumbers={props.showWeekNumbers}\n                      todayRange={todayRange}\n                      dateProfile={dateProfile}\n                      cells={cells}\n                      renderIntro={props.renderRowIntro}\n                      businessHourSegs={businessHourSegsByRow[row]}\n                      eventSelection={props.eventSelection}\n                      bgEventSegs={bgEventSegsByRow[row].filter(isSegAllDay) /* hack */}\n                      fgEventSegs={fgEventSegsByRow[row]}\n                      dateSelectionSegs={dateSelectionSegsByRow[row]}\n                      eventDrag={eventDragByRow[row]}\n                      eventResize={eventResizeByRow[row]}\n                      dayMaxEvents={dayMaxEvents}\n                      dayMaxEventRows={dayMaxEventRows}\n                      clientWidth={props.clientWidth}\n                      clientHeight={props.clientHeight}\n                      forPrint={props.forPrint}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            </Fragment>\n          )}\n        </NowTimer>\n      </div>\n    )\n  }\n\n  handleRootEl = (rootEl: HTMLElement | null) => {\n    this.rootEl = rootEl\n\n    if (rootEl) {\n      this.context.registerInteractiveComponent(this, {\n        el: rootEl,\n        isHitComboAllowed: this.props.isHitComboAllowed,\n      })\n    } else {\n      this.context.unregisterInteractiveComponent(this)\n    }\n  }\n\n  // Hit System\n  // ----------------------------------------------------------------------------------------------------\n\n  prepareHits() {\n    this.rowPositions = new PositionCache(\n      this.rootEl,\n      this.rowRefs.collect().map((rowObj) => rowObj.getCellEls()[0]), // first cell el in each row. TODO: not optimal\n      false,\n      true, // vertical\n    )\n\n    this.colPositions = new PositionCache(\n      this.rootEl,\n      this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n      true, // horizontal\n      false,\n    )\n  }\n\n  queryHit(positionLeft: number, positionTop: number): Hit {\n    let { colPositions, rowPositions } = this\n    let col = colPositions.leftToIndex(positionLeft)\n    let row = rowPositions.topToIndex(positionTop)\n\n    if (row != null && col != null) {\n      let cell = this.props.cells[row][col]\n\n      return {\n        dateProfile: this.props.dateProfile,\n        dateSpan: {\n          range: this.getCellRange(row, col),\n          allDay: true,\n          ...cell.extraDateSpan,\n        },\n        dayEl: this.getCellEl(row, col),\n        rect: {\n          left: colPositions.lefts[col],\n          right: colPositions.rights[col],\n          top: rowPositions.tops[row],\n          bottom: rowPositions.bottoms[row],\n        },\n        layer: 0,\n      }\n    }\n\n    return null\n  }\n\n  private getCellEl(row, col) {\n    return this.rowRefs.currentMap[row].getCellEls()[col] // TODO: not optimal\n  }\n\n  private getCellRange(row, col) {\n    let start = this.props.cells[row][col].date\n    let end = addDays(start, 1)\n    return { start, end }\n  }\n}\n\nfunction isSegAllDay(seg: TableSeg) {\n  return seg.eventRange.def.allDay\n}\n","import { DayTableModel, DateRange, Slicer } from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\n\nexport class DayTableSlicer extends Slicer<TableSeg, [DayTableModel]> {\n  forceDayIfListItem = true\n\n  sliceRange(dateRange: DateRange, dayTableModel: DayTableModel): TableSeg[] {\n    return dayTableModel.sliceRange(dateRange)\n  }\n}\n","import {\n  createElement, createRef, VNode,\n  EventStore,\n  EventUiHash,\n  DateSpan,\n  EventInteractionState,\n  DayTableModel,\n  Duration,\n  DateComponent,\n  ViewContext,\n  RefObject,\n  CssDimValue,\n  DateProfile,\n} from '@fullcalendar/common'\nimport { Table } from './Table'\nimport { DayTableSlicer } from './DayTableSlicer'\n\nexport interface DayTableProps {\n  dateProfile: DateProfile,\n  dayTableModel: DayTableModel\n  nextDayThreshold: Duration\n  businessHours: EventStore\n  eventStore: EventStore\n  eventUiBases: EventUiHash\n  dateSelection: DateSpan | null\n  eventSelection: string\n  eventDrag: EventInteractionState | null\n  eventResize: EventInteractionState | null\n  colGroupNode: VNode\n  tableMinWidth: CssDimValue\n  renderRowIntro?: () => VNode\n  dayMaxEvents: boolean | number\n  dayMaxEventRows: boolean | number\n  expandRows: boolean\n  showWeekNumbers: boolean\n  headerAlignElRef?: RefObject<HTMLElement> // for more popover alignment\n  clientWidth: number | null\n  clientHeight: number | null\n  forPrint: boolean\n}\n\nexport class DayTable extends DateComponent<DayTableProps, ViewContext> {\n  private slicer = new DayTableSlicer()\n  private tableRef = createRef<Table>()\n\n  render() {\n    let { props, context } = this\n\n    return (\n      <Table\n        ref={this.tableRef}\n        {...this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel)}\n        dateProfile={props.dateProfile}\n        cells={props.dayTableModel.cells}\n        colGroupNode={props.colGroupNode}\n        tableMinWidth={props.tableMinWidth}\n        renderRowIntro={props.renderRowIntro}\n        dayMaxEvents={props.dayMaxEvents}\n        dayMaxEventRows={props.dayMaxEventRows}\n        showWeekNumbers={props.showWeekNumbers}\n        expandRows={props.expandRows}\n        headerAlignElRef={props.headerAlignElRef}\n        clientWidth={props.clientWidth}\n        clientHeight={props.clientHeight}\n        forPrint={props.forPrint}\n      />\n    )\n  }\n}\n","import {\n  createElement, createRef,\n  DayHeader,\n  DateProfileGenerator,\n  DateProfile,\n  memoize,\n  DaySeriesModel,\n  DayTableModel,\n  ChunkContentCallbackArgs,\n} from '@fullcalendar/common'\nimport { TableView } from './TableView'\nimport { DayTable } from './DayTable'\n\nexport class DayTableView extends TableView {\n  private buildDayTableModel = memoize(buildDayTableModel)\n  private headerRef = createRef<DayHeader>()\n  private tableRef = createRef<DayTable>()\n\n  render() {\n    let { options, dateProfileGenerator } = this.context\n    let { props } = this\n    let dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator)\n\n    let headerContent = options.dayHeaders && (\n      <DayHeader\n        ref={this.headerRef}\n        dateProfile={props.dateProfile}\n        dates={dayTableModel.headerDates}\n        datesRepDistinctDays={dayTableModel.rowCnt === 1}\n      />\n    )\n\n    let bodyContent = (contentArg: ChunkContentCallbackArgs) => (\n      <DayTable\n        ref={this.tableRef}\n        dateProfile={props.dateProfile}\n        dayTableModel={dayTableModel}\n        businessHours={props.businessHours}\n        dateSelection={props.dateSelection}\n        eventStore={props.eventStore}\n        eventUiBases={props.eventUiBases}\n        eventSelection={props.eventSelection}\n        eventDrag={props.eventDrag}\n        eventResize={props.eventResize}\n        nextDayThreshold={options.nextDayThreshold}\n        colGroupNode={contentArg.tableColGroupNode}\n        tableMinWidth={contentArg.tableMinWidth}\n        dayMaxEvents={options.dayMaxEvents}\n        dayMaxEventRows={options.dayMaxEventRows}\n        showWeekNumbers={options.weekNumbers}\n        expandRows={!props.isHeightAuto}\n        headerAlignElRef={this.headerElRef}\n        clientWidth={contentArg.clientWidth}\n        clientHeight={contentArg.clientHeight}\n        forPrint={props.forPrint}\n      />\n    )\n\n    return options.dayMinWidth\n      ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth)\n      : this.renderSimpleLayout(headerContent, bodyContent)\n  }\n}\n\nexport function buildDayTableModel(dateProfile: DateProfile, dateProfileGenerator: DateProfileGenerator) {\n  let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator)\n\n  return new DayTableModel(\n    daySeries,\n    /year|month|week/.test(dateProfile.currentRangeUnit),\n  )\n}\n","import {\n  DateProfileGenerator,\n  addWeeks, diffWeeks,\n  DateRange,\n} from '@fullcalendar/common'\n\nexport class TableDateProfileGenerator extends DateProfileGenerator {\n  // Computes the date range that will be rendered.\n  buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay): DateRange {\n    let { dateEnv } = this.props\n    let renderRange = super.buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay)\n    let start = renderRange.start\n    let end = renderRange.end\n    let endOfWeek\n\n    // year and month views should be aligned with weeks. this is already done for week\n    if (/^(year|month)$/.test(currentRangeUnit)) {\n      start = dateEnv.startOfWeek(start)\n\n      // make end-of-week if not already\n      endOfWeek = dateEnv.startOfWeek(end)\n      if (endOfWeek.valueOf() !== end.valueOf()) {\n        end = addWeeks(endOfWeek, 1)\n      }\n    }\n\n    // ensure 6 weeks\n    if (\n      this.props.monthMode &&\n      this.props.fixedWeekCount\n    ) {\n      let rowCnt = Math.ceil( // could be partial weeks due to hiddenDays\n        diffWeeks(start, end),\n      )\n      end = addWeeks(end, 6 - rowCnt)\n    }\n\n    return { start, end }\n  }\n}\n","import { createPlugin } from '@fullcalendar/common'\nimport { DayTableView } from './DayTableView'\nimport { TableDateProfileGenerator } from './TableDateProfileGenerator'\nimport './main.css'\n\nexport { DayTable } from './DayTable'\nexport { DayTableSlicer } from './DayTableSlicer'\nexport { Table } from './Table'\nexport { TableSeg } from './TableSeg'\nexport { TableView } from './TableView'\nexport { buildDayTableModel } from './DayTableView'\nexport { DayTableView as DayGridView } // export as old name!\n\nexport default createPlugin({\n  initialView: 'dayGridMonth',\n  views: {\n\n    dayGrid: {\n      component: DayTableView,\n      dateProfileGeneratorClass: TableDateProfileGenerator,\n    },\n\n    dayGridDay: {\n      type: 'dayGrid',\n      duration: { days: 1 },\n    },\n\n    dayGridWeek: {\n      type: 'dayGrid',\n      duration: { weeks: 1 },\n    },\n\n    dayGridMonth: {\n      type: 'dayGrid',\n      duration: { months: 1 },\n      monthMode: true,\n      fixedWeekCount: true,\n    },\n\n  },\n})\n"]},"metadata":{},"sourceType":"module"}