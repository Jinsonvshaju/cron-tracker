{"ast":null,"code":"var _jsxFileName = \"/home/jinsonshaju/collateral/collateral-email-tracker/src/components/crondetails/crondetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport FileUpload from \"../fileUpload/FileUpload.jsx\";\nimport { API } from \"../util/api/Api.js\";\nimport \"./crondetails.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet api = new API();\n\nfunction CronDetails(props) {\n  _s();\n\n  const [records, setRecords] = useState([]);\n  const [isFileUploaded, setFileUploaded] = useState(false);\n  console.log(isFileUploaded);\n  useEffect(() => {\n    getEntries();\n    console.log(\"Cron Input form page reloaded\"); //eslint-disable-next-line\n  }, [isFileUploaded]);\n\n  const getEntries = () => {\n    return new Promise(resolve => {\n      api.getRecords().then(res => {\n        setRecords(res.data.message);\n        console.log(Object.keys(res.data.message[0]));\n        console.log(res.data.message.map((value, key) => {\n          return Object.values(value);\n        }));\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FileUpload, {\n      uploadFlag: {\n        set: setFileUploaded,\n        get: isFileUploaded\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), records.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(records[0]).map(element => {\n              return /*#__PURE__*/_jsxDEV(\"th\", {\n                children: element\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 26\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), records.map((val, key) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.values(val).map(value => {\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 30\n                }, this);\n              })\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CronDetails, \"PLxZ16kyYbXtG8/o+drQ/F2azDs=\");\n\n_c = CronDetails;\nexport default CronDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CronDetails\");","map":{"version":3,"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/src/components/crondetails/crondetails.jsx"],"names":["React","useState","useEffect","FileUpload","API","api","CronDetails","props","records","setRecords","isFileUploaded","setFileUploaded","console","log","getEntries","Promise","resolve","getRecords","then","res","data","message","Object","keys","map","value","key","values","catch","err","set","get","length","element","val"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAO,mBAAP;;AACA,IAAIC,GAAG,GAAG,IAAID,GAAJ,EAAV;;AAEA,SAASE,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAES,cAAF,EAAiBC,eAAjB,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU;AACVF,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAFc,CAGd;AACD,GAJQ,EAIN,CAACH,cAAD,CAJM,CAAT;;AAMA,QAAMI,UAAU,GAAG,MAAM;AACvB,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9BX,MAAAA,GAAG,CACAY,UADH,GAEGC,IAFH,CAESC,GAAD,IAAS;AACbV,QAAAA,UAAU,CAACU,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAV;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYS,MAAM,CAACC,IAAP,CAAYJ,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAAZ,CAAZ;AACAT,QAAAA,OAAO,CAACC,GAAR,CACEM,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBG,GAAjB,CAAqB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACnC,iBAAOJ,MAAM,CAACK,MAAP,CAAcF,KAAd,CAAP;AACD,SAFD,CADF;AAKD,OAVH,EAWGG,KAXH,CAWUC,GAAD,IAAS;AACdjB,QAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;AACD,OAbH;AAcD,KAfM,CAAP;AAgBD,GAjBD;;AAmBA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,UAAU,EAAE;AAACC,QAAAA,GAAG,EAACnB,eAAL;AAAqBoB,QAAAA,GAAG,EAACrB;AAAzB;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,OAAO,CAACwB,MAAR,GAAiB,CAAjB,gBACC;AAAA,6BACE;AAAA,+BACE;AAAA,kCACE;AAAA,sBACGV,MAAM,CAACC,IAAP,CAAYf,OAAO,CAAC,CAAD,CAAnB,EAAwBgB,GAAxB,CAA6BS,OAAD,IAAa;AACxC,kCAAO;AAAA,0BAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFA;AADH;AAAA;AAAA;AAAA;AAAA,kBADF,EAMGzB,OAAO,CAACgB,GAAR,CAAY,CAACU,GAAD,EAAMR,GAAN,KAAc;AACzB,gCACE;AAAA,wBACGJ,MAAM,CAACK,MAAP,CAAcO,GAAd,EAAmBV,GAAnB,CAAwBC,KAAD,IAAW;AACjC,oCAAO;AAAA,4BAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,eAFA;AADH,eAASC,GAAT;AAAA;AAAA;AAAA;AAAA,oBADF;AAOD,WARA,CANH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,GAsBC,EAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GA3DQpB,W;;KAAAA,W;AA6DT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport FileUpload from \"../fileUpload/FileUpload.jsx\";\nimport { API } from \"../util/api/Api.js\";\nimport \"./crondetails.css\";\nlet api = new API();\n\nfunction CronDetails(props) {\n  const [records, setRecords] = useState([]);\n  const [ isFileUploaded,setFileUploaded]=useState(false);\n  console.log(isFileUploaded);\n\n  useEffect(() => {\n    getEntries();\n    console.log(\"Cron Input form page reloaded\");\n    //eslint-disable-next-line\n  }, [isFileUploaded]);\n\n  const getEntries = () => {\n    return new Promise((resolve) => {\n      api\n        .getRecords()\n        .then((res) => {\n          setRecords(res.data.message);\n          console.log(Object.keys(res.data.message[0]));\n          console.log(\n            res.data.message.map((value, key) => {\n              return Object.values(value);\n            })\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    });\n  };\n\n  return (\n    <div>\n      <FileUpload uploadFlag={{set:setFileUploaded,get:isFileUploaded}}/>\n      {records.length > 0 ? (\n        <div >\n          <table>\n            <tbody>\n              <tr>\n                {Object.keys(records[0]).map((element) => {\n                  return <th>{element}</th>;\n                })}\n              </tr>\n              {records.map((val, key) => {\n                return (\n                  <tr key={key}>\n                    {Object.values(val).map((value) => {\n                      return <td>{value}</td>;\n                    })}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default CronDetails;\n"]},"metadata":{},"sourceType":"module"}