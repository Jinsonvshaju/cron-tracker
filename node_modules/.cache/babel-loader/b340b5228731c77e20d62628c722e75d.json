{"ast":null,"code":"import bindActionCreators from '../utils/bindActionCreators';\nimport { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps';\nimport { createInvalidArgFactory } from './invalidArgFactory';\nexport function mapDispatchToPropsFactory(mapDispatchToProps) {\n  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? wrapMapToPropsConstant(function (dispatch) {\n    return (// @ts-ignore\n      bindActionCreators(mapDispatchToProps, dispatch)\n    );\n  }) : !mapDispatchToProps ? wrapMapToPropsConstant(function (dispatch) {\n    return {\n      dispatch: dispatch\n    };\n  }) : typeof mapDispatchToProps === 'function' ? // @ts-ignore\n  wrapMapToPropsFunc(mapDispatchToProps, 'mapDispatchToProps') : createInvalidArgFactory(mapDispatchToProps, 'mapDispatchToProps');\n}","map":{"version":3,"sources":["/home/jinsonshaju/GIT/cron-tracker/node_modules/react-redux/es/connect/mapDispatchToProps.js"],"names":["bindActionCreators","wrapMapToPropsConstant","wrapMapToPropsFunc","createInvalidArgFactory","mapDispatchToPropsFactory","mapDispatchToProps","dispatch"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,6BAA/B;AACA,SAASC,sBAAT,EAAiCC,kBAAjC,QAA2D,kBAA3D;AACA,SAASC,uBAAT,QAAwC,qBAAxC;AACA,OAAO,SAASC,yBAAT,CAAmCC,kBAAnC,EAAuD;AAC5D,SAAOA,kBAAkB,IAAI,OAAOA,kBAAP,KAA8B,QAApD,GAA+DJ,sBAAsB,CAAC,UAAAK,QAAQ;AAAA,WAAI;AACzGN,MAAAA,kBAAkB,CAACK,kBAAD,EAAqBC,QAArB;AADmF;AAAA,GAAT,CAArF,GAC6C,CAACD,kBAAD,GAAsBJ,sBAAsB,CAAC,UAAAK,QAAQ;AAAA,WAAK;AAC5GA,MAAAA,QAAQ,EAARA;AAD4G,KAAL;AAAA,GAAT,CAA5C,GAE9C,OAAOD,kBAAP,KAA8B,UAA9B,GAA2C;AACjDH,EAAAA,kBAAkB,CAACG,kBAAD,EAAqB,oBAArB,CADZ,GACyDF,uBAAuB,CAACE,kBAAD,EAAqB,oBAArB,CAJtF;AAKD","sourcesContent":["import bindActionCreators from '../utils/bindActionCreators';\nimport { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps';\nimport { createInvalidArgFactory } from './invalidArgFactory';\nexport function mapDispatchToPropsFactory(mapDispatchToProps) {\n  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? wrapMapToPropsConstant(dispatch => // @ts-ignore\n  bindActionCreators(mapDispatchToProps, dispatch)) : !mapDispatchToProps ? wrapMapToPropsConstant(dispatch => ({\n    dispatch\n  })) : typeof mapDispatchToProps === 'function' ? // @ts-ignore\n  wrapMapToPropsFunc(mapDispatchToProps, 'mapDispatchToProps') : createInvalidArgFactory(mapDispatchToProps, 'mapDispatchToProps');\n}"]},"metadata":{},"sourceType":"module"}