{"ast":null,"code":"/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Boundary, Classes, Position, removeNonHTMLProps } from \"../../common\";\nimport { Menu } from \"../menu/menu\";\nimport { MenuItem } from \"../menu/menuItem\";\nimport { OverflowList } from \"../overflow-list/overflowList\";\nimport { Popover } from \"../popover/popover\";\nimport { Breadcrumb } from \"./breadcrumb\";\n\nvar Breadcrumbs =\n/** @class */\nfunction (_super) {\n  __extends(Breadcrumbs, _super);\n\n  function Breadcrumbs() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.renderOverflow = function (items) {\n      var collapseFrom = _this.props.collapseFrom;\n      var position = collapseFrom === Boundary.END ? Position.BOTTOM_RIGHT : Position.BOTTOM_LEFT;\n      var orderedItems = items;\n\n      if (collapseFrom === Boundary.START) {\n        // If we're collapsing from the start, the menu should be read from the bottom to the\n        // top, continuing with the breadcrumbs to the right. Since this means the first\n        // breadcrumb in the props must be the last in the menu, we need to reverse the overlow\n        // order.\n        orderedItems = items.slice().reverse();\n      }\n      /* eslint-disable deprecation/deprecation */\n\n\n      return React.createElement(\"li\", null, React.createElement(Popover, __assign({\n        position: position,\n        disabled: orderedItems.length === 0,\n        content: React.createElement(Menu, null, orderedItems.map(_this.renderOverflowBreadcrumb))\n      }, _this.props.popoverProps), React.createElement(\"span\", {\n        className: Classes.BREADCRUMBS_COLLAPSED\n      })));\n      /* eslint-enable deprecation/deprecation */\n    };\n\n    _this.renderOverflowBreadcrumb = function (props, index) {\n      var isClickable = props.href != null || props.onClick != null;\n      var htmlProps = removeNonHTMLProps(props);\n      return React.createElement(MenuItem, __assign({\n        disabled: !isClickable\n      }, htmlProps, {\n        text: props.text,\n        key: index\n      }));\n    };\n\n    _this.renderBreadcrumbWrapper = function (props, index) {\n      var isCurrent = _this.props.items[_this.props.items.length - 1] === props;\n      return React.createElement(\"li\", {\n        key: index\n      }, _this.renderBreadcrumb(props, isCurrent));\n    };\n\n    return _this;\n  }\n\n  Breadcrumbs.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        collapseFrom = _a.collapseFrom,\n        items = _a.items,\n        minVisibleItems = _a.minVisibleItems,\n        _b = _a.overflowListProps,\n        overflowListProps = _b === void 0 ? {} : _b;\n    return React.createElement(OverflowList, __assign({\n      collapseFrom: collapseFrom,\n      minVisibleItems: minVisibleItems,\n      tagName: \"ul\"\n    }, overflowListProps, {\n      className: classNames(Classes.BREADCRUMBS, overflowListProps.className, className),\n      items: items,\n      overflowRenderer: this.renderOverflow,\n      visibleItemRenderer: this.renderBreadcrumbWrapper\n    }));\n  };\n\n  Breadcrumbs.prototype.renderBreadcrumb = function (props, isCurrent) {\n    if (isCurrent && this.props.currentBreadcrumbRenderer != null) {\n      return this.props.currentBreadcrumbRenderer(props);\n    } else if (this.props.breadcrumbRenderer != null) {\n      return this.props.breadcrumbRenderer(props);\n    } else {\n      // allow user to override 'current' prop\n      return React.createElement(Breadcrumb, __assign({\n        current: isCurrent\n      }, props));\n    }\n  };\n\n  Breadcrumbs.defaultProps = {\n    collapseFrom: Boundary.START\n  };\n  return Breadcrumbs;\n}(AbstractPureComponent2);\n\nexport { Breadcrumbs };","map":{"version":3,"mappings":"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","names":["classNames","React","AbstractPureComponent2","Boundary","Classes","Position","removeNonHTMLProps","Menu","MenuItem","OverflowList","Popover","Breadcrumb","__extends","_this","items","props","collapseFrom","position","END","BOTTOM_RIGHT","BOTTOM_LEFT","orderedItems","START","slice","reverse","__assign","disabled","length","content","map","renderOverflowBreadcrumb","popoverProps","className","BREADCRUMBS_COLLAPSED","index","isClickable","href","onClick","htmlProps","text","key","isCurrent","renderBreadcrumb","Breadcrumbs","minVisibleItems","_b","overflowListProps","tagName","BREADCRUMBS","overflowRenderer","renderOverflow","visibleItemRenderer","renderBreadcrumbWrapper","currentBreadcrumbRenderer","breadcrumbRenderer","current"],"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/node_modules/@blueprintjs/core/src/components/breadcrumbs/breadcrumbs.tsx"],"sourcesContent":["/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Boundary, Classes, Props, Position, removeNonHTMLProps } from \"../../common\";\nimport { Menu } from \"../menu/menu\";\nimport { MenuItem } from \"../menu/menuItem\";\nimport { OverflowListProps, OverflowList } from \"../overflow-list/overflowList\";\nimport { IPopoverProps, Popover } from \"../popover/popover\";\nimport { Breadcrumb, BreadcrumbProps } from \"./breadcrumb\";\n\n// eslint-disable-next-line deprecation/deprecation\nexport type BreadcrumbsProps = IBreadcrumbsProps;\n/** @deprecated use BreadcrumbsProps */\nexport interface IBreadcrumbsProps extends Props {\n    /**\n     * Callback invoked to render visible breadcrumbs. Best practice is to\n     * render a `<Breadcrumb>` element. If `currentBreadcrumbRenderer` is also\n     * supplied, that callback will be used for the current breadcrumb instead.\n     *\n     * @default Breadcrumb\n     */\n    breadcrumbRenderer?: (props: BreadcrumbProps) => JSX.Element;\n\n    /**\n     * Which direction the breadcrumbs should collapse from: start or end.\n     *\n     * @default Boundary.START\n     */\n    collapseFrom?: Boundary;\n\n    /**\n     * Callback invoked to render the current breadcrumb, which is the last\n     * element in the `items` array.\n     *\n     * If this prop is omitted, `breadcrumbRenderer` will be invoked for the\n     * current breadcrumb instead.\n     */\n    currentBreadcrumbRenderer?: (props: BreadcrumbProps) => JSX.Element;\n\n    /**\n     * All breadcrumbs to display. Breadcrumbs that do not fit in the container\n     * will be rendered in an overflow menu instead.\n     */\n    items: readonly BreadcrumbProps[];\n\n    /**\n     * The minimum number of visible breadcrumbs that should never collapse into\n     * the overflow menu, regardless of DOM dimensions.\n     *\n     * @default 0\n     */\n    minVisibleItems?: number;\n\n    /**\n     * Props to spread to `OverflowList`. Note that `items`,\n     * `overflowRenderer`, and `visibleItemRenderer` cannot be changed.\n     */\n    overflowListProps?: Partial<OverflowListProps<BreadcrumbProps>>;\n\n    /**\n     * Props to spread to the `Popover` showing the overflow menu.\n     */\n    popoverProps?: IPopoverProps;\n}\n\nexport class Breadcrumbs extends AbstractPureComponent2<BreadcrumbsProps> {\n    public static defaultProps: Partial<BreadcrumbsProps> = {\n        collapseFrom: Boundary.START,\n    };\n\n    public render() {\n        const { className, collapseFrom, items, minVisibleItems, overflowListProps = {} } = this.props;\n        return (\n            <OverflowList\n                collapseFrom={collapseFrom}\n                minVisibleItems={minVisibleItems}\n                tagName=\"ul\"\n                {...overflowListProps}\n                className={classNames(Classes.BREADCRUMBS, overflowListProps.className, className)}\n                items={items}\n                overflowRenderer={this.renderOverflow}\n                visibleItemRenderer={this.renderBreadcrumbWrapper}\n            />\n        );\n    }\n\n    private renderOverflow = (items: readonly BreadcrumbProps[]) => {\n        const { collapseFrom } = this.props;\n        const position = collapseFrom === Boundary.END ? Position.BOTTOM_RIGHT : Position.BOTTOM_LEFT;\n        let orderedItems = items;\n        if (collapseFrom === Boundary.START) {\n            // If we're collapsing from the start, the menu should be read from the bottom to the\n            // top, continuing with the breadcrumbs to the right. Since this means the first\n            // breadcrumb in the props must be the last in the menu, we need to reverse the overlow\n            // order.\n            orderedItems = items.slice().reverse();\n        }\n\n        /* eslint-disable deprecation/deprecation */\n        return (\n            <li>\n                <Popover\n                    position={position}\n                    disabled={orderedItems.length === 0}\n                    content={<Menu>{orderedItems.map(this.renderOverflowBreadcrumb)}</Menu>}\n                    {...this.props.popoverProps}\n                >\n                    <span className={Classes.BREADCRUMBS_COLLAPSED} />\n                </Popover>\n            </li>\n        );\n        /* eslint-enable deprecation/deprecation */\n    };\n\n    private renderOverflowBreadcrumb = (props: BreadcrumbProps, index: number) => {\n        const isClickable = props.href != null || props.onClick != null;\n        const htmlProps = removeNonHTMLProps(props);\n        return <MenuItem disabled={!isClickable} {...htmlProps} text={props.text} key={index} />;\n    };\n\n    private renderBreadcrumbWrapper = (props: BreadcrumbProps, index: number) => {\n        const isCurrent = this.props.items[this.props.items.length - 1] === props;\n        return <li key={index}>{this.renderBreadcrumb(props, isCurrent)}</li>;\n    };\n\n    private renderBreadcrumb(props: BreadcrumbProps, isCurrent: boolean) {\n        if (isCurrent && this.props.currentBreadcrumbRenderer != null) {\n            return this.props.currentBreadcrumbRenderer(props);\n        } else if (this.props.breadcrumbRenderer != null) {\n            return this.props.breadcrumbRenderer(props);\n        } else {\n            // allow user to override 'current' prop\n            return <Breadcrumb current={isCurrent} {...props} />;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}