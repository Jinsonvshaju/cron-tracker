{"ast":null,"code":"var _jsxFileName = \"/home/jinsonshaju/collateral/collateral-email-tracker/src/components/routes/home/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport FullCalendar from \"@fullcalendar/react\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport { useState, useEffect } from \"react\";\nimport { API } from \"../../util/api/Api.js\";\nimport \"./home.css\";\nimport moment from \"moment\";\nimport POPup from \"../../popup/popup.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet api = new API();\n\nfunction Home(props) {\n  _s();\n\n  const [timeMap, setTimeMap] = useState(new Map());\n  const [events, setEvents] = useState([]);\n  const [displayMap, setDisplayMap] = useState({});\n  const [popup, setPopup] = useState(false);\n  const stateValue = {\n    popup,\n    setPopup\n  };\n\n  const getEventKey = time => {\n    return moment(time).local().format(\"YYYY-MM-DDTkk:mm:ss\");\n  };\n\n  const getEndTime = time => {\n    const dateTime = new Date(time);\n    dateTime.setSeconds(dateTime.getSeconds() + 1);\n    return moment(dateTime).local().format(\"YYYY-MM-DDTkk:mm:ss\");\n  };\n\n  useEffect(() => {\n    handleReload();\n    console.log(\"Home page Reloaded\"); //eslint-disable-next-line\n  }, []);\n\n  const handleEventClick = _ref => {\n    let {\n      event\n    } = _ref;\n    const key = getEventKey(event.start);\n    var messages = [];\n    var entries = Object.values(timeMap.get(key));\n    entries.forEach(element => {\n      var message = [];\n      Object.values(element).forEach(values => {\n        message = message + Object.values(values);\n      });\n      messages.push(message);\n    });\n    setDisplayMap({\n      key: key,\n      values: messages\n    });\n    setPopup(true);\n  };\n\n  const handleReload = () => {\n    return new Promise(resolve => {\n      api.getTriggerTimes().then(res => {\n        var startTimeMap = new Map();\n        var newEvents = [];\n        res.data.message.forEach(details => {\n          var {\n            triggerTimes,\n            ...props\n          } = details;\n          triggerTimes.forEach(element => {\n            const newList = startTimeMap.has(getEventKey(element)) ? startTimeMap.get(getEventKey(element)).concat([{\n              props\n            }]) : [{\n              props\n            }];\n            startTimeMap.set(getEventKey(element), newList);\n          });\n        });\n        startTimeMap.forEach((value, key) => {\n          if (!isNaN(new Date(key).getTime())) {\n            newEvents.push({\n              title: \"Event \" + newEvents.length,\n              start: key,\n              end: getEndTime(key)\n            });\n          }\n        });\n        setEvents(newEvents);\n        setTimeMap(startTimeMap);\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(POPup, {\n        elementsMap: displayMap,\n        stateValue: stateValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [timeGridPlugin],\n        timeZone: \"local\",\n        initialView: \"timeGridWeek\",\n        allDaySlot: false,\n        eventMinHeight: 20,\n        headerToolbar: {\n          left: \"prev,next\",\n          center: \"title\",\n          right: \"today\"\n        },\n        buttonText: {\n          today: \"Current Week\"\n        },\n        eventClick: handleEventClick,\n        slotDuration: \"00:10:00\",\n        events: events,\n        slotLabelInterval: \"00:30:00\",\n        nowIndicator: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"6IonWiyGnohCg43ur8w7LR5oHKY=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/src/components/routes/home/Home.jsx"],"names":["FullCalendar","timeGridPlugin","useState","useEffect","API","moment","POPup","api","Home","props","timeMap","setTimeMap","Map","events","setEvents","displayMap","setDisplayMap","popup","setPopup","stateValue","getEventKey","time","local","format","getEndTime","dateTime","Date","setSeconds","getSeconds","handleReload","console","log","handleEventClick","event","key","start","messages","entries","Object","values","get","forEach","element","message","push","Promise","resolve","getTriggerTimes","then","res","startTimeMap","newEvents","data","details","triggerTimes","newList","has","concat","set","value","isNaN","getTime","title","length","end","catch","err","left","center","right","today"],"mappings":"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","sourcesContent":["import FullCalendar from \"@fullcalendar/react\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport { useState, useEffect } from \"react\";\nimport { API } from \"../../util/api/Api.js\";\nimport \"./home.css\";\nimport moment from \"moment\";\nimport POPup from \"../../popup/popup.jsx\";\n\nlet api = new API();\n\nfunction Home(props) {\n  const [timeMap, setTimeMap] = useState(new Map());\n  const [events, setEvents] = useState([]);\n  const [displayMap, setDisplayMap] = useState({});\n  const [popup, setPopup] = useState(false);\n  const stateValue = { popup, setPopup };\n\n  const getEventKey = (time) => {\n    return moment(time).local().format(\"YYYY-MM-DDTkk:mm:ss\");\n  };\n\n  const getEndTime = (time) => {\n    const dateTime = new Date(time);\n    dateTime.setSeconds(dateTime.getSeconds() + 1);\n    return moment(dateTime).local().format(\"YYYY-MM-DDTkk:mm:ss\");\n  };\n\n  useEffect(() => {\n    handleReload();\n    console.log(\"Home page Reloaded\");\n    //eslint-disable-next-line\n  }, []);\n\n  const handleEventClick = ({ event }) => {\n    const key = getEventKey(event.start);\n    var messages = [];\n    var entries = Object.values(timeMap.get(key));\n\n    entries.forEach((element) => {\n      var message=[];\n      Object.values(element).forEach((values) => {\n        message = message + Object.values(values);\n      });\n      messages.push(message);\n    });\n    setDisplayMap({ key: key, values: messages });\n    setPopup(true);\n  };\n\n  const handleReload = () => {\n    return new Promise((resolve) => {\n      api\n        .getTriggerTimes()\n        .then((res) => {\n          var startTimeMap = new Map();\n          var newEvents = [];\n          res.data.message.forEach((details) => {\n            var { triggerTimes, ...props } = details;\n            triggerTimes.forEach((element) => {\n              const newList = startTimeMap.has(getEventKey(element))\n                ? startTimeMap.get(getEventKey(element)).concat([{ props }])\n                : [{ props }];\n              startTimeMap.set(getEventKey(element), newList);\n            });\n          });\n          startTimeMap.forEach((value, key) => {\n            if (!isNaN(new Date(key).getTime())) {\n              newEvents.push({\n                title: \"Event \" + newEvents.length,\n                start: key,\n                end: getEndTime(key),\n              });\n            }\n          });\n          setEvents(newEvents);\n          setTimeMap(startTimeMap);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    });\n  };\n\n  return (\n    <div>\n      <div>\n        <POPup elementsMap={displayMap} stateValue={stateValue}></POPup>\n        <FullCalendar\n          plugins={[timeGridPlugin]}\n          timeZone=\"local\"\n          initialView=\"timeGridWeek\"\n          allDaySlot={false}\n          eventMinHeight={20}\n          headerToolbar={{\n            left: \"prev,next\",\n            center: \"title\",\n            right: \"today\",\n          }}\n          buttonText={{ today: \"Current Week\" }}\n          eventClick={handleEventClick}\n          slotDuration=\"00:10:00\"\n          events={events}\n          slotLabelInterval=\"00:30:00\"\n          nowIndicator={true}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}