{"ast":null,"code":"'use strict';\n\nvar functionsHaveConfigurableNames = require('functions-have-names').functionsHaveConfigurableNames();\n\nvar $Object = Object;\nvar $TypeError = TypeError;\n\nmodule.exports = function flags() {\n  if (this != null && this !== $Object(this)) {\n    throw new $TypeError('RegExp.prototype.flags getter called on non-object');\n  }\n\n  var result = '';\n\n  if (this.hasIndices) {\n    result += 'd';\n  }\n\n  if (this.global) {\n    result += 'g';\n  }\n\n  if (this.ignoreCase) {\n    result += 'i';\n  }\n\n  if (this.multiline) {\n    result += 'm';\n  }\n\n  if (this.dotAll) {\n    result += 's';\n  }\n\n  if (this.unicode) {\n    result += 'u';\n  }\n\n  if (this.sticky) {\n    result += 'y';\n  }\n\n  return result;\n};\n\nif (functionsHaveConfigurableNames && Object.defineProperty) {\n  Object.defineProperty(module.exports, 'name', {\n    value: 'get flags'\n  });\n}","map":{"version":3,"sources":["/home/jinsonshaju/collateral/collateral-email-tracker/node_modules/regexp.prototype.flags/implementation.js"],"names":["functionsHaveConfigurableNames","require","$Object","Object","$TypeError","TypeError","module","exports","flags","result","hasIndices","global","ignoreCase","multiline","dotAll","unicode","sticky","defineProperty","value"],"mappings":"AAAA;;AAEA,IAAIA,8BAA8B,GAAGC,OAAO,CAAC,sBAAD,CAAP,CAAgCD,8BAAhC,EAArC;;AAEA,IAAIE,OAAO,GAAGC,MAAd;AACA,IAAIC,UAAU,GAAGC,SAAjB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,KAAT,GAAiB;AACjC,MAAI,QAAQ,IAAR,IAAgB,SAASN,OAAO,CAAC,IAAD,CAApC,EAA4C;AAC3C,UAAM,IAAIE,UAAJ,CAAe,oDAAf,CAAN;AACA;;AACD,MAAIK,MAAM,GAAG,EAAb;;AACA,MAAI,KAAKC,UAAT,EAAqB;AACpBD,IAAAA,MAAM,IAAI,GAAV;AACA;;AACD,MAAI,KAAKE,MAAT,EAAiB;AAChBF,IAAAA,MAAM,IAAI,GAAV;AACA;;AACD,MAAI,KAAKG,UAAT,EAAqB;AACpBH,IAAAA,MAAM,IAAI,GAAV;AACA;;AACD,MAAI,KAAKI,SAAT,EAAoB;AACnBJ,IAAAA,MAAM,IAAI,GAAV;AACA;;AACD,MAAI,KAAKK,MAAT,EAAiB;AAChBL,IAAAA,MAAM,IAAI,GAAV;AACA;;AACD,MAAI,KAAKM,OAAT,EAAkB;AACjBN,IAAAA,MAAM,IAAI,GAAV;AACA;;AACD,MAAI,KAAKO,MAAT,EAAiB;AAChBP,IAAAA,MAAM,IAAI,GAAV;AACA;;AACD,SAAOA,MAAP;AACA,CA3BD;;AA6BA,IAAIT,8BAA8B,IAAIG,MAAM,CAACc,cAA7C,EAA6D;AAC5Dd,EAAAA,MAAM,CAACc,cAAP,CAAsBX,MAAM,CAACC,OAA7B,EAAsC,MAAtC,EAA8C;AAAEW,IAAAA,KAAK,EAAE;AAAT,GAA9C;AACA","sourcesContent":["'use strict';\n\nvar functionsHaveConfigurableNames = require('functions-have-names').functionsHaveConfigurableNames();\n\nvar $Object = Object;\nvar $TypeError = TypeError;\n\nmodule.exports = function flags() {\n\tif (this != null && this !== $Object(this)) {\n\t\tthrow new $TypeError('RegExp.prototype.flags getter called on non-object');\n\t}\n\tvar result = '';\n\tif (this.hasIndices) {\n\t\tresult += 'd';\n\t}\n\tif (this.global) {\n\t\tresult += 'g';\n\t}\n\tif (this.ignoreCase) {\n\t\tresult += 'i';\n\t}\n\tif (this.multiline) {\n\t\tresult += 'm';\n\t}\n\tif (this.dotAll) {\n\t\tresult += 's';\n\t}\n\tif (this.unicode) {\n\t\tresult += 'u';\n\t}\n\tif (this.sticky) {\n\t\tresult += 'y';\n\t}\n\treturn result;\n};\n\nif (functionsHaveConfigurableNames && Object.defineProperty) {\n\tObject.defineProperty(module.exports, 'name', { value: 'get flags' });\n}\n"]},"metadata":{},"sourceType":"script"}